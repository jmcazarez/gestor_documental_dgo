import { ElementRef, NgZone, OnInit, Renderer2 } from '@angular/core';
/**
 * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.
 * ```html
  <div style="overflow: scroll" mwlDraggableScrollContainer>
    <div mwlDraggable>Drag me!</div>
  </div>
  ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class DraggableScrollContainerDirective implements OnInit {
    elementRef: ElementRef<HTMLElement>;
    private renderer;
    private zone;
    /**
     * Trigger the DragStart after a long touch in scrollable container when true
     */
    activeLongPressDrag: boolean;
    /**
     * Configuration of a long touch
     * Duration in ms of a long touch before activating DragStart
     * Delta of the
     */
    longPressConfig: {
        duration: number;
        delta: number;
    };
    private cancelledScroll;
    /**
     * @hidden
     */
    constructor(elementRef: ElementRef<HTMLElement>, renderer: Renderer2, zone: NgZone);
    ngOnInit(): void;
    /**
     * @hidden
     */
    disableScroll(): void;
    /**
     * @hidden
     */
    enableScroll(): void;
    /**
     * @hidden
     */
    hasScrollbar(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DraggableScrollContainerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DraggableScrollContainerDirective, "[mwlDraggableScrollContainer]", never, { "activeLongPressDrag": "activeLongPressDrag"; "longPressConfig": "longPressConfig"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2dhYmxlLXNjcm9sbC1jb250YWluZXIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImRyYWdnYWJsZS1zY3JvbGwtY29udGFpbmVyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE5nWm9uZSwgT25Jbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogSWYgdGhlIHdpbmRvdyBpc24ndCBzY3JvbGxhYmxlLCB0aGVuIHBsYWNlIHRoaXMgb24gdGhlIHNjcm9sbGFibGUgY29udGFpbmVyIHRoYXQgZHJhZ2dhYmxlIGVsZW1lbnRzIGFyZSBpbnNpZGUuIGUuZy5cbiAqIGBgYGh0bWxcbiAgPGRpdiBzdHlsZT1cIm92ZXJmbG93OiBzY3JvbGxcIiBtd2xEcmFnZ2FibGVTY3JvbGxDb250YWluZXI+XG4gICAgPGRpdiBtd2xEcmFnZ2FibGU+RHJhZyBtZSE8L2Rpdj5cbiAgPC9kaXY+XG4gIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEcmFnZ2FibGVTY3JvbGxDb250YWluZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXIgdGhlIERyYWdTdGFydCBhZnRlciBhIGxvbmcgdG91Y2ggaW4gc2Nyb2xsYWJsZSBjb250YWluZXIgd2hlbiB0cnVlXG4gICAgICovXG4gICAgYWN0aXZlTG9uZ1ByZXNzRHJhZzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBDb25maWd1cmF0aW9uIG9mIGEgbG9uZyB0b3VjaFxuICAgICAqIER1cmF0aW9uIGluIG1zIG9mIGEgbG9uZyB0b3VjaCBiZWZvcmUgYWN0aXZhdGluZyBEcmFnU3RhcnRcbiAgICAgKiBEZWx0YSBvZiB0aGVcbiAgICAgKi9cbiAgICBsb25nUHJlc3NDb25maWc6IHtcbiAgICAgICAgZHVyYXRpb246IG51bWJlcjtcbiAgICAgICAgZGVsdGE6IG51bWJlcjtcbiAgICB9O1xuICAgIHByaXZhdGUgY2FuY2VsbGVkU2Nyb2xsO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgem9uZTogTmdab25lKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBkaXNhYmxlU2Nyb2xsKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGVuYWJsZVNjcm9sbCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBoYXNTY3JvbGxiYXIoKTogYm9vbGVhbjtcbn1cbiJdfQ==