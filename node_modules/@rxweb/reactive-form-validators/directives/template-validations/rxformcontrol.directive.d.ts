import { ElementRef, OnInit, OnDestroy, Renderer2 } from '@angular/core';
import { Validator, AbstractControl, FormControl } from '@angular/forms';
import { BaseValidator } from './base-validator.directive';
import { DecimalProvider } from "../../domain/element-processor/decimal.provider";
import { AlphaConfig, BaseConfig, CompareConfig, ComposeConfig, ContainsConfig, CreditCardConfig, DateConfig, DefaultConfig, DigitConfig, EmailConfig, ExtensionConfig, FactorConfig, MessageConfig, NumberConfig, NumericConfig, PasswordConfig, RangeConfig, RequiredConfig, RuleConfig, SizeConfig, TimeConfig, DifferentConfig, RelationalOperatorConfig, UniqueConfig } from '../../models/config';
import * as ɵngcc0 from '@angular/core';
export declare class RxFormControlDirective extends BaseValidator implements OnInit, OnDestroy, Validator {
    private elementRef;
    private renderer;
    private decimalProvider;
    private eventListeners;
    private isNumericSubscribed;
    private isFocusCalled;
    private isMasked;
    validationControls: {
        [key: string]: FormControl;
    };
    rxalpha: AlphaConfig;
    rxalphaNumeric: AlphaConfig;
    rxascii: BaseConfig;
    rxcompare: CompareConfig;
    rxcompose: ComposeConfig;
    rxcontains: ContainsConfig;
    rxcreditCard: CreditCardConfig;
    rxdataUri: BaseConfig;
    rxdifferent: DifferentConfig;
    rxdigit: DigitConfig;
    rxemail: EmailConfig;
    rxendsWith: DefaultConfig;
    rxeven: BaseConfig;
    rxextension: ExtensionConfig;
    rxfactor: FactorConfig;
    rxfileSize: SizeConfig;
    rxgreaterThanEqualTo: RelationalOperatorConfig;
    rxgreaterThan: RelationalOperatorConfig;
    rxhexColor: MessageConfig;
    rxjson: DefaultConfig;
    rxlatitude: BaseConfig;
    rxlatLong: BaseConfig;
    rxleapYear: BaseConfig;
    rxlessThan: RelationalOperatorConfig;
    rxlessThanEqualTo: RelationalOperatorConfig;
    rxlongitude: BaseConfig;
    rxlowerCase: MessageConfig;
    rxmac: BaseConfig;
    rxmaxDate: DateConfig;
    rxmaxLength: NumberConfig;
    rxmaxNumber: NumberConfig;
    rxminDate: DateConfig;
    rxminLength: NumberConfig;
    rxminNumber: NumberConfig;
    rxnumeric: NumericConfig;
    rxodd: BaseConfig;
    rxpassword: PasswordConfig;
    rxport: BaseConfig;
    rxprimeNumber: BaseConfig;
    rxrequired: RequiredConfig;
    rxrange: RangeConfig;
    rxrule: RuleConfig;
    rxstartsWith: DefaultConfig;
    rxtime: TimeConfig;
    rxupperCase: MessageConfig;
    rxurl: DefaultConfig;
    rxunique: UniqueConfig;
    rxnotEmpty: BaseConfig;
    rxcusip: BaseConfig;
    rxgrid: BaseConfig;
    rxdate: BaseConfig;
    constructor(elementRef: ElementRef, renderer: Renderer2, decimalProvider: DecimalProvider);
    ngOnInit(): void;
    blurEvent(): void;
    bindNumericElementEvent(config?: NumericConfig): void;
    bindValueChangeEvent(): void;
    subscribeNumericFormatter(): void;
    subscribeMaskValidator(): void;
    private setValueOnElement;
    private setTemplateValidators;
    private updateOnElementClass;
    private setValidatorConfig;
    validate(control: AbstractControl): {
        [key: string]: any;
    };
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RxFormControlDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<RxFormControlDirective, "[ngModel],[formControlName],[formControl]", never, { "rxnumeric": "rxnumeric"; "rxalpha": "rxalpha"; "rxalphaNumeric": "rxalphaNumeric"; "rxascii": "rxascii"; "rxcompare": "rxcompare"; "rxcompose": "rxcompose"; "rxcontains": "rxcontains"; "rxcreditCard": "rxcreditCard"; "rxdataUri": "rxdataUri"; "rxdifferent": "rxdifferent"; "rxdigit": "rxdigit"; "rxemail": "rxemail"; "rxendsWith": "rxendsWith"; "rxeven": "rxeven"; "rxextension": "rxextension"; "rxfactor": "rxfactor"; "rxfileSize": "rxfileSize"; "rxgreaterThanEqualTo": "rxgreaterThanEqualTo"; "rxgreaterThan": "rxgreaterThan"; "rxhexColor": "rxhexColor"; "rxjson": "rxjson"; "rxlatitude": "rxlatitude"; "rxlatLong": "rxlatLong"; "rxleapYear": "rxleapYear"; "rxlessThan": "rxlessThan"; "rxlessThanEqualTo": "rxlessThanEqualTo"; "rxlongitude": "rxlongitude"; "rxlowerCase": "rxlowerCase"; "rxmac": "rxmac"; "rxmaxDate": "rxmaxDate"; "rxmaxLength": "rxmaxLength"; "rxmaxNumber": "rxmaxNumber"; "rxminDate": "rxminDate"; "rxminLength": "rxminLength"; "rxminNumber": "rxminNumber"; "rxodd": "rxodd"; "rxpassword": "rxpassword"; "rxport": "rxport"; "rxprimeNumber": "rxprimeNumber"; "rxrequired": "rxrequired"; "rxrange": "rxrange"; "rxrule": "rxrule"; "rxstartsWith": "rxstartsWith"; "rxtime": "rxtime"; "rxupperCase": "rxupperCase"; "rxurl": "rxurl"; "rxunique": "rxunique"; "rxnotEmpty": "rxnotEmpty"; "rxcusip": "rxcusip"; "rxgrid": "rxgrid"; "rxdate": "rxdate"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnhmb3JtY29udHJvbC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicnhmb3JtY29udHJvbC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBWYWxpZGF0b3IsIEFic3RyYWN0Q29udHJvbCwgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEJhc2VWYWxpZGF0b3IgfSBmcm9tICcuL2Jhc2UtdmFsaWRhdG9yLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IERlY2ltYWxQcm92aWRlciB9IGZyb20gXCIuLi8uLi9kb21haW4vZWxlbWVudC1wcm9jZXNzb3IvZGVjaW1hbC5wcm92aWRlclwiO1xyXG5pbXBvcnQgeyBBbHBoYUNvbmZpZywgQmFzZUNvbmZpZywgQ29tcGFyZUNvbmZpZywgQ29tcG9zZUNvbmZpZywgQ29udGFpbnNDb25maWcsIENyZWRpdENhcmRDb25maWcsIERhdGVDb25maWcsIERlZmF1bHRDb25maWcsIERpZ2l0Q29uZmlnLCBFbWFpbENvbmZpZywgRXh0ZW5zaW9uQ29uZmlnLCBGYWN0b3JDb25maWcsIE1lc3NhZ2VDb25maWcsIE51bWJlckNvbmZpZywgTnVtZXJpY0NvbmZpZywgUGFzc3dvcmRDb25maWcsIFJhbmdlQ29uZmlnLCBSZXF1aXJlZENvbmZpZywgUnVsZUNvbmZpZywgU2l6ZUNvbmZpZywgVGltZUNvbmZpZywgRGlmZmVyZW50Q29uZmlnLCBSZWxhdGlvbmFsT3BlcmF0b3JDb25maWcsIFVuaXF1ZUNvbmZpZyB9IGZyb20gJy4uLy4uL21vZGVscy9jb25maWcnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBSeEZvcm1Db250cm9sRGlyZWN0aXZlIGV4dGVuZHMgQmFzZVZhbGlkYXRvciBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBWYWxpZGF0b3Ige1xyXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcclxuICAgIHByaXZhdGUgZGVjaW1hbFByb3ZpZGVyO1xyXG4gICAgcHJpdmF0ZSBldmVudExpc3RlbmVycztcclxuICAgIHByaXZhdGUgaXNOdW1lcmljU3Vic2NyaWJlZDtcclxuICAgIHByaXZhdGUgaXNGb2N1c0NhbGxlZDtcclxuICAgIHByaXZhdGUgaXNNYXNrZWQ7XHJcbiAgICB2YWxpZGF0aW9uQ29udHJvbHM6IHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBGb3JtQ29udHJvbDtcclxuICAgIH07XHJcbiAgICByeGFscGhhOiBBbHBoYUNvbmZpZztcclxuICAgIHJ4YWxwaGFOdW1lcmljOiBBbHBoYUNvbmZpZztcclxuICAgIHJ4YXNjaWk6IEJhc2VDb25maWc7XHJcbiAgICByeGNvbXBhcmU6IENvbXBhcmVDb25maWc7XHJcbiAgICByeGNvbXBvc2U6IENvbXBvc2VDb25maWc7XHJcbiAgICByeGNvbnRhaW5zOiBDb250YWluc0NvbmZpZztcclxuICAgIHJ4Y3JlZGl0Q2FyZDogQ3JlZGl0Q2FyZENvbmZpZztcclxuICAgIHJ4ZGF0YVVyaTogQmFzZUNvbmZpZztcclxuICAgIHJ4ZGlmZmVyZW50OiBEaWZmZXJlbnRDb25maWc7XHJcbiAgICByeGRpZ2l0OiBEaWdpdENvbmZpZztcclxuICAgIHJ4ZW1haWw6IEVtYWlsQ29uZmlnO1xyXG4gICAgcnhlbmRzV2l0aDogRGVmYXVsdENvbmZpZztcclxuICAgIHJ4ZXZlbjogQmFzZUNvbmZpZztcclxuICAgIHJ4ZXh0ZW5zaW9uOiBFeHRlbnNpb25Db25maWc7XHJcbiAgICByeGZhY3RvcjogRmFjdG9yQ29uZmlnO1xyXG4gICAgcnhmaWxlU2l6ZTogU2l6ZUNvbmZpZztcclxuICAgIHJ4Z3JlYXRlclRoYW5FcXVhbFRvOiBSZWxhdGlvbmFsT3BlcmF0b3JDb25maWc7XHJcbiAgICByeGdyZWF0ZXJUaGFuOiBSZWxhdGlvbmFsT3BlcmF0b3JDb25maWc7XHJcbiAgICByeGhleENvbG9yOiBNZXNzYWdlQ29uZmlnO1xyXG4gICAgcnhqc29uOiBEZWZhdWx0Q29uZmlnO1xyXG4gICAgcnhsYXRpdHVkZTogQmFzZUNvbmZpZztcclxuICAgIHJ4bGF0TG9uZzogQmFzZUNvbmZpZztcclxuICAgIHJ4bGVhcFllYXI6IEJhc2VDb25maWc7XHJcbiAgICByeGxlc3NUaGFuOiBSZWxhdGlvbmFsT3BlcmF0b3JDb25maWc7XHJcbiAgICByeGxlc3NUaGFuRXF1YWxUbzogUmVsYXRpb25hbE9wZXJhdG9yQ29uZmlnO1xyXG4gICAgcnhsb25naXR1ZGU6IEJhc2VDb25maWc7XHJcbiAgICByeGxvd2VyQ2FzZTogTWVzc2FnZUNvbmZpZztcclxuICAgIHJ4bWFjOiBCYXNlQ29uZmlnO1xyXG4gICAgcnhtYXhEYXRlOiBEYXRlQ29uZmlnO1xyXG4gICAgcnhtYXhMZW5ndGg6IE51bWJlckNvbmZpZztcclxuICAgIHJ4bWF4TnVtYmVyOiBOdW1iZXJDb25maWc7XHJcbiAgICByeG1pbkRhdGU6IERhdGVDb25maWc7XHJcbiAgICByeG1pbkxlbmd0aDogTnVtYmVyQ29uZmlnO1xyXG4gICAgcnhtaW5OdW1iZXI6IE51bWJlckNvbmZpZztcclxuICAgIHJ4bnVtZXJpYzogTnVtZXJpY0NvbmZpZztcclxuICAgIHJ4b2RkOiBCYXNlQ29uZmlnO1xyXG4gICAgcnhwYXNzd29yZDogUGFzc3dvcmRDb25maWc7XHJcbiAgICByeHBvcnQ6IEJhc2VDb25maWc7XHJcbiAgICByeHByaW1lTnVtYmVyOiBCYXNlQ29uZmlnO1xyXG4gICAgcnhyZXF1aXJlZDogUmVxdWlyZWRDb25maWc7XHJcbiAgICByeHJhbmdlOiBSYW5nZUNvbmZpZztcclxuICAgIHJ4cnVsZTogUnVsZUNvbmZpZztcclxuICAgIHJ4c3RhcnRzV2l0aDogRGVmYXVsdENvbmZpZztcclxuICAgIHJ4dGltZTogVGltZUNvbmZpZztcclxuICAgIHJ4dXBwZXJDYXNlOiBNZXNzYWdlQ29uZmlnO1xyXG4gICAgcnh1cmw6IERlZmF1bHRDb25maWc7XHJcbiAgICByeHVuaXF1ZTogVW5pcXVlQ29uZmlnO1xyXG4gICAgcnhub3RFbXB0eTogQmFzZUNvbmZpZztcclxuICAgIHJ4Y3VzaXA6IEJhc2VDb25maWc7XHJcbiAgICByeGdyaWQ6IEJhc2VDb25maWc7XHJcbiAgICByeGRhdGU6IEJhc2VDb25maWc7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBkZWNpbWFsUHJvdmlkZXI6IERlY2ltYWxQcm92aWRlcik7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgYmx1ckV2ZW50KCk6IHZvaWQ7XHJcbiAgICBiaW5kTnVtZXJpY0VsZW1lbnRFdmVudChjb25maWc/OiBOdW1lcmljQ29uZmlnKTogdm9pZDtcclxuICAgIGJpbmRWYWx1ZUNoYW5nZUV2ZW50KCk6IHZvaWQ7XHJcbiAgICBzdWJzY3JpYmVOdW1lcmljRm9ybWF0dGVyKCk6IHZvaWQ7XHJcbiAgICBzdWJzY3JpYmVNYXNrVmFsaWRhdG9yKCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIHNldFZhbHVlT25FbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBzZXRUZW1wbGF0ZVZhbGlkYXRvcnM7XHJcbiAgICBwcml2YXRlIHVwZGF0ZU9uRWxlbWVudENsYXNzO1xyXG4gICAgcHJpdmF0ZSBzZXRWYWxpZGF0b3JDb25maWc7XHJcbiAgICB2YWxpZGF0ZShjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7XHJcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xyXG4gICAgfTtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuIl19