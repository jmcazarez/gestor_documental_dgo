import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { DroppableDirective } from './ngx-droppable.directive';
import { DrakeStoreService } from '../services/drake-store.service';
/**
 * Adds properties and events to draggable elements
 *
 * @export
 */
import * as ɵngcc0 from '@angular/core';
export declare class DraggableDirective implements OnInit, OnDestroy {
    private el;
    private drakesService;
    private droppableDirective;
    ngxDraggable: string[];
    model: any;
    dropZones: any;
    _moves: boolean | ((...args: any[]) => any);
    handles: any[];
    readonly hasHandle: boolean;
    drag: EventEmitter<any>;
    dragDelay: number;
    dragDelayed: boolean;
    touchTimeout: any;
    readonly element: any;
    _dropZones: string[];
    _parentDropzones: string[];
    constructor(el: ElementRef, drakesService: DrakeStoreService, droppableDirective: DroppableDirective);
    onMove(e: Event): void;
    onDown(): void;
    onUp(): void;
    ngOnInit(): void;
    update(): void;
    ngOnDestroy(): void;
    updateElements(): void;
    canMove(source?: any, handle?: any, sibling?: any): boolean;
    moves(source: any, handle: any, sibling: any): boolean;
    ngDoCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DraggableDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DraggableDirective, "[ngxDraggable]", never, { "_moves": "moves"; "dropZones": "dropZones"; "ngxDraggable": "ngxDraggable"; "model": "model"; }, { "drag": "drag"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyYWdnYWJsZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsibmd4LWRyYWdnYWJsZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERyb3BwYWJsZURpcmVjdGl2ZSB9IGZyb20gJy4vbmd4LWRyb3BwYWJsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRHJha2VTdG9yZVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9kcmFrZS1zdG9yZS5zZXJ2aWNlJztcbi8qKlxuICogQWRkcyBwcm9wZXJ0aWVzIGFuZCBldmVudHMgdG8gZHJhZ2dhYmxlIGVsZW1lbnRzXG4gKlxuICogQGV4cG9ydFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEcmFnZ2FibGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBwcml2YXRlIGRyYWtlc1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBkcm9wcGFibGVEaXJlY3RpdmU7XG4gICAgbmd4RHJhZ2dhYmxlOiBzdHJpbmdbXTtcbiAgICBtb2RlbDogYW55O1xuICAgIGRyb3Bab25lczogYW55O1xuICAgIF9tb3ZlczogYm9vbGVhbiB8ICgoLi4uYXJnczogYW55W10pID0+IGFueSk7XG4gICAgaGFuZGxlczogYW55W107XG4gICAgcmVhZG9ubHkgaGFzSGFuZGxlOiBib29sZWFuO1xuICAgIGRyYWc6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGRyYWdEZWxheTogbnVtYmVyO1xuICAgIGRyYWdEZWxheWVkOiBib29sZWFuO1xuICAgIHRvdWNoVGltZW91dDogYW55O1xuICAgIHJlYWRvbmx5IGVsZW1lbnQ6IGFueTtcbiAgICBfZHJvcFpvbmVzOiBzdHJpbmdbXTtcbiAgICBfcGFyZW50RHJvcHpvbmVzOiBzdHJpbmdbXTtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgZHJha2VzU2VydmljZTogRHJha2VTdG9yZVNlcnZpY2UsIGRyb3BwYWJsZURpcmVjdGl2ZTogRHJvcHBhYmxlRGlyZWN0aXZlKTtcbiAgICBvbk1vdmUoZTogRXZlbnQpOiB2b2lkO1xuICAgIG9uRG93bigpOiB2b2lkO1xuICAgIG9uVXAoKTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgdXBkYXRlRWxlbWVudHMoKTogdm9pZDtcbiAgICBjYW5Nb3ZlKHNvdXJjZT86IGFueSwgaGFuZGxlPzogYW55LCBzaWJsaW5nPzogYW55KTogYm9vbGVhbjtcbiAgICBtb3Zlcyhzb3VyY2U6IGFueSwgaGFuZGxlOiBhbnksIHNpYmxpbmc6IGFueSk6IGJvb2xlYW47XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG59XG4iXX0=