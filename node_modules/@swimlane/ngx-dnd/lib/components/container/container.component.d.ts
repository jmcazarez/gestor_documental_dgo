import { OnInit, AfterViewInit, TemplateRef, EventEmitter } from '@angular/core';
/**
 * Component that allows nested ngxDroppable and ngxDraggables
 *
 * @export
 */
import * as ɵngcc0 from '@angular/core';
export declare class ContainerComponent implements OnInit, AfterViewInit {
    model: any;
    copy: boolean;
    removeOnSpill: boolean;
    droppableItemClass: string | ((o: any) => any);
    dropZone: string;
    dropZones: string[];
    moves: (model: any, source: any, handle: any, sibling: any) => boolean;
    templateInput: TemplateRef<any>;
    templateChild: TemplateRef<any>;
    template: TemplateRef<any>;
    droppable: any;
    drop: EventEmitter<any>;
    drag: EventEmitter<any>;
    over: EventEmitter<any>;
    out: EventEmitter<any>;
    remove: EventEmitter<any>;
    cancel: EventEmitter<any>;
    _dropZones: string[];
    _defaultZones: string[];
    ngOnInit(): void;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ContainerComponent, "ngx-dnd-container", never, { "copy": "copy"; "removeOnSpill": "removeOnSpill"; "dropZone": "dropZone"; "dropZones": "dropZones"; "templateInput": "template"; "model": "model"; "droppableItemClass": "droppableItemClass"; "moves": "moves"; }, { "drop": "drop"; "drag": "drag"; "over": "over"; "out": "out"; "remove": "remove"; "cancel": "cancel"; }, ["templateChild"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjb250YWluZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBDb21wb25lbnQgdGhhdCBhbGxvd3MgbmVzdGVkIG5neERyb3BwYWJsZSBhbmQgbmd4RHJhZ2dhYmxlc1xuICpcbiAqIEBleHBvcnRcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0IHtcbiAgICBtb2RlbDogYW55O1xuICAgIGNvcHk6IGJvb2xlYW47XG4gICAgcmVtb3ZlT25TcGlsbDogYm9vbGVhbjtcbiAgICBkcm9wcGFibGVJdGVtQ2xhc3M6IHN0cmluZyB8ICgobzogYW55KSA9PiBhbnkpO1xuICAgIGRyb3Bab25lOiBzdHJpbmc7XG4gICAgZHJvcFpvbmVzOiBzdHJpbmdbXTtcbiAgICBtb3ZlczogKG1vZGVsOiBhbnksIHNvdXJjZTogYW55LCBoYW5kbGU6IGFueSwgc2libGluZzogYW55KSA9PiBib29sZWFuO1xuICAgIHRlbXBsYXRlSW5wdXQ6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdGVtcGxhdGVDaGlsZDogVGVtcGxhdGVSZWY8YW55PjtcbiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBkcm9wcGFibGU6IGFueTtcbiAgICBkcm9wOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBkcmFnOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvdmVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvdXQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHJlbW92ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY2FuY2VsOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBfZHJvcFpvbmVzOiBzdHJpbmdbXTtcbiAgICBfZGVmYXVsdFpvbmVzOiBzdHJpbmdbXTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xufVxuIl19