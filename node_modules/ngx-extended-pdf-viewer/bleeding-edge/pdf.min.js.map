{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","SVG_NS","BaseCanvasFactory","constructor","unreachable","create","reset","canvasAndContext","canvas","width","height","destroy","DOMCanvasFactory","ownerDocument","globalThis","super","_document","createElement","context","BaseCMapReaderFactory","baseUrl","isCompressed","[object Object]","name","compressionType","CMapCompressionType","BINARY","_fetchData","catch","reason","DOMCMapReaderFactory","isFetchSupported","isValidFetchUrl","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","DONE","responseText","DOMSVGFactory","svg","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","Response","prototype","ReadableStream","protocol","URL","pdfDateStringRegex","PDFDateString","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","data","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","stringToUTF8String","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","_display_utils","_font_loader","_node_utils","_annotation_storage","_api_compatibility","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","window","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","location","href","Buffer","isNaN","docBaseUrl","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","isPureXfa","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","_annotationsPromise","_annotationsIntent","_jsActionsPromise","getPageJSActions","getXfa","_xfaPromise","getPageXfa","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","optionalContentConfigPromise","_intentState","renderingIntent","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","_intentState2","streamTextContent","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","bind","_params","cMapUrl","CMapReaderFactory","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","loadingTaskSettled","settled","forEach","page","terminated","annotationStorageResetModified","pdfDocument","resetModified","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","__non_webpack_require__","Canvas","fs","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getValue","defaultValue","getOrCreateValue","setValue","modified","entry","_setModified","getAll","serializable","compatibilityParams","checkFontFace","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","backdrop","isEnabled","genericComposeSMask","subtype","hasBackdrop","composeFn","chunkSize","row","chunkHeight","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","steps","fnId","OPS","depObjId","objsPool","CanvasGraphics_endDrawing","drawImage","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","style","lineCap","CanvasGraphics_setLineJoin","lineJoin","CanvasGraphics_setMiterLimit","limit","miterLimit","CanvasGraphics_setDash","dashArray","dashPhase","CanvasGraphics_setGState","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","resumeSMaskGroup","CanvasGraphics_resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","xw","yh","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","getSinglePixelWidth","scaledLineWidth","CanvasGraphics_closeStroke","CanvasGraphics_fill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","beginPath","path","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","mode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measurement","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","CanvasGraphics_showType3Text","spacingLength","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","arguments","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","strokeStyle","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","isPatternFill","COMPILE_TYPE3_GLYPHS","compileType3Glyph","width1","j0","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","maskCanvas","skewX","skewY","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","w","h","CanvasGraphics_paintInlineImageXObject","imgToPaint","tmpCanvas","tmpCtx","widthScale","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","CanvasGraphics_paintInlineImageXObjectGroup","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","visible","CanvasGraphics_beginMarkedContentProps","isVisible","isContentVisible","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","CanvasGraphics_getCanvasPosition","CanvasGraphics_isContentVisible","op","raw","shadingIR","ShadingIRs","applyBoundingBox","Path2D","region","fromIR","RadialAxial_fromIR","colorStops","r1","RadialAxial_getPattern","grad","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","Dummy_fromIR","Dummy_fromIR_getPattern","TilingPatternClosure","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","COMPILE_STATUS","errorMsg","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","LINK_STATUS","createTexture","textureId","texture","CLAMP_TO_EDGE","NEAREST","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskCache","figuresCache","initSmaskGL","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","Float32Array","STATIC_DRAW","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","jj","coordsBuffer","colorsBuffer","colorLocation","_scripting_utils","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","toLowerCase","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","element","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_setColor","ColorConverters","hasAppearance","fieldValue","storage","storedData","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","activeElement","focus","preventScroll","userName","hidden","editable","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","readOnly","fieldName","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","exportValue","checkbox","radio","pdfButtonValue","buttonValue","radioId","selectElement","combo","options","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","call","multipleSelection","selected","indices","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","elements","makeColorComp","G","components","RGB_HTML","CMYK_RGB","renderTextLayer","renderTextLayerClosure","DEFAULT_FONT_SIZE","ascentCache","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","isWhitespace","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","tx","fontName","fontHeight","fontAscent","getAscent","fontFamily","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","dir","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","textDivs","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_bounds","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","TextLayer_cancel","_processItems","len","_layoutText","measureText","fingerprintIsBlockedException","_render","TextLayer_render","timeout","styleCache","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opList","fn","opListToTree","opTree","opListElement","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","html","attrs","xfa","rootHtml","attributes","stack","rootDiv","coeffs","parent","child","childHtml","_network_utils","NetworkManager","isHttp","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","from","ch","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","_readCapability","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":";;;;;;;;;;;;;;;;;;;;;CAAA,SAAAA,iCAAAC,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,QAAAA,OAAAC,IACAD,OAAA,uBAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,wBAAAD,IAEAD,EAAA,wBAAAA,EAAAM,SAAAL,IARA,CASCM,MAAA,WACD,kICuZA,SAAAC,kBAAAC,GAAiCC,IAAAA,EAAAC,OAAAA,EAAAC,IAAAA,EAAAC,QAAoBA,GAApB,GAAjC,KACEC,EAAAA,EAAAA,QACEJ,GADFI,iBACSJ,EAFiE,6DAM1E,MAAMK,GAAiBC,EAAAA,EAAAA,sBANmDN,GAO1E,GAAAG,EACEJ,EAAAA,KAAYA,EAAAA,MADDM,MAEN,CACLN,EAAAA,KADK,GAELA,EAAAA,MAAa,aAAAM,IACbN,EAAAA,QAAe,KAAM,EAKvB,IAAIQ,EAjBsE,GAkB1E,OAAAN,GACE,KAAKO,EAALC,KADF,MAGE,KAAKD,EAALE,KACEH,EADF,QAHF,MAME,KAAKC,EAALG,MACEJ,EADF,SANF,MASE,KAAKC,EAALI,OACEL,EADF,UATF,MAYE,KAAKC,EAALK,IACEN,EADF,OAIFR,EAAAA,OAlC0EQ,EAoC1ER,EAAAA,IAAW,iBAAAG,EAAAA,EApC+DY,gBA0M5E,SAAAC,WAAAC,GACEC,QAAAA,IAAY,yBADeD,yBAjJ7B,SAAAE,mBAAAlB,GACE,MAAMmB,EAASnB,EAAAA,QADgB,KAEzBoB,EAAQpB,EAAAA,QAFiB,KAGzBqB,EAAMC,KAAAA,IACVH,EAAAA,EAAAA,EAAsBnB,EADZsB,OAEVF,EAAAA,EAAAA,EAAoBpB,EALSuB,QAO/B,OAAOvB,EAAAA,UAAcA,EAAAA,YAAAA,IAAAA,GAAdA,EAPwBqB,4BAiBjC,SAAAG,sBAAAxB,EAAoCyB,EAApC,gBACE,GAAA,iBAAIzB,EACF,OAD2ByB,EAG7B,GAAIC,aAAJ1B,GAAuB,EACrB2B,EAAAA,EAAAA,MADqB,sEAErB,OAFqBF,EAIvB,MAGMG,EAX8D,gCAY9DC,EAZ8D,sDAYnDC,KAZmD9B,GAapE,IAAI+B,EACFH,EAAAA,KAAgBC,EAAhBD,KACAA,EAAAA,KAAgBC,EADhBD,KAEAA,EAAAA,KAAgBC,EAhBkD,IAiBpE,GAAAE,EAAuB,CACrBA,EAAoBA,EADC,GAErB,GAAIA,EAAAA,SAAJ,KAEE,IACEA,EAAoBH,EAAAA,KAClBI,mBADkBJ,IADlB,GAIF,MAAAK,KAON,OAAOF,GAhC6DN,+EA1BtE,SAAAS,UAAAC,GACE,MAAO,iBAAAA,GAAgC,UAAAC,KADZD,mDAiI7B,SAAAE,WAAAC,EAAyBC,GAAzB,GACE,OAAO,IAAAC,SAAY,CAAAC,EAAAC,KACjB,MAAMC,EAASC,SAAAA,cADuB,UAGtC,aAAIN,EAAAA,YAAAA,KACFK,EAAAA,IAAaL,IAEbK,EAAAA,IADKL,EAKPK,EAAAA,OAAgB,SAAAE,GACdN,GACEI,EADuBG,SAGzBL,EAJ6BI,IAM/BF,EAAAA,QAAiB,WACfD,EAAO,IAAAK,MAAU,0BAA0BJ,EAA1BL,UAElBM,SAAAI,MAAiBJ,SAAlBK,iBAAAC,YAnBsCP,6NApkB1C,IAAAQ,EAAAC,EAAA,GAYA,MAAMtC,EA3BN,oDA4BA,MAAMuC,EA5BN,6BA8BA,MAAAC,kBACEC,cACM1D,KAAA0D,cAAJD,oBACEE,EAAAA,EAAAA,aAD0C,wCAK9CC,OAAAA,EAAAA,IACED,EAAAA,EAAAA,aADoB,oCAItBE,MAAAA,EAAAA,EAAAA,GACE,IAAKC,EAALC,OACE,MAAM,IAAAb,MADsB,2BAG9B,GAAIc,GAAAA,GAAcC,GAAlB,EACE,MAAM,IAAAf,MADuB,uBAG/BY,EAAAA,OAAAA,MAPqCE,EAQrCF,EAAAA,OAAAA,OARqCG,EAWvCC,QAAAA,GACE,IAAKJ,EAALC,OACE,MAAM,IAAAb,MADsB,2BAK9BY,EAAAA,OAAAA,MANwB,EAOxBA,EAAAA,OAAAA,OAPwB,EAQxBA,EAAAA,OARwB,KASxBA,EAAAA,QATwB,+DAa5B,MAAAK,yBAAAV,kBACEC,aAAYU,cAAEA,EAAgBC,WAAlBtB,UAAZW,IAA0DY,QAExDtE,KAAAuE,UAFwDH,EAK1DR,OAAAA,EAAAA,GACE,GAAII,GAAAA,GAAcC,GAAlB,EACE,MAAM,IAAAf,MADuB,uBAG/B,MAAMa,EAAS/D,KAAAuE,UAAAC,cAJK,UAKdC,EAAUV,EAAAA,WALI,MAMpBA,EAAAA,MANoBC,EAOpBD,EAAAA,OAPoBE,EAQpB,MAAO,CAAAF,OAAAA,EAAAU,QAAAA,KAOX,MAAAC,sBACEhB,aAAYiB,QAAEA,EAAF,KAAAC,aAAkBA,GAA9BlB,IACM1D,KAAA0D,cAAJgB,wBACEf,EAAAA,EAAAA,aAD8C,4CAGhD3D,KAAA2E,QAJoDA,EAKpD3E,KAAA4E,aALoDA,EAQtDC,aAAYC,KAAZA,IACE,IAAK9E,KAAL2E,QACE,MAAM,IAAAzB,MACJ,2HAIJ,IAAA4B,EACE,MAAM,IAAA5B,MADG,gCAGX,MAAM/C,EAAMH,KAAA2E,QAAAG,GAAuB9E,KAAA4E,aAAA,SAVf,IAWdG,EAAkB/E,KAAA4E,aACpBI,EAAAA,oBADoBC,OAEpBD,EAAAA,oBAbgBpE,KAepB,OAAOZ,KAAAkF,WAAA/E,EAAA4E,GAAAI,OAA4CC,IACjD,MAAM,IAAAlC,MACJ,kBAAkBlD,KAAA4E,aAAA,UAAlB,cAAAzE,QAQN+E,WAAAA,EAAAA,IACEvB,EAAAA,EAAAA,aAD+B,8GAKnC,MAAA0B,6BAAAX,sBACEQ,WAAAA,EAAAA,GACE,OAEGI,oBAAsBC,gBAAAA,EAAqBxC,SAF9CyC,SAISC,MAAAtF,GAAAuF,MAAgBC,MAAAA,IACrB,IAAKC,EAALC,GACE,MAAM,IAAA3C,MAAU0C,EADAE,YAGlB,IAJuCC,EAMrCA,EADE/F,KAAJ4E,aACa,IAAAoB,iBAAqBJ,EADXK,gBAGVC,EAAAA,EAAAA,qBAAoBN,EAD1BO,QAGP,MAAO,CAAAJ,SAAAA,EAAAhB,gBAAAA,MAKJ,IAAApC,SAAY,CAAAC,EAAAC,KACjB,MAAMuD,EAAU,IADsBC,eAEtCD,EAAAA,KAAAA,MAAAA,GAFsC,GAIlCpG,KAAJ4E,eACEwB,EAAAA,aADqB,eAGvBA,EAAAA,mBAA6B,KAC3B,GAAIA,EAAAA,aAAuBC,eAA3BC,KAAA,CAGA,GAAIF,MAAAA,EAAAA,QAAJ,IAA8BA,EAAAA,OAAsB,CAClD,IADkDL,EAE9C/F,KAAA4E,cAAqBwB,EAAzBR,SACEG,EAAW,IAAAC,WAAeI,EADeR,WAE/B5F,KAAD4E,cAAsBwB,EAA1BG,eACLR,GAAWG,EAAAA,EAAAA,eAAcE,EAD4BG,eAGvD,GAAAR,EAAc,CACZnD,EAAQ,CAAAmD,SAAAA,EAAAhB,gBAAAA,IADI,QAKhBlC,EAAO,IAAAK,MAAUkD,EAhBgBN,eAmBnCM,EAAAA,KA1BsC,2BA+B5C,MAAAI,cACE5C,OAAAA,EAAAA,IACErD,EAAAA,EAAAA,QAAOyD,EAAAA,GAAaC,EAApB1D,EADoB,0BAGpB,MAAMkG,EAAM1D,SAAAA,gBAAAA,EAHQ,WAIpB0D,EAAAA,aAAAA,UAJoB,OAKpBA,EAAAA,aAAAA,QAA0BzC,EALN,MAMpByC,EAAAA,aAAAA,SAA2BxC,EANP,MAOpBwC,EAAAA,aAAAA,sBAPoB,QAQpBA,EAAAA,aAAAA,UAA4B,OAAAzC,EAAA,IARRC,GAUpB,OAVoBwC,EAatBjC,cAAAA,IACEjE,EAAAA,EAAAA,QAAAA,iBAAOmG,EADW,4BAGlB,OAAO3D,SAAAA,gBAAAA,EAHW2D,KAsCtB,MAAAC,aAIEjD,aAAYkD,QAAAA,EAAAC,MAAAA,EAAAC,SAAAA,EAAAC,QAIVA,EAJU,EAAAC,QAKVA,EALU,EAAAC,SAMVA,GANFvD,IAQE1D,KAAA4G,QADCA,EAED5G,KAAA6G,MAFCA,EAGD7G,KAAA8G,SAHCA,EAID9G,KAAA+G,QAJCA,EAKD/G,KAAAgH,QALCA,EASD,MAAME,GAAWN,EAAA,GAAaA,EAAd,IATf,EAUKO,GAAWP,EAAA,GAAaA,EAAd,IAVf,EAWD,IAAAQ,EAAAC,EAAAC,EAXCC,EAqDDC,EArDCC,EAsDDzD,EAtDCC,GAaD6C,GAbC,KAcD,IACEA,GADgB,KAGlB,OAAAA,GACE,KAAA,IACEM,GADF,EAEEC,EAFF,EAGEC,EAHF,EAIEC,EAJF,EADF,MAOE,KAAA,GACEH,EADF,EAEEC,EAFF,EAGEC,EAHF,EAIEC,EAJF,EAPF,MAaE,KAAA,IACEH,EADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,EAJF,EAbF,MAmBE,KAAA,EACEH,EADF,EAEEC,EAFF,EAGEC,EAHF,EAIEC,GAJF,EAnBF,MAyBE,QACE,MAAM,IAAArE,MA1BV,qEA+BA,GAAA+D,EAAc,CACZK,GADYA,EAEZC,GAFYA,EAOd,GAAA,IAAIH,EAAe,CACjBI,EAAgB/F,KAAAA,IAAS0F,EAAUP,EAAnBnF,IAAAA,EADCsF,EAEjBU,EAAgBhG,KAAAA,IAASyF,EAAUN,EAAnBnF,IAAAA,EAFCuF,EAGjBhD,EAAQvC,KAAAA,IAASmF,EAAAA,GAAaA,EAAtBnF,IAHSoF,EAIjB5C,EAASxC,KAAAA,IAASmF,EAAAA,GAAaA,EAAtBnF,IAJQoF,MAKZ,CACLW,EAAgB/F,KAAAA,IAASyF,EAAUN,EAAnBnF,IAAAA,EADXsF,EAELU,EAAgBhG,KAAAA,IAAS0F,EAAUP,EAAnBnF,IAAAA,EAFXuF,EAGLhD,EAAQvC,KAAAA,IAASmF,EAAAA,GAAaA,EAAtBnF,IAHHoF,EAIL5C,EAASxC,KAAAA,IAASmF,EAAAA,GAAaA,EAAtBnF,IAJJoF,EASP7G,KAAA0H,UAAiB,CACfN,EADeP,EAEfQ,EAFeR,EAGfS,EAHeT,EAIfU,EAJeV,EAKfW,EAAgBJ,EAAAA,EAAhBI,EAA4CF,EAAAA,EAL7BH,EAMfM,EAAgBJ,EAAAA,EAAhBI,EAA4CF,EAAAA,EAN7BJ,GASjBnH,KAAAgE,MA9ECA,EA+EDhE,KAAAiE,OA/ECA,EAuFH0D,OAAMd,MACJA,EAAQ7G,KADJ6G,MAAAC,SAEJA,EAAW9G,KAFP8G,SAAAC,QAGJA,EAAU/G,KAHN+G,QAAAC,QAIJA,EAAUhH,KAJNgH,QAAAC,SAKJA,GALI,GAANU,IAOE,OAAO,IAAAhB,aAAiB,CACtBC,QAAS5G,KAAA4G,QADagB,QAAAf,MAAAA,EAAAC,SAAAA,EAAAC,QAAAA,EAAAC,QAAAA,EAAAC,SAAAA,IAoB1BY,uBAAAA,EAAAA,GACE,OAAOvE,EAAAwE,KAAAC,eAAoB,CAAAC,EAAAC,GAAQjI,KADR0H,WAW7BQ,2BAAAA,GACE,MAAMC,EAAU7E,EAAAwE,KAAAC,eAAoB,CAACK,EAAD,GAAUA,EAAV,IAAoBpI,KADzB0H,WAEzBW,EAAc/E,EAAAwE,KAAAC,eAAoB,CAACK,EAAD,GAAUA,EAAV,IAAoBpI,KAF7B0H,WAG/B,MAAO,CAACS,EAAD,GAAaA,EAAb,GAAyBE,EAAzB,GAAyCA,EAAzC,IAYTC,kBAAAA,EAAAA,GACE,OAAOhF,EAAAwE,KAAAS,sBAA2B,CAAAP,EAAAC,GAAQjI,KADpB0H,wCAK1B,MAAAc,oCAAAlF,EAAAmF,cACE/E,YAAAA,EAAAA,GACEY,MADqBoE,GAErB1I,KAAA0G,KAFqBA,6DAMzB,MAAM/F,EAAa,CACjBC,KADiB,EAEjBC,KAFiB,EAGjBC,MAHiB,EAIjBC,OAJiB,EAKjBC,IALiB,kBAgEnB,SAAAa,aAAA1B,GACE,MAAMwI,EAAKxI,EADcuB,OAEzB,IAAIkH,EAFqB,EAGzB,KAAOA,EAAAA,GAAP,KAAiBzI,EAAAA,GAAAA,QACfyI,IAEF,MANyB,UAMlBzI,EAAAA,UAAAA,EAAiByI,EAAjBzI,GAAAA,0BAgET,MAAA0I,UACEnF,cACE1D,KAAA8I,QAAeC,OAAAA,OADH,MAEZ/I,KAAAgJ,MAFY,GAKdC,KAAAA,GACMnE,KAAQ9E,KAAZ8I,UACEhH,EAAAA,EAAAA,MAAK,gCAAAgD,KAEP9E,KAAA8I,QAAAhE,GAAqBoE,KAJZC,MAOXC,QAAAA,GACQtE,KAAQ9E,KAAd8I,UACEhH,EAAAA,EAAAA,MAAK,kCAAAgD,KAEP9E,KAAAgJ,MAAAK,KAAgB,CAAAvE,KAAAA,EAEdwE,MAAOtJ,KAAA8I,QAFOhE,GAGdtD,IAAK0H,KAHSC,eAMTnJ,KAAA8I,QAVKhE,GAadyE,WAEE,MAAMC,EAFG,GAGT,IAAIC,EAHK,EAIT,IAAA,MAAAR,KAAmBjJ,KAAnBgJ,MAA+B,CAC7B,MAAMlE,EAAOmE,EADgBnE,KAEzBA,EAAAA,OAAJ2E,IACEA,EAAU3E,EADepD,QAI7B,IAAA,MAAAuH,KAAmBjJ,KAAnBgJ,MAA+B,CAC7B,MAAMU,EAAWT,EAAAA,IAAWA,EADCK,MAE7BE,EAAAA,KAAY,GAAGP,EAAAA,KAAAA,OAAHQ,MAAAC,SAEd,OAAOF,EAAAA,KAdE,MAkBb,SAAAlE,mBACE,MACE,oBAAAG,OAAA,oBACAkE,UACA,SAAUA,SAFVC,WAFwB,oBAKxBC,eAIJ,SAAAtE,gBAAApF,EAAAwE,GACE,IACE,MAAMmF,SAAAA,GAAenF,EAAU,IAAAoF,IAAA5J,EAAVwE,GAAkC,IAAAoF,IADrD5J,GAGF,MAAO2J,UAAAA,GAHL,WAG6BA,EAC/B,MAAA1H,GACA,OADW,GAuCf,IA/mBA4H,kBAinBA,MAAAC,cAiBEpF,oBAAAqF,GACE,IAAIA,KAAWC,EAAAA,EAAAA,UAAfD,GACE,OAD8B,KAKhCF,IACEA,EAAqB,IAAAI,OACnB,6FAkBJ,MAAMC,EAAUL,EAAAA,KA1BSE,GA2BzB,IAAAG,EACE,OADY,KAMd,MAAMC,EAAOC,SAASF,EAATE,GAjCY,IAkCzB,IAAIC,EAAQD,SAASF,EAATE,GAlCa,IAmCzBC,EAAQA,GAAAA,GAAcA,GAAdA,GAA4BA,EAA5BA,EAnCiB,EAoCzB,IAAIC,EAAMF,SAASF,EAATE,GApCe,IAqCzBE,EAAMA,GAAAA,GAAYA,GAAZA,GAAAA,EArCmB,EAsCzB,IAAIC,EAAOH,SAASF,EAATE,GAtCc,IAuCzBG,EAAOA,GAAAA,GAAaA,GAAbA,GAAAA,EAvCkB,EAwCzB,IAAIC,EAASJ,SAASF,EAATE,GAxCY,IAyCzBI,EAASA,GAAAA,GAAeA,GAAfA,GAAAA,EAzCgB,EA0CzB,IAAIC,EAASL,SAASF,EAATE,GA1CY,IA2CzBK,EAASA,GAAAA,GAAeA,GAAfA,GAAAA,EA3CgB,EA4CzB,MAAMC,EAAwBR,EAAAA,IA5CL,IA6CzB,IAAIS,EAAaP,SAASF,EAATE,GA7CQ,IA8CzBO,EAAaA,GAAAA,GAAmBA,GAAnBA,GAAAA,EA9CY,EA+CzB,IAAIC,EAAeR,SAASF,EAATE,GAAAA,KA/CM,EAgDzBQ,EAAeA,GAAAA,GAAqBA,GAArBA,GAAAA,EAhDU,EAsDzB,GAAA,MAAIF,EAA+B,CACjCH,GADiCI,EAEjCH,GAFiCI,OAG5B,GAAA,MAAIF,EAA+B,CACxCH,GADwCI,EAExCH,GAFwCI,EAK1C,OAAO,IAAA7B,KAASA,KAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EA9DS0B,oHCpF7B,SAAAI,cAAAC,GACE,MAAMvJ,EAASuJ,EADWvJ,OAG1B,GAAIA,IAAAA,GAAgBuJ,EAAAA,aAApBjF,WACE,OAAOiF,EADyC,GAGlD,IAAIC,EANsB,EAO1B,IAAK,IAAItC,EAAT,EAAgBA,EAAhBlH,EAA4BkH,IAC1BsC,GAAgBC,gBAAgBF,EADDrC,IAGjC,IAAIwC,EAVsB,EAW1B,MAAMC,EAAO,IAAArF,WAXakF,GAY1B,IAAK,IAAItC,EAAT,EAAgBA,EAAhBlH,EAA4BkH,IAAK,CAC/B,IAAI0C,EAAOL,EADoBrC,GAEzB0C,aAANtF,aAEIsF,EADF,iBAAIA,EACKpF,cADqBoF,GAGrB,IAAAtF,WADFsF,IAIT,MAAMC,EAAaD,EATYE,WAU/BH,EAAAA,IAAAA,EAV+BD,GAW/BA,GAX+BG,EAajC,OAzB0BF,mCAhD5B,SAAAI,cAAAC,GACEnL,OACEmL,OAAAA,GAAAA,iBAAkBA,QADpBnL,IACiDmL,EAAAA,OAFrB,sCAK5B,MAAMhK,EAASgK,EALahK,OAMtBiK,EANsB,KAO5B,GAAIjK,EAAJiK,EACE,OAAOC,OAAAA,aAAAA,MAAAA,KADwBF,GAGjC,MAAMG,EAVsB,GAW5B,IAAK,IAAIjD,EAAT,EAAgBA,EAAhBlH,EAA4BkH,GAA5B+C,EAAqD,CACnD,MAAMG,EAAWrK,KAAAA,IAASmH,EAATnH,EADkCC,GAE7CqK,EAAQL,EAAAA,SAAAA,EAFqCI,GAGnDD,EAAAA,KAAYD,OAAAA,aAAAA,MAAAA,KAHuCG,IAKrD,OAAOF,EAAAA,KAhBqB,uBAwb9B,SAAAG,gBAAAX,EAA+BY,EAA/B,GAAiDC,GAAjD,GACE,GAAInC,IAAAA,kBAAJmC,EACE,OAAOnC,IAAAA,gBAAoB,IAAAoC,KAAS,CAATd,GAAiB,CAAE3E,KADHuF,KAI7C,MAAMG,EALkE,oEAQxE,IAAIC,EAAS,QAAAJ,YACb,IAAK,IAAIrD,EAAJ,EAAWD,EAAK0C,EAArB3J,OAAkCkH,EAAlCD,EAA0CC,GAA1C,EAAkD,CAChD,MAAM0D,EAD0C,IACrCjB,EAAAA,GACLkB,EAF0C,IAErClB,EAAKzC,EAALyC,GACLmB,EAH0C,IAGrCnB,EAAKzC,EAALyC,GAKXgB,GAAUD,EAJCE,GAAX,GAIuBF,GAHf,EAACE,IAAF,EAAmBC,GALsB,GAQZH,EAFzBxD,EAAAA,EAAAA,GAAc,GAAC2D,IAAF,EAAqBC,GAAlC5D,EANqC,IAQCwD,EADtCxD,EAAAA,EAAAA,EAAAA,GAAa4D,EAPwB,IAUlD,OAnBwEH,6BAtB1E,SAAAI,0BACE,MAAMC,EAAa3D,OAAAA,OADc,MAEjC,IAAI4D,GAF6B,EAIjC5D,OAAAA,eAAAA,EAAAA,UAA6C,CAC3C6D,IAAAA,IAAMD,IAIRD,EAAAA,QAAqB,IAAA/J,SAAY,SAAAC,EAAAC,GAC/B6J,EAAAA,QAAqB,SAAArB,GACnBsB,GADmC,EAEnC/J,EAFmCyI,IAIrCqB,EAAAA,OAAoB,SAAAtH,GAClBuH,GADoC,EAEpC9J,EAFoCuC,OAKxC,OAnBiCsH,4BA7fnC,SAAAG,uBAAA1M,EAAAwE,GACE,IAAAxE,EACE,OADQ,KAGV,IACE,MAAM2M,EAAcnI,EAAU,IAAAoF,IAAA5J,EAAVwE,GAAkC,IAAAoF,IADpD5J,GAEF,GA7BJ,SAAA4M,iBAAA5M,GACE,IAAAA,EACE,OADQ,EAGV,OAAQA,EAAR2J,UACE,IADF,QAEE,IAFF,SAGE,IAHF,OAIE,IAJF,UAKE,IAAA,OACE,OANJ,EAOE,QACE,OARJ,GAyBMiD,CAAJD,GACE,OADiCA,EAGnC,MAAA1K,IAGF,OAZ4C,qBAga9C,SAAA4K,aAAAC,GAIE,OAAOA,EAAAC,QAAA,iBAA6BC,GAClC,OAAIA,EAAgB,MAEb,OAAIA,EAAgB,MAGpB,KAAAA,6BAsDX,SAAAC,oBAA6BC,EAAO,IAApCnE,MAUE,MATe,CACbmE,EAAAA,iBADa9D,YAEZ8D,EAAAC,cAAD,GAAA/D,WAAAgE,SAAA,EAFa,KAGbF,EAAAA,aAAAA,WAAAA,SAAAA,EAHa,KAIbA,EAAAA,cAAAA,WAAAA,SAAAA,EAJa,KAKbA,EAAAA,gBAAAA,WAAAA,SAAAA,EALa,KAMbA,EAAAA,gBAAAA,WAAAA,SAAAA,EANa,MASRhB,KAVuC,yBAtiBhD,SAAAmB,oBACE,OAD2BC,UAO7B,SAAAC,KAAAhF,GACM+E,GAAaE,EAAjBC,OACExM,QAAAA,IAAY,SAAAsH,sBA6gBhB,SAAAmF,cAAAC,GACE,MAAO,iBAAAA,GAAA,OAAyBA,QADRC,IACsBD,EAAAA,2BAGhD,SAAAE,aAAAC,EAAAC,GACE,GAAID,EAAAA,SAAgBC,EAApBxM,OACE,OAD+B,EAGjC,IAAK,IAAIkH,EAAJ,EAAWD,EAAKsF,EAArBvM,OAAkCkH,EAAlCD,EAA0CC,IACxC,GAAIqF,EAAAA,KAAYC,EAAhBtF,GACE,OADuB,EAI3B,OATgC,aAtClC,SAAAuF,QAAAlB,GACE,MAAO,iBAAA1K,KADa0K,aAsBtB,SAAAmB,OAAAN,GACE,MADiB,kBACVA,WAGT,SAAAO,MAAAP,GACE,MADgB,iBACTA,kBAhfT,SAAAQ,aAAA3J,EAAA4J,GACE,IADuCC,EAEvC,IACEA,EAAO,IAAAzE,IADLpF,GAEF,IAAK6J,EAADC,QAAJ,SAAoBD,EAAAA,OAClB,OAD0C,EAG5C,MAAAE,GACA,OADU,EAIZ,MAAMC,EAAQ,IAAA5E,IAAAwE,EAXyBC,GAYvC,OAAOA,EAAAA,SAAgBG,EAZgBF,mBAmfzC,SAAAtE,SAAA2D,GACE,MADmB,iBACZA,mBAvRT,SAAAc,cAAAC,GACE,MAAMC,EAAM/F,OAAAA,OADc,MAE1B,IAAA,MAAWgG,EAAXC,KAAAH,EACEC,EAAAA,GAD8BE,EAGhC,OAL0BF,gBAN5B,SAAAG,WAAAH,GACE,OAAO/F,OAAAA,KAAAA,GADgBrH,+BA7FzB,SAAAjB,qBAAAwM,GACE,GAAA,iBAAIA,EAAyB,CAC3BnL,KAD2B,2DAE3B,OAF2BmL,EAI7B,OAAOA,EAAAA,QAAAA,EAL0B,yBA/JnC,SAAAiC,kBAAAC,GACMC,OAAAA,UAAJD,KACE1B,EAD2B0B,+BAkP/B,SAAAE,SAAAL,GACE,OAAOpD,OAAAA,aACJoD,GAAD,GADKpD,IAEJoD,GAAD,GAFKpD,IAGJoD,GAAD,EAHKpD,IADgB,IAKrBoD,sDA0NJ,SAAAM,kBAAArC,GACE,MAAMvL,EAASuL,EAAfvL,OACEmK,EAF4B,GAG9B,GAAIoB,MAAAA,EAAAA,IAAJ,MAAyBA,EAAAA,GAEvB,IAAK,IAAIrE,EAAT,EAAgBA,EAAhBlH,EAA4BkH,GAA5B,EACEiD,EAAAA,KACED,OAAAA,aAAqBqB,EAAAA,WAAAA,IAAD,EAA2BA,EAAAA,WAAerE,EAF9B,UAK/B,GAAIqE,MAAAA,EAAAA,IAAJ,MAAyBA,EAAAA,GAE9B,IAAK,IAAIrE,EAAT,EAAgBA,EAAhBlH,EAA4BkH,GAA5B,EACEiD,EAAAA,KACED,OAAAA,aAAqBqB,EAAAA,WAAerE,EAAfqE,IAAD,EAA+BA,EAAAA,WAFnBrE,UAMpC,IAAK,IAAIA,EAAT,EAAgBA,EAAhBlH,IAAAkH,EAAiC,CAC/B,MAAM2G,EAAOC,EAAwBvC,EAAAA,WADNrE,IAE/BiD,EAAAA,KAAY0D,EAAO3D,OAAAA,aAAP2D,GAAmCtC,EAAAA,OAFhBrE,IAKnC,OAAOiD,EAAAA,KAvBuB,6BA4ChC,SAAA4D,sBAAAxC,GACE,MAAMyC,EAAM,CADsB,MAElC,IAAK,IAAI9G,EAAJ,EAAWD,EAAKsE,EAArBvL,OAAiCkH,EAAjCD,EAAyCC,IAAK,CAC5C,MAAM+G,EAAO1C,EAAAA,WAD+BrE,GAE5C8G,EAAAA,KAAS9D,OAAAA,aAAqB+D,GAAD,EAFe,MAG5CD,EAAAA,KAAS9D,OAAAA,aAHmC,IAGf+D,IAE/B,OAAOD,EAAAA,KAP2B,0BAUpC,SAAAE,mBAAA3C,GACE,OAAO9K,mBAAmB0N,OADK5C,oDAIjC,SAAA6C,mBAAA7C,GACE,OAAO8C,SAASC,mBADe/C,8rBAn2BjC1J,EAAA,qBAiBwB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,0BACK,CAAA,KAAA,EAAA,EAAA,KAAA,EAAA,oBAGN,CACrB0M,MADqB,EAErBC,gBAFqB,EAGrBC,KAHqB,GAIrBC,mBAJqB,GAKrBC,uBALqB,IAMrBC,uBANqB,IAOrBC,SAPqB,KAQrBC,mBARqB,0BAWG,CACxBC,KADwB,EAExBC,OAFwB,EAGxBC,YAHwB,EAIxBC,UAJwB,EAKxBC,iBALwB,EAMxBC,mBANwB,EAOxBC,wBAPwB,EAQxBC,YARwB,EASxBC,iBATwB,EAUxBC,iBAVwB,eAaR,CAChBC,eADgB,EAEhBC,UAFgB,EAGhBC,WAHgB,oBAMK,CACrBC,KADqB,EAErBC,KAFqB,EAGrBC,SAHqB,EAIrBC,KAJqB,EAKrBC,OALqB,EAMrBC,OANqB,EAOrBC,QAPqB,EAQrBC,SARqB,EASrBC,UATqB,EAUrBC,UAVqB,GAWrBC,SAXqB,GAYrBC,UAZqB,GAarBC,MAbqB,GAcrBC,MAdqB,GAerBC,IAfqB,GAgBrBC,MAhBqB,GAiBrBC,eAjBqB,GAkBrBC,MAlBqB,GAmBrBC,MAnBqB,GAoBrBC,OApBqB,GAqBrBC,OArBqB,GAsBrBC,YAtBqB,GAuBrBC,QAvBqB,GAwBrBC,UAxBqB,GAyBrBC,OAzBqB,GA0BrBC,OA1BqB,+BA6BU,CAC/BC,OAD+B,SAE/BC,OAF+B,kCAKH,CAC5BD,OAD4B,SAE5BE,SAF4B,oCAKA,CAC5BC,SAD4B,WAE5BC,SAF4B,WAG5BC,UAH4B,YAI5BC,UAJ4B,YAK5B1S,KAL4B,8BAQF,CAC1B2S,MAD0B,QAE1BC,MAF0B,sBAKL,CACrB5C,UADqB,EAErB6C,OAFqB,EAGrBxD,MAHqB,EAIrByD,OAJqB,EAKrBC,SALqB,GAMrBC,OANqB,GAOrBC,SAPqB,GAQrBC,OARqB,IASrBC,aATqB,IAUrBC,eAVqB,2BAaK,CAC1BH,SAD0B,EAE1BI,SAF0B,EAG1BC,SAH0B,EAI1BC,UAJ0B,KAK1BC,SAL0B,KAM1BC,cAN0B,MAO1BC,MAP0B,MAQ1BC,WAR0B,MAS1BC,MAT0B,OAU1BC,KAV0B,OAW1BC,KAX0B,OAY1BC,WAZ0B,QAa1BC,YAb0B,QAc1BC,gBAd0B,QAe1BC,YAf0B,QAgB1BC,KAhB0B,SAiB1BC,SAjB0B,SAkB1BC,eAlB0B,SAmB1BC,kBAnB0B,sCAsBM,CAChCC,MADgC,EAEhCC,OAFgC,EAGhCC,QAHgC,EAIhCC,MAJgC,EAKhCvD,UALgC,+BAQA,CAChCwD,EADgC,cAEhCC,EAFgC,aAGhCC,EAHgC,aAIhCC,EAJgC,WAKhCC,GALgC,QAMhCC,GANgC,OAOhCC,GAPgC,WAQhCC,GARgC,YAShCC,GATgC,cAUhCC,GAVgC,gBAWhCC,EAXgC,YAYhCC,EAZgC,SAahCC,EAbgC,WAchCC,EAdgC,uCAiBF,CAC9BC,GAD8B,YAE9BC,GAF8B,WAG9BC,GAH8B,UAI9BC,GAJ8B,YAK9BC,GAL8B,kCAQJ,CAC1BC,EAD0B,WAE1BN,EAF0B,0BAKT,CACjBO,QADiB,UAEjBC,MAFiB,QAGjBC,IAHiB,MAIjBC,IAJiB,MAKjBC,IALiB,MAMjBC,KANiB,OAOjBC,IAPiB,MAQjBC,IARiB,MASjBC,IATiB,MAUjBC,IAViB,kBAaF,CACfT,QADe,UAEfU,MAFe,QAGfC,OAHe,SAIfC,aAJe,eAKfC,cALe,gBAMfC,SANe,WAOfC,aAPe,eAQfC,MARe,QASfC,SATe,WAUfC,MAVe,QAWfC,QAXe,WAcjB,MAAMnK,EAAiB,CACrBoK,OADqB,EAErBC,SAFqB,EAGrBpK,MAHqB,4CAMK,CAC1BhN,KAD0B,EAE1BqE,OAF0B,EAG1BgT,OAH0B,SAOhB,CAGVC,WAHU,EAIVC,aAJU,EAKVC,WALU,EAMVC,YANU,EAOVC,cAPU,EAQVC,QARU,EASVC,mBATU,EAUVC,YAVU,EAWVC,UAXU,EAYVC,KAZU,GAaVC,QAbU,GAcVlR,UAdU,GAeVmR,OAfU,GAgBVC,OAhBU,GAiBVC,QAjBU,GAkBVC,SAlBU,GAmBVC,SAnBU,GAoBVC,UApBU,GAqBVC,UArBU,GAsBVC,OAtBU,GAuBVC,YAvBU,GAwBVC,KAxBU,GAyBVC,OAzBU,GA0BVC,WA1BU,GA2BVC,aA3BU,GA4BVC,gBA5BU,GA6BVC,kBA7BU,GA8BVC,QA9BU,GA+BVC,KA/BU,GAgCVC,OAhCU,GAiCVC,UAjCU,GAkCVC,QAlCU,GAmCVC,eAnCU,GAoCVC,eApCU,GAqCVC,UArCU,GAsCVC,WAtCU,GAuCVC,QAvCU,GAwCVC,qBAxCU,GAyCVC,YAzCU,GA0CVC,SA1CU,GA2CVC,mBA3CU,GA4CVC,cA5CU,GA6CVC,SA7CU,GA8CVC,SA9CU,GA+CVC,eA/CU,GAgDVC,iBAhDU,GAiDVC,2BAjDU,GAkDVC,aAlDU,GAmDVC,sBAnDU,GAoDVC,oBApDU,GAqDVC,kBArDU,GAsDVC,eAtDU,GAuDVC,gBAvDU,GAwDVC,aAxDU,GAyDVC,cAzDU,GA0DVC,cA1DU,GA2DVC,YA3DU,GA4DVC,kBA5DU,GA6DVC,gBA7DU,GA8DVC,mBA9DU,GA+DVC,iBA/DU,GAgEVC,YAhEU,GAiEVC,iBAjEU,GAkEVC,eAlEU,GAmEVC,eAnEU,GAoEVC,aApEU,GAqEVC,UArEU,GAsEVC,eAtEU,GAuEVC,mBAvEU,GAwEVC,wBAxEU,GAyEVC,iBAzEU,GA0EVC,YA1EU,GA2EVC,UA3EU,GA4EVC,sBA5EU,GA6EVC,oBA7EU,GA8EVC,WA9EU,GA+EVC,SA/EU,GAgFVC,iBAhFU,GAiFVC,eAjFU,GAkFVC,gBAlFU,GAmFVC,cAnFU,GAoFVC,iBApFU,GAqFVC,sBArFU,GAsFVC,2BAtFU,GAuFVC,kBAvFU,GAwFVC,wBAxFU,GAyFVC,6BAzFU,GA0FVC,wBA1FU,GA2FVC,4BA3FU,GA4FVC,yBA5FU,GA6FVC,cA7FU,2BAgGiB,CAE3BC,QAF2B,UAG3BC,MAH2B,QAI3BC,WAJ2B,aAK3BC,MAL2B,QAM3BC,eAN2B,iBAQ3BC,KAR2B,OAS3BC,mBAT2B,qBAU3BC,eAV2B,iBAW3BC,aAX2B,eAY3BC,mBAZ2B,qBAa3BC,eAb2B,iBAc3BC,iBAd2B,mBAe3BC,mBAf2B,qBAgB3BC,gBAhB2B,kBAiB3BC,kBAjB2B,oBAkB3BC,mBAlB2B,qBAmB3BC,oBAnB2B,sBAoB3BC,iBApB2B,mBAqB3BC,mBArB2B,0CAwBH,CACxBC,cADwB,EAExBC,mBAFwB,GAK1B,IAAIvR,EAAYE,EArVhBqK,SA2WA,SAAAlW,KAAA4G,GACM+E,GAAaE,EAAjBqK,UACE5W,QAAAA,IAAY,YAAAsH,KAIhB,SAAA/E,YAAA+E,GACE,MAAM,IAAAxF,MADkBwF,GAI1B,SAAAnI,OAAA0e,EAAAvW,GACEuW,GACEtb,YADS+E,GA4Db,SAAAwW,OAAApQ,EAAAqQ,EAAAnQ,GACEjG,OAAAA,eAAAA,EAAAA,EAAiC,CAAAiG,MAAAA,EAE/BoQ,YAF+B,EAG/BC,cAH+B,EAI/BC,UAJ+B,IAMjC,OAPgCtQ,EAalC,MAAMvG,EAAiB,SAAA8W,uBAErB,SAAA9W,cAAA+W,GACMxf,KAAA0D,cAAJ+E,eACE9E,YADsC,oCAGxC3D,KAAAwf,QAJ8BA,EAK9Bxf,KAAA8E,KAAY9E,KAAA0D,YALkBoB,KAOhC2D,cAAAA,UAA0B,IAT2BvF,MAUrDuF,cAAAA,YAVqDA,cAYrD,OAZqDA,cAAhC,yCAevB,MAAAgX,0BAAAhX,EACE/E,YAAAA,EAAAA,GACEY,MADqBoE,GAErB1I,KAAAuP,KAFqBA,4BAMzB,MAAAmQ,8BAAAjX,EACE/E,YAAAA,EAAAA,GACEY,MADwBoE,GAExB1I,KAAAmB,QAFwBA,0BAM5B,MAAAwe,4BAAAlX,0BAEA,MAAAmX,4BAAAnX,kCAEA,MAAAoX,oCAAApX,EACE/E,YAAAA,EAAAA,GACEY,MADuBoE,GAEvB1I,KAAA8f,OAFuBA,kBAS3B,MAAAC,oBAAAtX,qBAKA,MAAAuX,uBAAAvX,IAEA,MAAMwX,EAjfN,QAihBA,SAAA/Z,cAAA+G,GACE1M,OAAAA,iBAAO0M,EADmB,sCAE1B,MAAMvL,EAASuL,EAFWvL,OAGpBgK,EAAQ,IAAA1F,WAHYtE,GAI1B,IAAK,IAAIkH,EAAT,EAAgBA,EAAhBlH,IAAAkH,EACE8C,EAAAA,GAD+B,IACpBuB,EAAAA,WAAAA,GAEb,OAP0BvB,EAe5B,SAAAP,gBAAAF,GACE,QAAA8C,IAAI9C,EAAAA,OACF,OAAOA,EADqBvJ,OAG9BnB,YAAAA,IAAO0K,EAAAA,WAJqB,uCAK5B,OAAOA,EALqBO,WAwE9B,MAAM0U,EAAuB,CAC3BlR,YACE,OAAOkQ,OAAAA,KAAAA,QARX,SAAAiB,iBACE,MAAMC,EAAU,IAAApa,WADQ,GAExBoa,EAAAA,GAFwB,EAIxB,OAJwB,IAGT,IAAAC,YAAgBD,EAAhB/T,OAAA,EAHS,GAIjBiU,GAIwBH,+BAajC,MAAMI,EAAwB,CAC5BvR,YACE,OAAOkQ,OAAAA,KAAAA,QAVX,SAAAsB,kBACE,IACE,IAAAC,SADE,IAEF,OAFE,EAGF,MAAA/R,GACA,OADU,GAMmB8R,gCAIjC,MAAME,EAAa,IAAIC,MAAAA,KAAJC,QAAA/R,KAA2BgS,GAC5CA,EAAAA,SAAAA,IAAAA,SAAAA,EA9nBF,OAioBA,MAAA/Y,KACEjD,oBAAAic,EAAAC,EAAAC,GACE,MAAO,IAAIN,EAAJI,KAAoBJ,EAApBK,KAAoCL,EAApCM,KAITnc,iBAAAoc,EAAAC,GACE,MAAO,CACLD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EADnB,GAELD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAFnB,GAGLD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAHnB,GAILD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAJnB,GAKLD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAAxBD,GAAgCA,EAL3B,GAMLA,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAAxBD,GAAgCA,EAN3B,IAWTpc,sBAAAsc,EAAAC,GAGE,MAAO,CAFID,EAAAA,GAAOC,EAAPD,GAAcA,EAAAA,GAAOC,EAArBD,GAA4BC,EADb,GAEfD,EAAAA,GAAOC,EAAPD,GAAcA,EAAAA,GAAOC,EAArBD,GAA4BC,EAFb,IAM5Bvc,6BAAAsc,EAAAC,GACE,MAAMC,EAAID,EAAAA,GAAOA,EAAPA,GAAcA,EAAAA,GAAOA,EADE,GAIjC,MAAO,EAFKD,EAAA,GAAOC,EAAP,GAAcD,EAAAA,GAAOC,EAArB,GAA4BA,EAAAA,GAAOA,EAAnC,GAA0CA,EAAAA,GAAOA,EAAlD,IAFsBC,IAGpBF,EAAD,GAAQC,EAAR,GAAeD,EAAAA,GAAOC,EAAtB,GAA6BA,EAAAA,GAAOA,EAApC,GAA2CA,EAAAA,GAAOA,EAAnD,IAHsBC,GASnCxc,kCAAAic,EAAAM,GACE,MAAME,EAAKxZ,KAAAA,eAAAA,EAD2BsZ,GAEhCG,EAAKzZ,KAAAA,eAAoBgZ,EAAAA,MAAAA,EAApBhZ,GAF2BsZ,GAGhCI,EAAK1Z,KAAAC,eAAoB,CAAC+Y,EAAD,GAAOA,EAAP,IAHOM,GAIhCK,EAAK3Z,KAAAC,eAAoB,CAAC+Y,EAAD,GAAOA,EAAP,IAJOM,GAKtC,MAAO,CACL3f,KAAAA,IAAS6f,EAAT7f,GAAgB8f,EAAhB9f,GAAuB+f,EAAvB/f,GAA8BggB,EADzB,IAELhgB,KAAAA,IAAS6f,EAAT7f,GAAgB8f,EAAhB9f,GAAuB+f,EAAvB/f,GAA8BggB,EAFzB,IAGLhgB,KAAAA,IAAS6f,EAAT7f,GAAgB8f,EAAhB9f,GAAuB+f,EAAvB/f,GAA8BggB,EAHzB,IAILhgB,KAAAA,IAAS6f,EAAT7f,GAAgB8f,EAAhB9f,GAAuB+f,EAAvB/f,GAA8BggB,EAJzB,KAQT5c,wBAAAuc,GACE,MAAMC,EAAID,EAAAA,GAAOA,EAAPA,GAAcA,EAAAA,GAAOA,EADN,GAEzB,MAAO,CACLA,EAAAA,GADKC,GAEJD,EAAD,GAFKC,GAGJD,EAAD,GAHKC,EAILD,EAAAA,GAJKC,GAKJD,EAAA,GAAOA,EAAP,GAAcA,EAAAA,GAAOA,EAAtB,IALKC,GAMJD,EAAA,GAAOA,EAAP,GAAcA,EAAAA,GAAOA,EAAtB,IANKC,GAgBTxc,wBAAAuc,EAAAtT,GACE,MAAO,CACLsT,EAAAA,GAAOtT,EAAPsT,GAAcA,EAAAA,GAAOtT,EAArBsT,GAA4BA,EAAAA,GAAOtT,EAD9B,GAELsT,EAAAA,GAAOtT,EAAPsT,GAAcA,EAAAA,GAAOtT,EAArBsT,GAA4BA,EAAAA,GAAOtT,EAF9B,GAGLsT,EAAAA,GAAOtT,EAAPsT,GAAcA,EAAAA,GAAOtT,EAArBsT,GAA4BA,EAAAA,GAAOtT,EAH9B,IAUTjJ,qCAAAuc,GACE,MAAMM,EAAY,CAACN,EAAD,GAAOA,EAAP,GAAaA,EAAb,GAAmBA,EAAnB,IAGZO,EAAIP,EAAAA,GAAOM,EAAPN,GAAsBA,EAAAA,GAAOM,EAJD,GAKhCV,EAAII,EAAAA,GAAOM,EAAPN,GAAsBA,EAAAA,GAAOM,EALD,GAMhCE,EAAIR,EAAAA,GAAOM,EAAPN,GAAsBA,EAAAA,GAAOM,EAND,GAOhCL,EAAID,EAAAA,GAAOM,EAAPN,GAAsBA,EAAAA,GAAOM,EAPD,GAUhCG,GAASF,EAADN,GAVwB,EAWhCzW,EAASnJ,KAAAA,MAAWkgB,EAADN,IAAA,EAAe,GAAKM,EAAAN,EAAQO,EAAtCngB,IAXuB,EAYhCqgB,EAAKD,EAAAA,GAZ2B,EAahCE,EAAKF,EAAAA,GAb2B,EAgBtC,MAAO,CAACpgB,KAAAA,KAADqgB,GAAgBrgB,KAAAA,KAAhBsgB,IAOTld,qBAAAuD,GACE,MAAM0Y,EAAI1Y,EAAAA,MADe,GAEzB,GAAIA,EAAAA,GAAUA,EAAd,GAAuB,CACrB0Y,EAAAA,GAAO1Y,EADc,GAErB0Y,EAAAA,GAAO1Y,EAFc,GAIvB,GAAIA,EAAAA,GAAUA,EAAd,GAAuB,CACrB0Y,EAAAA,GAAO1Y,EADc,GAErB0Y,EAAAA,GAAO1Y,EAFc,GAIvB,OAVyB0Y,EAgB3Bjc,iBAAAmd,EAAAC,GACE,SAAAC,QAAAP,EAAAX,GACE,OAAOW,EADcX,EAKvB,MAAMmB,EAAW,CAACH,EAAD,GAAWA,EAAX,GAAqBC,EAArB,GAA+BA,EAA/B,IAAAG,KANYF,SAOvBG,EAAW,CAACL,EAAD,GAAWA,EAAX,GAAqBC,EAArB,GAA+BA,EAA/B,IAAAG,KAPYF,SAQvBI,EARuB,GAU7BN,EAAQla,KAAAA,cAVqBka,GAW7BC,EAAQna,KAAAA,cAXqBma,GAc7B,KACGE,EAAAA,KAAgBH,EAAhBG,IAA4BA,EAAAA,KAAgBF,EAA7C,IACCE,EAAAA,KAAgBF,EAAhBE,IAA4BA,EAAAA,KAAgBH,EAF/C,IAQE,OADK,KAFLM,EAAAA,GAAYH,EAFZ,GAGAG,EAAAA,GAAYH,EAHZ,GASF,KACGE,EAAAA,KAAgBL,EAAhBK,IAA4BA,EAAAA,KAAgBJ,EAA7C,IACCI,EAAAA,KAAgBJ,EAAhBI,IAA4BA,EAAAA,KAAgBL,EAF/C,IAQE,OADK,KAFLM,EAAAA,GAAYD,EAFZ,GAGAC,EAAAA,GAAYD,EAHZ,GAQF,OArC6BC,eA0CjibC1wBhC,IAAAlM,MAAAC,oBAAA,GAmBAgf,eAAAhf,oBAAA,GAUAif,aAAAjf,oBAAA,GACAkf,YAAAlf,oBAAA,GAjDAmf,oBAAAnf,oBAAA,GAAAof,mBAAApf,oBAAA,GAAAqf,QAAArf,oBAAA,IAAAsf,gBAAAtf,oBAAA,IAAAuf,SAAAvf,oBAAA,GAAAwf,iBAAAxf,oBAAA,IAAAyf,UAAAzf,oBAAA,IAAA0f,yBAAA1f,oBAAA,IAAA2f,kBAAA3f,oBAAA,IAAA4f,OAAA5f,oBAAA,IA6DA,MAAM6f,yBA7DN,MA8DMC,4BA9DN,IAiEMC,qBAAuB,CAC3BC,0BAlEF,GAqEAC,OAAAA,qBArEAF,qBAwEA,MAAMG,qBACJX,SAAAY,SAAAjB,YAAAkB,kBAzEFpB,eAAApe,mEA4EA,MAAMyf,yBACJd,SAAAY,SAAAjB,YAAAoB,sBA7EFtB,eAAAld,+EA8FA,IA9FAye,uBAyGA,SAAAC,2BAAAC,GACEF,uBAD2DE,EAsG7D,SAAAC,YAAAxhB,GACE,MAAMyhB,EAAO,IADWC,uBAGxB,IAHwBC,EAIxB,GAAI,iBAAA3hB,GAA2BA,aAA/BsH,IACEqa,EAAS,CAAEjkB,IADsCsC,QAE5C,IAAIoL,EAAAA,MAAAA,eAAJpL,GACL2hB,EAAS,CAAE/Y,KADkB5I,QAExB,GAAIA,aAAJ4hB,sBACLD,EAAS,CAAEE,MADoC7hB,OAE1C,CACL,GAAA,iBAAIA,EACF,MAAM,IAAAS,MACJ,+FAIJ,IAAKT,EAADtC,MAAasC,EAAb4I,OAA0B5I,EAA9B6hB,MACE,MAAM,IAAAphB,MADiC,+DAKzCkhB,EAZK3hB,EAcP,MAAM8hB,EAASxb,OAAAA,OAxBS,MAyBxB,IAAIyb,EAAJ,KACEC,EA1BsB,KA4BxB,IAAA,MAAA1V,KAAAqV,EAA0B,CACxB,MAAMpV,EAAQoV,EADUrV,GAGxB,OAAAA,GACE,IAAA,MACE,GAAA,oBAAIyU,OACF,IAEEe,EAAAA,GAAc,IAAAxa,IAAAiF,EAAewU,OAAfkB,UAFZC,KAAA,SAIF,MAAAviB,IACAN,EAAAA,MAAAA,MAAK,6BAAAM,YAEF,GAAI,iBAAA4M,GAA6BA,aAAjCjF,IAAuD,CAC5Dwa,EAAAA,GAAcvV,EAD8CzF,WAAA,SAI9D,MAAM,IAAArG,MACJ,sFAGJ,IAAA,QACEshB,EADFxV,EAlBF,SAqBE,IAAA,SACEyV,EADFzV,EArBF,SAwBE,IAAA,OAEE,GACE8T,SAAAY,UAAA,oBAGAkB,QACA5V,aALF4V,OAOEL,EAAAA,GAAc,IAAAve,WADdgJ,OAEK,CAAA,GAAIA,aAAJhJ,WAAiC,MAEjC,GAAA,iBAAIgJ,EACTuV,EAAAA,IAAcre,EAAAA,MAAAA,eADsB8I,QAE/B,GACL,iBAAAA,GAAA,OACAA,GACC6V,MAAM7V,EAHFtN,QAMA,CAAA,KAAImM,EAAAA,MAAAA,eAAJmB,GAGL,MAAM,IAAA9L,MACJ,+GAHFqhB,EAAAA,GAAc,IAAAve,WADiBgJ,QAD/BuV,EAAAA,GAAc,IAAAve,WADdgJ,GA1CN,SAsDAuV,EAAAA,GAzDwBvV,EA4D1BuV,EAAAA,eAAwBA,EAAAA,gBAxFAnB,yBAyFxBmB,EAAAA,kBACEA,EAAAA,mBA1FsBX,yBA2FxBW,EAAAA,cA3FwB,IA2FFA,EAAAA,aACtBA,EAAAA,qBA5FwB,IA4FKA,EAAAA,oBAC7BA,EAAAA,QA7FwB,IA6FRA,EAAAA,OAChBA,EAAAA,WA9FwB,IA8FLA,EAAAA,WAGjB,iBAAOA,EAAPO,aACAjjB,EAAAA,eAAAA,cAAa0iB,EAFfO,eAOEP,EAAAA,WAJA,MAMGnV,OAAAA,UAAiBmV,EAAtBQ,gBACER,EAAAA,cAD0C,GAG5C,kBAAWA,EAAP/D,kBACF+D,EAAAA,iBAD+C,GAGjD,kBAAWA,EAAPS,kBACFT,EAAAA,gBAAyBU,mBAAAA,uBAAAA,kBADsB,QAGjD,IAAWV,EAAPngB,gBACFmgB,EAAAA,cAAuBlgB,WADwBtB,UAIjD,kBAAWwhB,EAAPW,eACFX,EAAAA,cAD4C,GAG9C,kBAAWA,EAAPY,gBACFZ,EAAAA,eAD6C,GAG/C,kBAAWA,EAAPa,mBACFb,EAAAA,kBADgD,IAKlDrV,EAAAA,MAAAA,mBAAkBqV,EAjIM9W,WAmIxB,IAAAgX,EAAa,CACX,MAAMY,EAAe,CACnB5X,UAAW8W,EADQ9W,UAEnB6X,KAAMC,gBAAAA,oBAFaC,YAMrBf,EAASY,EAAAA,KACLI,UAAAA,SADKJ,GAEL,IAAAI,UATOJ,GAUXnB,EAAAA,QAVWO,EAYb,MAAMiB,EAAQxB,EA/IUwB,MAgJxBjB,EAAAA,QAAAA,MACQ,WACJ,GAAIP,EAAJyB,UACE,MAAM,IAAAziB,MADY,mBAIpB,MAAM0iB,EAAkBC,eAAAA,EAAAA,EAAAA,EALRH,GAWVI,EAAuB,IAAAnjB,SAAY,SAAAC,GACvC,IAD0DmjB,EAE1DvB,EACEuB,EAAgB,IAAA7C,kBAAA8C,uBACd,CACEtkB,OAAQ6iB,EADV7iB,OAEEukB,YAAa1B,EAFf0B,YAGEC,gBAAiB3B,EAHnB2B,gBAIEC,2BAA4B5B,EAJ9B4B,2BAKEjB,aAAcX,EALhBW,aAMEC,cAAeZ,EANjBY,eAFgBX,GAYRD,EAALlZ,OACL0a,EAAgBjC,uBAAuB,CACrC3jB,IAAKokB,EADgCpkB,IAErCuB,OAAQ6iB,EAF6B7iB,OAGrC0kB,YAAa7B,EAHwB6B,YAIrCC,gBAAiB9B,EAJoB8B,gBAKrCC,eAAgB/B,EALqB+B,eAMrCpB,aAAcX,EANuBW,aAOrCC,cAAeZ,EAPsBY,iBAUzCviB,EAzB0DmjB,MA4B5D,OAAOpjB,QAAA4jB,IAAY,CAAAX,EAAAE,IAAZpgB,MACL,UAAU8gB,EAAVT,IACE,GAAI7B,EAAJyB,UACE,MAAM,IAAAziB,MADY,mBAIpB,MAAMujB,EAAiB,IAAA1D,iBAAA2D,eAAAhB,EAAAc,EAGrB/B,EARiCa,MAUnCmB,EAAAA,qBAAsChC,EAVHkC,qBAWnC,MAAMC,EAAY,IAAAC,gBAAAJ,EAAAvC,EAAA6B,EAXiBxB,GAiBnCL,EAAAA,WAjBmC0C,EAmBnCH,EAAAA,KAAAA,2BAEEjD,OAAAA,qBArBiCD,0BAwBnCkD,EAAAA,KAAAA,QAxBmC,YAzC3ChC,MAqESP,EAAAA,YArNerhB,QAuNxB,OAvNwBqhB,EAqO1B,SAAA2B,eAAApB,EAAAL,EAAA0C,EAAApB,GACE,GAAIjB,EAAJkB,UACE,OAAOhjB,QAAAA,OAAe,IAAAO,MADF,yBAItB,GAAA4jB,EAA2B,CACzB1C,EAAAA,OAAgB0C,EADSplB,OAEzB0iB,EAAAA,YAAqB0C,EAFIb,YAGzB7B,EAAAA,gBAAyB0C,EAHAZ,gBAIzB9B,EAAAA,2BACE0C,EALuBX,2BAO3B,OAAO1B,EAAAgC,eAAAM,gBAAA,gBAC6B,CAAArB,MAAAA,EAEhCsB,WAFgC,UAOhC5C,OAAQ,CACN/Y,KAAM+Y,EADA/Y,KAENlL,IAAKikB,EAFCjkB,IAGN8mB,SAAU7C,EAHJ6C,SAIN7B,iBAAkBhB,EAJZgB,iBAKNkB,eAAgBlC,EALVkC,eAMN5kB,OAAQ0iB,EANF1iB,QAQRqjB,aAAcX,EAfkBW,aAgBhCC,gBAAiBZ,EAhBeY,gBAiBhC2B,qBAAsBlC,EAjBUkC,qBAkBhC7B,WAAYV,EAlBoBU,WAmBhCoC,aAAc9C,EAnBkB8C,aAoBhC1G,gBAAiB4D,EApBe5D,gBAqBhC2G,oBAAqB/C,EArBW+C,oBAsBhCC,UAAWhD,EAtBqBgD,YAD7B1hB,MAyBC,SAAA8gB,GACJ,GAAI/B,EAAJkB,UACE,MAAM,IAAAziB,MADc,wBAGtB,OAJwBsjB,KAsC9B,MAAMrC,uBAA0B,SAAAkD,gCAC9B,IAAIC,EADmE,EA+EvE,OAtEA,MAAAnD,uBACEzgB,cACE1D,KAAAunB,aADY,EAAAjkB,MAAAmJ,2BAEZzM,KAAAwnB,WAFY,KAGZxnB,KAAAynB,QAHY,KASZznB,KAAA0lB,MAAa,IAAM4B,IAMnBtnB,KAAA2lB,WAfY,EAuBZ3lB,KAAA0nB,WAvBY,KAgCZ1nB,KAAA2nB,WAhCY,KAuCZ3nB,KAAA4nB,qBAvCY,KA8CdC,cACE,OAAO7nB,KAAAunB,YADKM,QAQd3jB,UACElE,KAAA2lB,WADQ,EAMR,OAH4B3lB,KAADwnB,WAEvBxnB,KAAAwnB,WALItjB,UAIJvB,QADuBC,WAGpB8C,MAAwB,KAC7B1F,KAAAwnB,WADmC,KAEnC,GAAIxnB,KAAJynB,QAAkB,CAChBznB,KAAAynB,QADgBvjB,UAEhBlE,KAAAynB,QAFgB,WAxEM,GAqFhC,MAAApD,sBAOE3gB,YAAAA,EAAAA,EAGEwiB,GAHFxiB,EAIEyiB,EAJFziB,MAME1D,KAAA0B,OADAA,EAEA1B,KAAAimB,YAFAA,EAGAjmB,KAAAkmB,gBAHAA,EAIAlmB,KAAAmmB,2BAJAA,EAMAnmB,KAAA8nB,gBANA,GAOA9nB,KAAA+nB,mBAPA,GAQA/nB,KAAAgoB,0BARA,GASAhoB,KAAAioB,0BATA,GAUAjoB,KAAAkoB,kBAVA,EAAA5kB,MAAAmJ,2BAaF0b,iBAAAA,GACEnoB,KAAA8nB,gBAAAze,KADyB+e,GAI3BC,oBAAAA,GACEroB,KAAA+nB,mBAAA1e,KAD4B+e,GAI9BE,2BAAAA,GACEtoB,KAAAgoB,0BAAA3e,KADmC+e,GAIrCG,2BAAAA,GACEvoB,KAAAioB,0BAAA5e,KADmC+e,GAIrCI,YAAAA,EAAAA,GACE,IAAA,MAAAJ,KAAuBpoB,KAAvB8nB,gBACEM,EAAAA,EAD2Crc,GAK/C0c,eAAAA,EAAAA,GACEzoB,KAAAkoB,iBAAAL,QAAAniB,MAAmC,KACjC,IAAA,MAAA0iB,KAAuBpoB,KAAvB+nB,mBACEK,EAAAA,EAD8CM,MAMpDC,sBAAAA,GACE3oB,KAAAkoB,iBAAAL,QAAAniB,MAAmC,KACjC,IAAA,MAAA0iB,KAAuBpoB,KAAvBgoB,0BACEI,EADqDrc,MAM3D6c,wBACE5oB,KAAAkoB,iBAAAL,QAAAniB,MAAmC,KACjC,IAAA,MAAA0iB,KAAuBpoB,KAAvBioB,0BACEG,OAKNS,iBACE7oB,KAAAkoB,iBADetlB,UAIjBkmB,iBAAAA,EAAAA,IACEnlB,EAAAA,MAAAA,aAD2B,0DAI7BolB,8DAMF,MAAAC,iBACEtlB,YAAAA,EAAAA,GACE1D,KAAAipB,SAD8BC,EAE9BlpB,KAAAwnB,WAF8BZ,EAQhCuC,wBACE,OAAOjK,EAAAA,MAAAA,QAAAA,KAAAA,oBAAkC,IADnBwD,oBAAA0G,mBAOxBC,eACE,OAAOrpB,KAAAipB,SADMI,SAOfC,kBACE,OAAOtpB,KAAAipB,SADSK,YAOlBC,gBACE,OAAOvpB,KAAAipB,SADOM,UAShBC,QAAAA,GACE,OAAOxpB,KAAAwnB,WAAAgC,QADWC,GAWpBC,aAAAA,GACE,OAAO1pB,KAAAwnB,WAAAkC,aADSC,GAUlBC,kBACE,OAAO5pB,KAAAwnB,WADSoC,kBASlBC,eAAAA,GACE,OAAO7pB,KAAAwnB,WAAAqC,eADUC,GASnBC,gBACE,OAAO/pB,KAAAwnB,WADOuC,gBAQhBC,gBACE,OAAOhqB,KAAAwnB,WADOwC,gBAQhBC,cACE,OAAOjqB,KAAAwnB,WADKyC,cASdC,uBACE,OAAOlqB,KAAAwnB,WADc0C,uBASvBC,gBACE,OAAOnqB,KAAAwnB,WADO2C,gBAQhBC,iBACE,OAAOpqB,KAAAwnB,WADQ4C,iBASjBC,gBACE,OAAOrqB,KAAAwnB,WADO6C,gBAWhBC,eACE,OAAOtqB,KAAAwnB,WADM+C,kBAuBfC,aACE,OAAOxqB,KAAAwnB,WADIgD,aASbC,2BACE,OAAOzqB,KAAAwnB,WADkBiD,2BAS3BC,iBACE,OAAO1qB,KAAAwnB,WADQkD,iBAWjBC,cACE,OAAO3qB,KAAAwnB,WADKmD,cAiBdC,cACE,OAAO5qB,KAAAwnB,WADKoD,cAQdC,UACE,OAAO7qB,KAAAwnB,WADCqD,UASVC,kBACE,OAAO9qB,KAAAwnB,WAAAuD,uBADSlD,QAmBlBmD,WACE,OAAOhrB,KAAAwnB,WADEwD,WAgBXC,QAAQC,GAARD,GACE,OAAOjrB,KAAAwnB,WAAA2D,aAA6BD,GAAmBlrB,KADxBupB,WAOjCrlB,UACE,OAAOlE,KAAAorB,YADClnB,UASVmnB,oBACE,OAAOrrB,KAAAwnB,WADW6D,cAOpBD,kBACE,OAAOprB,KAAAwnB,WADS4D,YAUlBE,aAAAA,GACE,OAAOtrB,KAAAwnB,WAAA8D,aADuBnC,GAShCoC,kBACE,OAAOvrB,KAAAwnB,WADS+D,kBAQlBC,eACE,OAAOxrB,KAAAwnB,WADMgE,eASfC,yBACE,OAAOzrB,KAAAwnB,WADgBiE,oEAoH3B,MAAAC,aACEhoB,YAAAA,EAAAA,EAAAA,EAAAA,EAA2DioB,GAA3DjoB,GACE1D,KAAA4rB,WADyEC,EAEzE7rB,KAAA8rB,UAFyEC,EAGzE/rB,KAAAgsB,eAHyE5nB,EAIzEpE,KAAAwnB,WAJyEZ,EAKzE5mB,KAAAisB,OAAcN,EAAS,IAATA,eAAAA,UAL2D,KAMzE3rB,KAAAksB,QANyEP,EAOzE3rB,KAAAmsB,WAAkBvF,EAPuDuF,WAQzEnsB,KAAAosB,KAAY,IAR6DC,WAUzErsB,KAAAssB,oBAVyE,EAWzEtsB,KAAAusB,gBAXyE,EAYzEvsB,KAAAwsB,cAAqB,IAZoDC,IAazEzsB,KAAA2lB,WAbyE,EAmB3E8D,iBACE,OAAOzpB,KAAA4rB,WADQ,EAOjBc,aACE,OAAO1sB,KAAA8rB,UADIY,OAQb/C,UACE,OAAO3pB,KAAA8rB,UADCnC,IAOVgD,eACE,OAAO3sB,KAAA8rB,UADMa,SAQfC,WACE,OAAO5sB,KAAA8rB,UADEc,KASXC,aAAYhmB,MAAAA,EAAAC,SAEVA,EAAW9G,KAFD0sB,OAAA3lB,QAGVA,EAHU,EAAAC,QAIVA,EAJU,EAAAC,SAKVA,GALU,GAAZ4lB,IAOE,OAAO,IAAAtK,eAAA5b,aAAiB,CACtBC,QAAS5G,KADa4sB,KAAA/lB,MAAAA,EAAAC,SAAAA,EAAAC,QAAAA,EAAAC,QAAAA,EAAAC,SAAAA,IAe1B6lB,gBAAeC,OAAEA,EAAF,MAAfD,IACE,IAAK9sB,KAADgtB,qBAA6BhtB,KAAAitB,qBAAjCF,EAAqE,CACnE/sB,KAAAgtB,oBAA2BhtB,KAAAwnB,WAAAsF,eACzB9sB,KADyB4rB,WADwCmB,GAKnE/sB,KAAAitB,mBALmEF,EAOrE,OAAO/sB,KAR8BgtB,oBAevC1C,eACE,OAAQtqB,KAAAktB,oBAAAltB,KAAAktB,kBAA2BltB,KAAAwnB,WAAA2F,iBACjCntB,KAFW4rB,aAYfwB,SACE,OAAQptB,KAAAqtB,cAAArtB,KAAAqtB,YAAqBrtB,KAAAwnB,WAAA8F,WAA2BttB,KADjD4rB,aAWT2B,QAAOC,cAAAA,EAAAC,SAAAA,EAAAV,OAGLA,EAHK,UAAAW,YAILA,GAJK,EAAAC,uBAKLA,GALK,EAAAjmB,UAMLA,EANK,KAAAkmB,WAOLA,EAPK,KAAAC,cAQLA,EARK,KAAAC,WASLA,EATK,KAAA3E,kBAULA,EAVK,KAAA4E,6BAWLA,EAXFR,OAYG,IAAAS,EACGhuB,KAAJisB,QACEjsB,KAAAisB,OAAAhjB,KADe,WAIjB,MAAMglB,EAAkBlB,UAAAA,EAAAA,QALvB,UAQD/sB,KAAAusB,gBARC,EAUDwB,IACEA,EAA+B/tB,KAAAwnB,WADEiD,4BAInC,IAAIyD,EAAcluB,KAAAwsB,cAAA5f,IAdjBqhB,GAeD,IAAAC,EAAkB,CAChBA,EAAcnlB,OAAAA,OADE,MAEhB/I,KAAAwsB,cAAA2B,IAAAF,EAFgBC,GAMlB,GAAIA,EAAJE,0BAA2C,CACzCC,aAAaH,EAD4BE,2BAEzCF,EAAAA,0BAFyC,KAK3C,MAAMI,EACJT,GACA,IAAApK,qBAAyB,CAAErf,cAAepE,KA5B3CgsB,iBA6BKuC,EAAe,IAAApL,OAAAqL,aAAiB,CACpCC,OA9BDf,IAmCD,IAAKQ,EAALQ,uBAAyC,CACvCR,EAAAA,wBADuC,EAAA5qB,MAAAmJ,2BAEvCyhB,EAAAA,aAA2B,CACzBS,QADyB,GAEzBC,UAFyB,GAGzBC,WAHyB,GAMvB7uB,KAAJisB,QACEjsB,KAAAisB,OAAAhjB,KADe,gBAGjBjJ,KAAA8uB,kBAAuB,CACrBjD,UAAW7rB,KADU4rB,WAErBmB,OAFqBkB,EAGrBN,wBAHqB,IAGGA,EACxBxE,kBAAmBA,GAAAA,cAJE,OAQzB,MAAM4F,SAAWC,IACfd,EAAAA,YAAAA,OADwBe,IAKpBjvB,KAAAssB,oBAAJ,UAA+B2B,KAC7BjuB,KAAAusB,gBAD0D,GAG5DvsB,KARwBkvB,cAUxB,GAAAF,EAAW,CACTC,EAAAA,WAAAA,OADSD,GAGThvB,KAAAmvB,mBAAwB,CAAAjB,YAAAA,EAEtB9oB,OAFsB4pB,SAKxBC,EAAAA,WADKrsB,UAGP,GAAI5C,KAAJisB,OAAiB,CACfjsB,KAAAisB,OAAA7iB,QADe,aAEfpJ,KAAAisB,OAAA7iB,QAFe,aAMb6lB,EAAqB,IAAAG,mBAAuB,CAChDC,SADgDN,SAGhDxK,OAAQ,CAAAiJ,cAAAA,EAAAC,SAAAA,EAAA/lB,UAAAA,EAAAkmB,WAAAA,EAAAE,WAAAA,GAOR1B,KAAMpsB,KAV0CosB,KAWhDD,WAAYnsB,KAXoCmsB,WAYhDmD,aAAcpB,EAZkCoB,aAahDzD,UAAW7rB,KAbqC4rB,WAchDiC,cAdgDS,EAAAC,aAAAA,EAgBhDgB,yBAhBgD,UAgBtBtB,EAC1BtC,OAAQ3rB,KAjBwCksB,YAoBjD8B,EAAAE,GAAAsB,cAAAxB,EAAAwB,YAA4B,IAA7BC,MAAAC,IApGCT,GAqGD,MAAMU,EAAaV,EArGlB/K,KAuGDvhB,QAAAA,IAAY,CACVurB,EAAAA,uBADUrG,QAAAkG,IAAZprB,MAIQ,EAACitB,EAADC,MACJ,GAAI7vB,KAAJusB,eACEwC,eADF,CAII/uB,KAAJisB,QACEjsB,KAAAisB,OAAAhjB,KADe,aAGjBgmB,EAAAA,mBAAsC,CAAAW,aAAAA,EAAAC,sBAAAA,IAItCZ,EAZ+Ca,0BAJnDntB,MAvGCosB,UA2HD,OA3HCY,EAkIHI,kBASE,MAAM9B,EATU,SAUhB,IAVgB+B,EAUZ9B,EAAcluB,KAAAwsB,cAAA5f,IAVFqhB,GAWhB,IAAAC,EAAkB,CAChBA,EAAcnlB,OAAAA,OADE,MAEhB/I,KAAAwsB,cAAA2B,IAAAF,EAFgBC,GAMlB,IAAKA,EAAL+B,qBAAuC,CAAA,IAAAC,EACrCF,EAAajnB,OAAAA,OADwB,MAErCinB,EAAAA,oBAlBF,SAAAF,sBACE,GAAI5B,EAAAA,aAAJW,UAAwC,CACtCX,EAAAA,qBAAAA,QAAyCA,EADHoB,cAGtCpB,EAAAA,YAAAA,OAHsC8B,KAkBxC9B,EAAAA,sBAHqC,EAAA5qB,MAAAmJ,6BAIpCyjB,EAAAhC,GAAAsB,cAAAU,EAAAV,YAA4B,IAA7BC,MAAAC,IAJqCM,GAKrC9B,EAAAA,aAA2B,CACzBS,QADyB,GAEzBC,UAFyB,GAGzBC,WAHyB,GAMvB7uB,KAAJisB,QACEjsB,KAAAisB,OAAAhjB,KADe,gBAGjBjJ,KAAA8uB,kBAAuB,CACrBjD,UAAW7rB,KADU4rB,WAErBmB,OAFqBkB,IAKzB,OAAOC,EAAAA,qBApCSrG,QA2ClBsI,mBAAkBC,oBAChBA,GADgB,EAAAC,wBAEhBA,GAFgB,GAAlBF,IAME,OAAOnwB,KAAAwnB,WAAAf,eAAA6J,eAAA,iBAEL,CACEzE,UAAW7rB,KADb4rB,WAEEwE,qBAFF,IAEuBA,EACrBG,kBAHF,IAGoBF,GAEpB,CACEG,cAXE,IAYFC,KAAAA,GACSC,EAAAA,MADShvB,SAYxBivB,eAAepM,EAAfoM,IACE,MAAMC,EAAiB5wB,KAAAmwB,kBADG5L,GAG1B,OAAO,IAAA5hB,SAAY,SAAAC,EAAAC,GAajB,MAAMguB,EAASD,EAb6BE,YActCJ,EAAc,CAClBK,MADkB,GAElBC,OAAQjoB,OAAAA,OAFU,QAbpB,SAAAkoB,OACEJ,EAAAA,OAAAA,MAAmB,UAAU7hB,MAAAA,EAAAkiB,KAAVA,IACjB,GAAAA,EACEtuB,EADQ8tB,OAAV,CAIA3nB,OAAAA,OAAc2nB,EAAd3nB,OAAkCiG,EALUgiB,QAM5CN,EAAAA,MAAAA,QAA0B1hB,EANkB+hB,OAO5CE,UARYpuB,GAiBhBouB,MAQJE,WACEnxB,KAAA2lB,WADS,EAET3lB,KAAAwnB,WAAA4J,UAA0BpxB,KAA1B4rB,YAFS,KAIT,MAAMyF,EAJG,GAKT,IAAA,MAAWtE,EAAXmB,KAAoCluB,KAApCwsB,cAAwD,CACtDxsB,KAAAmvB,mBAAwB,CAAAjB,YAAAA,EAEtB9oB,OAAQ,IAAAlC,MAFc,uBAGtBouB,OAHsB,IAMxB,GAAA,WAAIvE,EAIJ,IAAA,MAAAkC,KAAiCf,EAAjCsB,YAA0D,CACxD6B,EAAAA,KAAYpC,EAD4CsC,WAExDtC,EAFwDuC,UAK5DxxB,KAAAosB,KArBSqF,QAsBTzxB,KAAAgtB,oBAtBS,KAuBThtB,KAAAktB,kBAvBS,KAwBTltB,KAAAqtB,YAxBS,KAyBTrtB,KAAAusB,gBAzBS,EA0BT,OAAO5pB,QAAAA,IA1BE0uB,GAoCXpG,QAAQyG,GAARzG,GACEjrB,KAAAusB,gBAD0B,EAE1B,OAAOvsB,KAAAkvB,YAFmBwC,GAS5BxC,YAAYwC,GAAZxC,GACE,IAAKlvB,KAALusB,eACE,OADwB,EAG1B,IAAA,MAAWiD,YAAAA,EAAAF,aAAXA,KAA4CtvB,KAAAwsB,cAA5CmF,SACE,GAAInC,EAAAA,KAAAA,IAAyBF,EAA7BT,UACE,OADmD,EAKvD7uB,KAAAwsB,cAV8BiF,QAW9BzxB,KAAAosB,KAX8BqF,QAY9BzxB,KAAAgtB,oBAZ8B,KAa9BhtB,KAAAktB,kBAb8B,KAc9BltB,KAAAqtB,YAd8B,KAe1BqE,GAAc1xB,KAAlBisB,SACEjsB,KAAAisB,OAAc,IADe1J,eAAA1Z,WAG/B7I,KAAAusB,gBAlB8B,EAmB9B,OAnB8B,EAyBhCqF,iBAAAA,EAAAA,GACE,MAAM1D,EAAcluB,KAAAwsB,cAAA5f,IADiBmgB,GAErC,GAAAmB,EAAA,CAGIluB,KAAJisB,QACEjsB,KAAAisB,OAAA7iB,QADe,gBAKb8kB,EAAJQ,wBACER,EAAAA,uBAAAA,QADsC0B,IAQ1CiC,iBAAAA,EAAAA,GAEE,IAAK,IAAIjpB,EAAJ,EAAWD,EAAKmpB,EAArBpwB,OAA+CkH,EAA/CD,EAAuDC,IAAK,CAC1DslB,EAAAA,aAAAA,QAAAA,KAAsC4D,EAAAA,QADoBlpB,IAE1DslB,EAAAA,aAAAA,UAAAA,KAAwC4D,EAAAA,UAFkBlpB,IAI5DslB,EAAAA,aAAAA,UAAqC4D,EANUjD,UAS/C,IAAA,MAAAI,KAAiCf,EAAjCsB,YACEP,EADwDa,sBAItDgC,EAAJjD,WACE7uB,KAD+BkvB,cAQnCJ,kBAAAA,IACEvuB,EAAAA,MAAAA,QACEwxB,EADFxxB,OADsB,+DAMtB,MAIMswB,EAJiB7wB,KAAAwnB,WAAAf,eAAA6J,eAAA,kBANDyB,GAAAjB,YAYhB5C,EAAcluB,KAAAwsB,cAAA5f,IAAuBmlB,EAZrBhF,QAatBmB,EAAAA,aAbsB2C,EAetB,MAAMI,KAAO,KACXJ,EAAAA,OAAAA,MACE,EAAC7hB,MAAAA,EAADkiB,KAAAA,MACE,GAAAA,EACEhD,EAAAA,aADQ,UAIV,IAAIluB,KAAAwnB,WAAJ7B,UAAA,CAGA3lB,KAAA6xB,iBAAA7iB,EARmBkf,GASnB+C,WAEF7rB,IACE8oB,EAAAA,aADQ,KAGR,IAAIluB,KAAAwnB,WAAJ7B,UAAA,CAGA,GAAIuI,EAAJoB,aAA8B,CAE5BpB,EAAAA,aAAAA,WAF4B,EAI5B,IAAA,MAAAe,KAAiCf,EAAjCsB,YACEP,EADwDa,sBAG1D9vB,KAP4BkvB,cAU9B,GAAIhB,EAAJQ,uBACER,EAAAA,uBAAAA,OADsC9oB,OAEjC,CAAA,IAAI8oB,EAAJ+B,qBAGL,MADK7qB,EADL8oB,EAAAA,qBAAAA,OAD2C9oB,SAQnD6rB,OAMF9B,oBAAmBjB,YAAAA,EAAA9oB,OAAAA,EAAAksB,MAAuBA,GAA1CnC,KACE5uB,EAAAA,MAAAA,QACE6E,aAAAA,OACG,iBAAAA,GAFL7E,OAEmC6E,EAHsB,gEAOzD,GAAK8oB,EAAL8D,aAAA,CAGA,IAAAV,EAAY,CAGV,GAAIpD,EAAAA,YAAAA,KAAJ,EAAsC,OAMtC,GAAI9oB,aAAJmd,eAAA/Z,4BAAmD,CACjD0lB,EAAAA,0BAAwC+D,YAAW,KACjDjyB,KAAAmvB,mBAAwB,CAAAjB,YAAAA,EAAA9oB,OAAAA,EAAuBksB,OAAvB,IACxBpD,EAAAA,0BAFuD,OADR7K,6BAAA,QAQrD6K,EAAAA,aAAAA,OAAgC,IAAA5qB,MAAA0c,eAAmB5a,GA3BMoa,UA4BzD0O,EAAAA,aA5ByD,KA8BzD,IAAIluB,KAAAwnB,WAAJ7B,UAAA,CAKA,IAAA,MAAWoH,EAAXmF,KAAuClyB,KAAvCwsB,cACE,GAAI0F,IAAJhE,EAAoC,CAClCluB,KAAAwsB,cAAA2F,OADkCpF,GAAA,MAMtC/sB,KA1CyDirB,YAgD3DmH,YACE,OAAOpyB,KADGisB,0CAKd,MAAAoG,aACE3uB,cACE1D,KAAAsyB,WADY,GAEZtyB,KAAAuyB,UAAiB5vB,QAAAA,aAFLoL,GAKdykB,YAAAA,EAAAA,GAoEE,MAAMC,EAAS,IApEWC,QAqEpBC,EAAQ,CAAEtnB,KApEhB,SAAAunB,WAAA5jB,GAGE,GAAI,iBAAAA,GAAJ,OAAiCA,EAC/B,OAD+CA,EAGjD,GAAIyjB,EAAAA,IAAJzjB,GAEE,OAAOyjB,EAAAA,IAFczjB,GAIvB,IAAA3C,EAVyBiW,EAWzB,IAAKjW,EAAS2C,EAAV3C,UAA2BwB,EAAAA,MAAAA,eAA/BxB,GAAsD,CAGlDiW,EADEuQ,GAAAA,SAAJxmB,GACW,IAAI2C,EAAJtL,YAAA2I,EAEP2C,EAFO8jB,WAGP9jB,EAJ6BxD,YAOtB,IAAIwD,EAAJtL,YADJsL,GAGPyjB,EAAAA,IAAAA,EAXoDnQ,GAYpD,OAZoDA,EActD,GAAItT,aAAJyd,IAA0B,CACxBnK,EAAS,IADemK,IAExBgG,EAAAA,IAAAA,EAFwBnQ,GAGxB,IAAA,MAAWvT,EAAXgkB,KAAA/jB,EACEsT,EAAAA,IAAAA,EAAgBsQ,WADcG,IAGhC,OANwBzQ,EAQ1B,GAAItT,aAAJygB,IAA0B,CACxBnN,EAAS,IADemN,IAExBgD,EAAAA,IAAAA,EAFwBnQ,GAGxB,IAAA,MAAAyQ,KAAA/jB,EACEsT,EAAAA,IAAWsQ,WADYG,IAGzB,OANwBzQ,EAQ1BA,EAAS3B,MAAAA,QAAAA,GAAAA,GAzCgB,GA0CzB8R,EAAAA,IAAAA,EA1CyBnQ,GA6CzB,IAAA,MAAA1Z,KAAAoG,EAAuB,CACrB,IAAAgkB,EACE7R,EAFmBnS,EAGrB,OAASgkB,EAAOjqB,OAAAA,yBAAAA,EAAhBH,KACEuY,EAAIpY,OAAAA,eADkDoY,GAGxD,QAAA,IAAW6R,EAAPhkB,MAGJ,GAAA,mBAAWgkB,EAAPhkB,MAQJsT,EAAAA,GAAYsQ,WAAWI,EAjBFhkB,YAUnB,GAAIA,EAAAA,iBAAJpG,GACE,MAAM,IAAA1F,MACJ,4CAA4C8L,EAA5CpG,MAOR,OAhEyB0Z,EAoELsQ,CArEI9jB,IAuE1B9O,KAAAuyB,UAAA7sB,MAAoB,KAClB,IAAA,MAAA0iB,KAAuBpoB,KAAvBsyB,WACElK,EAAAA,KAAAA,KADsCuK,MAM5CM,iBAAAA,EAAAA,GACEjzB,KAAAsyB,WAAAjpB,KAD+B+e,GAIjC8K,oBAAAA,EAAAA,GACE,MAAMtqB,EAAI5I,KAAAsyB,WAAAa,QADwB/K,GAElCpoB,KAAAsyB,WAAAc,OAAAxqB,EAFkC,GAKpCyqB,YACErzB,KAAAsyB,WAAA5wB,OADU,qCAcd,MAAM+jB,UAAa,SAAA6N,mBACjB,MAAMC,eAAiB,IADsBb,QAE7C,IAAIc,kBAFyC,EAAAC,kBAIzCC,iBAJyC,EAAAC,qBAS3C,GAAIjQ,SAAAA,UAAJ,mBAAgBkQ,QAA+C,CAE7DJ,kBAF6D,EAO3DC,kBAP2D,uBASxD,GAAI,iBAAA1wB,UAAgC,kBAApCA,SAAiE,CACtE,MAAM8wB,EAAgB9wB,SAAAA,eADgDN,IAEtEoxB,IACEJ,kBAAoBI,EAAAA,QAAAA,4BADH,gBASvB,SAAAC,eACE,GAAIvO,gBAAAA,oBAAJwO,UAEE,MAAA,aAAIxO,gBAAAA,oBAAAA,UAAAA,YAAAA,KACKA,gBAAAA,oBAD0DwO,YAI5DxO,gBAAAA,oBAN0BwO,UAQnC,QAAA,IAAIN,kBAA0C,CAC5C3Q,SAAAY,WACExiB,EAAAA,eAAAA,YADa,iDAGf,OAJ4CuyB,kBAM9C,MAAM,IAAAvwB,MAfgB,iDAkBxB,SAAA8wB,oCACE,IAD2CC,EAE3C,IACEA,EAA2B5vB,WAAAA,aADzB6vB,qBAEF,MAAA9xB,IAGF,OAAO6xB,GAPoC,KAW7C,SAAAE,wBACE,GAAAR,qBACE,OAAOA,qBADiB9L,QAG1B8L,sBAJ+B,EAAArwB,MAAAmJ,2BAM/B,MAAM2nB,OAASzuB,iBACb,MAAMsuB,yBAA2BD,oCAEjC,GAAAC,yBAEE,OAF4BA,yBAQ9B,GACEnR,SAAAY,UADF,mBAIEkQ,QACA,CAcA,MAAMnP,OAAS4P,KAAAA,UAAAA,CAAgBP,gBAC/B,OAAOrP,OAfPyP,2BAiBI1xB,EAAAA,eAAAA,YAAWsxB,gBACjB,OAAOtQ,OAAAA,YAlCwB0Q,sBAoCjCE,SAAAA,KAAcT,qBAAdS,QAA4CT,qBA1Cb9wB,QA4C/B,OAAO8wB,qBA5CwB9L,QA+CjC,SAAAyM,iBAAAn0B,GAIE,MAAMo0B,EAAU,kBAAAp0B,EAJa,MAK7B,OAAO4J,IAAAA,gBAAoB,IAAAoC,KAAS,CALPooB,KAe/B,MAAA9O,UAIE/hB,aAAYoB,KACVA,EADU,KAAAwgB,KAEVA,EAFU,KAAA7X,UAGVA,GAHU,EAAAnK,MAAAkK,sBAAZ9J,IAKE,GAAI4hB,GAAQiO,eAAAA,IAAZjO,GACE,MAAM,IAAApiB,MAD8B,+CAItClD,KAAA8E,KALMA,EAMN9E,KAAA2lB,WANM,EAON3lB,KAAA2mB,sBAPM,EAQN3mB,KAAAyN,UARMA,EAUNzN,KAAAkoB,kBAVM,EAAA5kB,MAAAmJ,2BAWNzM,KAAAw0B,MAXM,KAYNx0B,KAAAy0B,WAZM,KAaNz0B,KAAA00B,gBAbM,KAeN,GAAApP,EAAA,CACEiO,eAAAA,IAAAA,EADQvzB,MAERA,KAAA20B,oBAFQrP,QAKVtlB,KApBM40B,cAuBR/M,cACE,OAAO7nB,KAAAkoB,iBADKL,QAIdvC,WACE,OAAOtlB,KADEw0B,MAIX/N,qBACE,OAAOzmB,KADY00B,gBAIrBC,oBAAAA,GACE30B,KAAAw0B,MADwBlP,EAExBtlB,KAAA00B,gBAAuB,IAAA3R,iBAAA2D,eAAA,OAAA,SAFCpB,GAGxBtlB,KAAA00B,gBAAAG,GAAA,SAAiC,eAIjC70B,KAAAkoB,iBAPwBtlB,UAU1BgyB,cAME,GACE,oBAAAE,SAAAtB,mBAECQ,oCACD,CACA,IAAID,EAAYD,eAEhB,KAMKxlB,EAAAA,MAAAA,cAAakV,OAAAA,SAAblV,KAHHylB,KAKEA,EAAYO,iBACV,IAAAvqB,IAAAgqB,EAAmBvQ,OAAnBkB,UAFFC,OAQF,MAAMF,EAAS,IAAAqQ,OAfbf,GAgBItN,EAAiB,IAAA1D,iBAAA2D,eAAA,OAAA,SAhBrBjC,GAiBIsQ,eAAiB,KACrBtQ,EAAAA,oBAAAA,QAD2BuQ,eAE3BvO,EAF2BviB,UAG3BugB,EAH2B4O,YAIvBrzB,KAAJ2lB,UACE3lB,KAAAkoB,iBAAArlB,OAA6B,IAAAK,MADX,yBAKlBlD,KAHKi1B,oBAOHD,cAAgB,KACfh1B,KAALy0B,YAGEM,kBAGJtQ,EAAAA,iBAAAA,QArCEuQ,eAuCFvO,EAAAA,GAAAA,QAA0Bpb,IACxBoZ,EAAAA,oBAAAA,QADgCuQ,eAEhC,GAAIh1B,KAAJ2lB,UACEoP,sBAGF,GAAA1pB,EAAU,CAERrL,KAAA00B,gBAFQjO,EAGRzmB,KAAAw0B,MAHQ/P,EAIRzkB,KAAAy0B,WAJQhQ,EAKHpZ,EAAL6pB,mBACEl1B,KAAA2mB,sBAD0B,GAG5B3mB,KAAAkoB,iBARQtlB,UAUR6jB,EAAAA,KAAAA,YAAiC,CAC/BhZ,UAAWzN,KAXLyN,gBAaH,CACLzN,KADKi1B,mBAELxO,EAFKviB,UAGLugB,EAHK4O,gBAOT5M,EAAAA,GAAAA,SAA2Bpb,IACzBoZ,EAAAA,oBAAAA,QADiCuQ,eAEjC,GAAIh1B,KAAJ2lB,UACEoP,sBAGF,IACEI,WACA,MAAAzmB,GAEA1O,KAFUi1B,uBAMd,MAAME,SAAW,KACf,MAAMC,EAAU,IAAApvB,WAAe,CAC7BhG,KAAA2mB,qBAAA,IAFmB,IAMrB,IACEF,EAAAA,KAAAA,OAAAA,EAAqC,CAAC2O,EADpC/oB,SAEF,MAAAjK,IACAN,EAAAA,MAAAA,MADW,qCAEXszB,EAAAA,GAFW,EAGX3O,EAAAA,KAAAA,OAHW2O,KAWfD,WAlGE,OAoGF,MAAAzmB,IACAhB,EAAAA,MAAAA,MADU,kCAMd1N,KAvHYi1B,mBA0HdA,mBACE,IAAAzB,iBAAuB,EACrB1xB,EAAAA,MAAAA,MADqB,2BAErB0xB,kBAFqB,EAKvBW,wBAAAA,MACQD,IACJ,GAAIl0B,KAAJ2lB,UAAoB,CAClB3lB,KAAAkoB,iBAAArlB,OAA6B,IAAAK,MADX,yBAAA,OAIpB,MAAMoiB,EAAO,IALe+M,aAM5BryB,KAAAw0B,MAN4BlP,EAS5B,MAAMwE,EAAK,OAAS4J,mBAId2B,EAAgB,IAAAtS,iBAAA2D,eAAmBoD,EAAnB,UAAAA,EAbMxE,GAc5B4O,EAAAA,MAAAA,EAd4B5O,GAgB5B,MAAMmB,EAAiB,IAAA1D,iBAAA2D,eAAAoD,EAAuBA,EAAvB,UAhBKxE,GAiB5BtlB,KAAA00B,gBAjB4BjO,EAkB5BzmB,KAAAkoB,iBAlB4BtlB,UAoB5B6jB,EAAAA,KAAAA,YAAiC,CAC/BhZ,UAAWzN,KArBeyN,eADhC0mB,OAyBS/uB,IACLpF,KAAAkoB,iBAAArlB,OACE,IAAAK,MAAU,mCAAmCkC,EAAnCoa,iBAQlBtb,UACElE,KAAA2lB,WADQ,EAER,GAAI3lB,KAAJy0B,WAAqB,CAEnBz0B,KAAAy0B,WAFmBpB,YAGnBrzB,KAAAy0B,WAHmB,KAKrBlB,eAAAA,OAAsBvzB,KAPdw0B,OAQRx0B,KAAAw0B,MARQ,KASR,GAAIx0B,KAAJ00B,gBAA0B,CACxB10B,KAAA00B,gBADwBxwB,UAExBlE,KAAA00B,gBAFwB,MAU5B7vB,gBAAA0f,GACE,IAAIA,IAAYA,EAAhBe,KACE,MAAM,IAAApiB,MADqB,kDAG7B,OAAIqwB,eAAAA,IAAmBhP,EAAvBe,MACSiO,eAAAA,IAAmBhP,EADSe,MAG9B,IAAAG,UAPelB,GAUxB1f,sBACE,OAAOivB,gBAGX,OAjX6CrO,UAA5B,+BAwXnB,MAAAoB,gBACEnjB,YAAAA,EAAAA,EAAAA,EAAAA,GACE1D,KAAAymB,eAD8DA,EAE9DzmB,KAAAorB,YAF8DA,EAG9DprB,KAAAmsB,WAAkB,IAH4CE,WAI9DrsB,KAAAs1B,WAAkB,IAAA9S,aAAA+S,WAAe,CAC/B7P,MAAO0F,EADwB1F,MAE/BkC,qBAAsB5nB,KAAAw1B,sBAAAC,KAFSz1B,MAG/BoE,cAAemgB,EAHgBngB,gBAKjCpE,KAAA01B,QAT8DnR,EAW9D,IAAIoR,EAAUpR,EAXgDoR,QAY9D,aAAIA,EAAAA,YAAAA,OACFA,EAAUA,KAEZ31B,KAAA41B,kBAAyB,IAAIrR,EAAJqR,kBAA6B,CACpDjxB,QADoDgxB,EAEpD/wB,aAAc2f,EAFsCsR,aAKtD71B,KAAA2lB,WApB8D,EAqB9D3lB,KAAA81B,kBArB8D,KAsB9D91B,KAAA+1B,oBAtB8D,KAwB9D/1B,KAAAg2B,eAxB8DjQ,EAyB9D/lB,KAAAi2B,YAzB8D,KA0B9Dj2B,KAAAk2B,cA1B8D,KA4B9Dl2B,KAAAoxB,UA5B8D,GA6B9DpxB,KAAAm2B,aA7B8D,GA8B9Dn2B,KAAA+qB,wBA9B8D,EAAAznB,MAAAmJ,2BAgC9DzM,KAhC8Do2B,sBAmChEC,yBACE,OAAOr2B,KAAAorB,YAAA7D,YADgB+O,QAIzBpyB,UACE,GAAIlE,KAAJ81B,kBACE,OAAO91B,KAAA81B,kBADmBjO,QAI5B7nB,KAAA2lB,WALQ,EAMR3lB,KAAA81B,mBANQ,EAAAxyB,MAAAmJ,2BAQJzM,KAAJ+1B,qBACE/1B,KAAA+1B,oBAAAlzB,OACE,IAAAK,MAF0B,oDAM9B,MAAMmuB,EAdE,GAiBRrxB,KAAAoxB,UAAAmF,SAAuB,SAAAC,GACrBA,GACEnF,EAAAA,KAAYmF,EADJrF,eAIZnxB,KAAAoxB,UAAA1vB,OAtBQ,EAuBR1B,KAAAm2B,aAAAz0B,OAvBQ,EAyBR,MAAM+0B,EAAaz2B,KAAAymB,eAAAM,gBAAA,YAzBX,MA0BRsK,EAAAA,KA1BQoF,GA4BR,GAAIz2B,KAAJq2B,mBAA6B,CAC3B,MAAMK,EAAiC12B,KAAAorB,YAAAvD,QAAAniB,MAC/BixB,IAEAA,EAAAA,eAAJ,sBACEA,EAAAA,kBADmDC,mBAHlBzxB,OAO9B,SACTksB,EAAAA,KAT2BqF,GAW7B/zB,QAAAA,IAAAA,GAAAA,MAAyB,KACvB3C,KAAAmsB,WAD6BsF,QAE7BzxB,KAAAs1B,WAF6B7D,QAG7BzxB,KAAA62B,qBAH6B,KAKzB72B,KAAJg2B,gBACEh2B,KAAAg2B,eAAAc,kBACE,IAAAxzB,MAAA0c,eAFqB,2BAMzB,GAAIhgB,KAAJymB,eAAyB,CACvBzmB,KAAAymB,eADuBviB,UAEvBlE,KAAAymB,eAFuB,KAIzBzmB,KAAA81B,kBAf6BlzB,YAgB5B5C,KAAA81B,kBAvDKjzB,QAwDR,OAAO7C,KAAA81B,kBAxDCjO,QA2DVuO,sBACE,MAAM3P,eAAAA,EAAA2E,YAAAA,GADcprB,KAGpBymB,EAAAA,GAAAA,aAA+B,CAAApb,EAAA0rB,MAC7Bx2B,EAAAA,MAAAA,QACEP,KADFO,eAD6C,mDAK7CP,KAAAi2B,YAAmBj2B,KAAAg2B,eAL0BgB,gBAM7Ch3B,KAAAi2B,YAAAtO,WAA8B3kB,IAC5BhD,KAAAk2B,cAAqB,CACnBe,OAAQj0B,EADWi0B,OAEnBvO,MAAO1lB,EAFY0lB,QAKvBqO,EAAAA,OAAc,KACZ/2B,KAAAi2B,YAAAiB,OAAAxxB,MAEQ,UAAUsJ,MAAAA,EAAAkiB,KAAVA,IACJ,GAAAA,EACE6F,EADQI,YAAV,EAIA52B,EAAAA,MAAAA,SACEsN,EAAAA,MAAAA,eADFtN,GAL+B,wCAW/Bw2B,EAAAA,QAAa,IAAA/wB,WAAb+wB,GAAAA,EAAuC,CAXR/nB,QAFnC7J,OAeSC,IACL2xB,EAAAA,MADe3xB,OAKrB2xB,EAAAA,SAAgB3xB,IACdpF,KAAAi2B,YAAAzE,OADwBpsB,GAGxB2xB,EAAAA,MAAAA,OAAiBK,IACf,IAAIp3B,KAAJ2lB,UAGA,MAJ8ByR,SASpC3Q,EAAAA,GAAAA,sBAAwCpb,IACtC,MAAMgsB,GADwC,EAAA/zB,MAAAmJ,2BAExC6qB,EAAat3B,KAF2Bi2B,YAG9CqB,EAAAA,aAAAA,MAA6B,KAG3B,IAAKA,EAADC,uBAAqCD,EAAzCE,iBAAsE,CAChEx3B,KAAAk2B,eAAsB9K,EAA1BzD,YACEyD,EAAAA,WAAuBprB,KADyBk2B,eAGlDoB,EAAAA,WAAwBt0B,IAClBooB,EAAJzD,YACEyD,EAAAA,WAAuB,CACrB6L,OAAQj0B,EADai0B,OAErBvO,MAAO1lB,EAFc0lB,SAQ7B2O,EAAAA,QAA0B,CACxBE,qBAAsBD,EADEC,qBAExBC,iBAAkBF,EAFME,iBAGxBC,cAAeH,EAHSG,kBAKzBJ,EAzB2Cx0B,QA2B9C,OAAOw0B,EA3BuCxP,WA8BhDpB,EAAAA,GAAAA,kBAAoC,CAAApb,EAAA0rB,MAClCx2B,EAAAA,MAAAA,QACEP,KADFO,eADkD,wDAKlD,MAAMm3B,EAAc13B,KAAAg2B,eAAA2B,eAClBtsB,EADkBusB,MAElBvsB,EAPgD7J,KAoBlD,GAAAk2B,EAAA,CAKAX,EAAAA,OAAc,KACZW,EAAAA,OAAAA,MAEQ,UAAU1oB,MAAAA,EAAAkiB,KAAVA,IACJ,GAAAA,EACE6F,EADQI,YAAV,EAIA52B,EAAAA,MAAAA,SACEsN,EAAAA,MAAAA,eADFtN,GAL+B,6CAS/Bw2B,EAAAA,QAAa,IAAA/wB,WAAb+wB,GAAAA,EAAuC,CATR/nB,QAFnC0oB,OAaStyB,IACL2xB,EAAAA,MADe3xB,OAKrB2xB,EAAAA,SAAgB3xB,IACdsyB,EAAAA,OADwBtyB,GAGxB2xB,EAAAA,MAAAA,OAAiBK,IACf,IAAIp3B,KAAJ2lB,UAGA,MAJ8ByR,WA1BhCL,EADgBI,WAoCpB1Q,EAAAA,GAAAA,UAA4B,EAAAyC,QAAAA,MAC1BlpB,KAAA63B,UAAiB3O,EAD0BG,SAE3C+B,EAAAA,YAAAA,QAAgC,IAAApC,iBAAAE,EAFWlpB,UAK7CymB,EAAAA,GAAAA,gBAAkC,SAAArkB,GAChC,IAD8CgD,EAE9C,OAAQhD,EAAR0C,MACE,IAAA,oBACEM,EAAS,IAAA9B,MAAAmc,kBAAsBrd,EAAtBod,QAAkCpd,EAD7CmN,MADF,MAIE,IAAA,sBACEnK,EAAS,IAAA9B,MAAAqc,oBAAwBvd,EADnCod,SAJF,MAOE,IAAA,sBACEpa,EAAS,IAAA9B,MAAAsc,oBAAwBxd,EADnCod,SAPF,MAUE,IAAA,8BACEpa,EAAS,IAAA9B,MAAAuc,4BAAgCzd,EAAhCod,QAA4Cpd,EADvD0d,QAVF,MAaE,IAAA,wBACE1a,EAAS,IAAA9B,MAAAoc,sBAA0Btd,EAA1Bod,QAAsCpd,EADjDjB,SAIF,KAAMiE,aAANlC,OAAgC,CAC9B,MAAMwF,EADwB,0CAQ5B5G,EAAAA,MAAAA,MAR4B4G,GAWhC0iB,EAAAA,YAAAA,OA9B8ChmB,MAiChDqhB,EAAAA,GAAAA,mBAAqCqR,IACnC93B,KAAA+1B,qBADgD,EAAAzyB,MAAAmJ,2BAGhD,GAAI2e,EAAJ1D,WAA4B,CAC1B,MAAMqQ,eAAiB9Q,IACrBjnB,KAAA+1B,oBAAAnzB,QAAiC,CADAqkB,SAAAA,KAKnC,IACEmE,EAAAA,WAAAA,eAAuC0M,EADrCvoB,MAEF,MAAAnN,GACApC,KAAA+1B,oBAAAlzB,OADWT,SAIbpC,KAAA+1B,oBAAAlzB,OACE,IAAAS,MAAAmc,kBAAsBqY,EAAtBtY,QAAyCsY,EAFtCvoB,OAKP,OAAOvP,KAAA+1B,oBAnByClO,WAsBlDpB,EAAAA,GAAAA,cAAgCpb,IAG1B+f,EAAJzD,YACEyD,EAAAA,WAAuB,CACrB6L,OAAQ5rB,EADa3J,OAErBgnB,MAAOrd,EAFc3J,SAKzB1B,KAAA+qB,uBAAAnoB,QATsCyI,MAYxCob,EAAAA,GAAAA,mBAAqCpb,IACnC,GAAIrL,KAAJ2lB,UAAoB,OAIP3lB,KAAAoxB,UAAe/lB,EALewgB,WAM3C2K,iBAAsBnrB,EAAtBmrB,aAAyCnrB,EANE0hB,WAS7CtG,EAAAA,GAAAA,aAA+Bpb,IAC7B,GAAIrL,KAAJ2lB,UAAoB,OAIpB,MAAMmE,EAAApjB,EAAAsxB,GAL+B3sB,EAMrC,IAAIrL,KAAAmsB,WAAA8L,IAAJnO,GAIA,OAAApjB,GACE,IAAA,OACE,MAAM6d,EAASvkB,KADjB01B,QAGE,GAAI,UAAJsC,EAA6B,CAC3B,MAAME,EAAgBF,EADKhJ,OAE3BltB,EAAAA,MAAAA,MAAK,8BAAAo2B,KACLl4B,KAAAmsB,WAAAvpB,QAAAknB,EAH2BoO,GAAA,MAO7B,IAAIC,EAVN,KAWM5T,EAAAA,QAAiBlgB,WAAAA,eAArB/D,UACE63B,EAAe,CACbC,aAAAA,EAAAA,GACE/zB,WAAAA,cAAAA,UAAAA,EADsBlE,MAK5B,MAAM8d,EAAO,IAAAuE,aAAA6V,eAAAL,EAAiC,CAC5CxX,gBAAiB+D,EAD2B/D,gBAE5CwE,gBAAiBT,EAF2BS,gBAG5CkC,aAAc3C,EAH8B2C,aAI5CU,qBAAsB5nB,KAAAw1B,sBAAAC,KAJsBz1B,MAAAm4B,aAAAA,IAQ9Cn4B,KAAAs1B,WAAAG,KAAAxX,GAAA9Y,OAESC,GACEqhB,EAAAA,gBAAAA,eAA+C,CADvCqD,GAAAA,MAFnBwO,SAKW,MACF/T,EAAD4C,qBAA+BlJ,EAAnC5S,OAME4S,EAAAA,KAN4C,MAQ9Cje,KAAAmsB,WAAAvpB,QAAAknB,EATa7L,MAhCrB,MA4CE,IA5CF,WA6CE,IAAA,QACEje,KAAAmsB,WAAAvpB,QAAAknB,EADFkO,GA7CF,MAgDE,QACE,MAAM,IAAA90B,MAAU,kCAAAwD,SAItB+f,EAAAA,GAAAA,OAAyBpb,IACvB,GAAIrL,KAAJ2lB,UAEE,OAGF,MAAMmE,EAAA+B,EAAAnlB,EAAA6xB,GANyBltB,EAOzBmtB,EAAYx4B,KAAAoxB,UAPavF,GAQ/B,IAAI2M,EAAAA,KAAAA,IAAJ1O,GAIA,OAAApjB,GACE,IAAA,QACE8xB,EAAAA,KAAAA,QAAAA,EADFD,GAIE,MAAME,EAJR,IAKMF,GAAAA,MAAAA,OAAJE,IACED,EAAAA,oBADqD,GAN3D,MAUE,QACE,MAAM,IAAAt1B,MAAU,2BAAAwD,SAKtB+f,EAAAA,GAAAA,eAAiCpb,IAC3BrL,KAAJ2lB,WAIIyF,EAAJzD,YACEyD,EAAAA,WAAuB,CACrB6L,OAAQ5rB,EADa4rB,OAErBvO,MAAOrd,EAFcqd,WAO3BjC,EAAAA,GAAAA,qBAEEzmB,KAAAw1B,sBAAAC,KAjUkBz1B,OAoUpBymB,EAAAA,GAAAA,oBAAsC,CAAApb,EAAA0rB,KACpC,GAAI/2B,KAAJ2lB,UAAoB,CAClBoR,EAAAA,MAAW,IAAA7zB,MADO,yBAAA,OAIpB,IAAIw1B,GALgD,EAOpD3B,EAAAA,OAAc,KACZ,GAAA2B,EACE3B,EADWI,YAAb,CAIAuB,GALkB,EAOlB14B,KAAA41B,kBAAAnwB,MAAA4F,GAAA3F,MACQ,SAAAizB,GACJ5B,EAAAA,QAAAA,EAAAA,EAA6B,CAAC4B,EAAAA,SADHtsB,YAD/BlH,OAIS,SAAAC,GACL2xB,EAAAA,MADuB3xB,WAOjCowB,uBAAsBoD,UAAtBpD,IACMx1B,KAAJ2lB,WAGI3lB,KAAAorB,YAAJxD,sBACE5nB,KAAAorB,YAAAxD,qBADyCgR,GAK7C/N,UACE,OAAO7qB,KAAAymB,eAAAM,gBAAA,UADC,MAIVyC,QAAAA,GACE,IACGpa,OAAAA,UAADqa,IACAA,GADA,GAEAA,EAAazpB,KAHf63B,UAKE,OAAOl1B,QAAAA,OAAe,IAAAO,MADtB,yBAIF,MAAM2oB,EAAYpC,EATA,EAUlB,GAAIoC,KAAa7rB,KAAjBm2B,aACE,OAAOn2B,KAAAm2B,aAD2BtK,GAGpC,MAAMhE,EAAU7nB,KAAAymB,eAAAM,gBAAA,UACc,CADd8E,UAAAA,IAAAnmB,MAIRqmB,IACJ,GAAI/rB,KAAJ2lB,UACE,MAAM,IAAAziB,MADY,uBAGpB,MAAMszB,EAAO,IAAA9K,aAAAG,EAAAE,EAAA/rB,KAIXA,KAAA01B,QAJWtxB,cAKXpE,KAAA01B,QATc/J,QAWhB3rB,KAAAoxB,UAAAvF,GAXgB2K,EAYhB,OAZgBA,KAcpBx2B,KAAAm2B,aAAAtK,GA/BkBhE,EAgClB,OAhCkBA,EAmCpB6B,aAAAA,GACE,OAAO1pB,KAAAymB,eAAAM,gBAAA,eAC4B,CAD5B4C,IAAAA,IAAAxkB,OAIE,SAAAC,GACL,OAAOzC,QAAAA,OAAe,IAAAO,MADCkC,OAK7B0nB,eAAAA,EAAAA,GACE,OAAO9sB,KAAAymB,eAAAM,gBAAA,iBAAsD,CAAA8E,UAAAA,EAAAkB,OAAAA,IAM/DzB,aAAAA,GACE,OAAOtrB,KAAAymB,eAAAM,gBAAA,eAC4B,CAC/BsC,SAAUrpB,KADqB63B,UAE/B1O,kBAAmBA,GAAAA,cAFY,KAG/B7mB,SAAUtC,KAAAi2B,aAAA3zB,UAHqB,OAD5Bg2B,SAMI,KACPnP,GACEA,EADqByN,mBAM7BrL,kBACE,OAAOvrB,KAAAymB,eAAAM,gBAAA,kBADS,MAIlByE,eACE,OAAQxrB,KAAA62B,uBAAA72B,KAAA62B,qBAA8B72B,KAAAymB,eAAAM,gBAAA,eADzB,OAOf0E,yBACE,OAAOzrB,KAAAymB,eAAAM,gBAAA,yBADgB,MAIzB6C,kBACE,OAAO5pB,KAAAymB,eAAAM,gBAAA,kBADS,MAIlB8C,eAAAA,GACE,MAAA,iBAAIC,EACKnnB,QAAAA,OAAe,IAAAO,MADI,iCAGrBlD,KAAAymB,eAAAM,gBAAA,iBAAsD,CAJ5C+C,GAAAA,IASnBC,gBACE,OAAO/pB,KAAAymB,eAAAM,gBAAA,gBADO,MAIhBiD,gBACE,OAAOhqB,KAAAymB,eAAAM,gBAAA,gBADO,MAIhBkD,cACE,OAAOjqB,KAAAymB,eAAAM,gBAAA,cADK,MAIdmD,uBACE,OAAOlqB,KAAAymB,eAAAM,gBAAA,uBADc,MAIvBoD,gBACE,OAAOnqB,KAAAymB,eAAAM,gBAAA,gBADO,MAIhBqD,iBACE,OAAOpqB,KAAAymB,eAAAM,gBAAA,iBADQ,MAIjBsD,gBACE,OAAOrqB,KAAAymB,eAAAM,gBAAA,gBADO,MAIhBwD,kBACE,OAAOvqB,KAAAymB,eAAAM,gBAAA,kBADS,MAIlBoG,iBAAAA,GACE,OAAOntB,KAAAymB,eAAAM,gBAAA,mBAAwD,CADrC8E,UAAAA,IAM5ByB,WAAAA,GACE,OAAOttB,KAAAymB,eAAAM,gBAAA,aAAkD,CADrC8E,UAAAA,IAMtBrB,aACE,OAAOxqB,KAAAymB,eAAAM,gBAAA,aADI,MAIb0D,2BACE,OAAOzqB,KAAAymB,eAAAM,gBAAA,2BAAA,MAAArhB,MAECmzB,GACG,IAAA5V,yBAAA6V,sBADQD,KAKrBnO,iBACE,OAAO1qB,KAAAymB,eAAAM,gBAAA,iBADQ,MAIjB4D,cACE,OAAO3qB,KAAAymB,eAAAM,gBAAA,cAAA,MAAArhB,MAECmzB,IACG,CACLnrB,KAAMmrB,EADD,GAELE,SAAUF,EAAAA,GAAa,IAAA7V,UAAAgW,SAAaH,EAA1BA,IAFL,KAGL1S,2BAA4BnmB,KAAAi2B,aAAA3zB,UAHvB,KAILm1B,cAAez3B,KAAAi2B,aAAAwB,eAJV,SASb7M,cACE,OAAO5qB,KAAAymB,eAAAM,gBAAA,cADK,MAIdiE,WACE,OAAOhrB,KAAAymB,eAAAM,gBAAA,WADE,MAIXliB,mBAAmBqmB,GAAnB,SACQlrB,KAAAymB,eAAAM,gBAAA,UADoC,MAG1C,IAAI/mB,KAAJ2lB,UAAA,CAGA,IAAK,IAAI/c,EAAJ,EAAWD,EAAK3I,KAAAoxB,UAArB1vB,OAA4CkH,EAA5CD,EAAoDC,IAAK,CACvD,MAAM4tB,EAAOx2B,KAAAoxB,UAD0CxoB,GAEvD,IAAA4tB,EAAW,SAKX,IAF0BA,EAL6BvL,UAQrD,MAAM,IAAA/nB,MAAU,sBAAsB0F,EAAtB,6BAGpB5I,KAAAmsB,WAjB0CsF,QAkB1CvG,GACElrB,KAAAs1B,WADoB7D,QAGtBzxB,KAAA62B,qBArB0C,MAwB5CxL,oBACE,MAAM9G,EAASvkB,KADG01B,QAElB,OAAO,EAAApyB,MAAA4b,QAAAlf,KAAA,gBAA8B,CACnColB,iBAAkBb,EADiBa,iBAEnCJ,gBAAiBT,EAFkBS,mBAazC,MAAAqH,WACE3oB,cACE1D,KAAAi5B,MAAalwB,OAAAA,OADD,MAQdmwB,WAAAA,GACE,OAAIl5B,KAAAi5B,MAAJE,GACSn5B,KAAAi5B,MADcE,GAGfn5B,KAAAi5B,MAAAE,GAAoB,CAC1BzsB,YAD0B,EAAApJ,MAAAmJ,2BAE1BpB,KAF0B,KAG1B+tB,UAH0B,GAe9BxsB,IAAAA,EAAWyiB,EAAXziB,MAGE,GAAAyiB,EAAc,CACZrvB,KAAAk5B,WAAAC,GAAAzsB,WAAAmb,QAAAniB,KADY2pB,GAEZ,OAFY,KAMd,MAAMvgB,EAAM9O,KAAAi5B,MATcE,GAY1B,IAAIrqB,IAASA,EAAbsqB,SACE,MAAM,IAAAl2B,MAAU,6CAAAi2B,MAElB,OAAOrqB,EAfmBzD,KAkB5B4sB,IAAAA,GAEE,OADYj4B,KAAAi5B,MADHE,IAEFrqB,WAFE,EAQXlM,QAAAA,EAAAA,GACE,MAAMkM,EAAM9O,KAAAk5B,WADOC,GAGnBrqB,EAAAA,UAHmB,EAInBA,EAAAA,KAJmBzD,EAKnByD,EAAAA,WAAAA,QALmBzD,GAQrBomB,QACEzxB,KAAAi5B,MAAalwB,OAAAA,OADP,OAQV,MAAAswB,WACE31B,YAAAA,GACE1D,KAAAs5B,oBAD8BrK,EAS9BjvB,KAAAu5B,WAT8B,KAgBhC1R,cACE,OAAO7nB,KAAAs5B,oBAAA5sB,WADKmb,QASd2J,SACExxB,KAAAs5B,oBADO9H,UASX,MAAMpC,mBAAsB,SAAAoK,4BAC1B,MAAMC,EAAoB,IADqCC,QAqL/D,OAjLA,MAAAtK,mBACE1rB,aAAY2rB,SAAAA,EAAA9K,OAAAA,EAAA6H,KAAAA,EAAAD,WAAAA,EAAAmD,aAAAA,EAAAzD,UAAAA,EAAAgC,cAAAA,EAAAU,aAAAA,EAAAgB,yBASVA,GATU,EAAA5D,OAUVA,GAVFjoB,IAYE1D,KAAAqvB,SADCA,EAEDrvB,KAAAukB,OAFCA,EAGDvkB,KAAAosB,KAHCA,EAIDpsB,KAAAmsB,WAJCA,EAKDnsB,KAAA25B,gBALC,KAMD35B,KAAAsvB,aANCA,EAODtvB,KAAA4rB,WAPCC,EAQD7rB,KAAA6tB,cARCA,EASD7tB,KAAAuuB,aATCA,EAUDvuB,KAAAksB,QAVCP,EAYD3rB,KAAA45B,SAZC,EAaD55B,KAAA65B,sBAbC,KAcD75B,KAAA85B,eAdC,EAeD95B,KAAA+5B,2BACExK,IAAAA,GAhBD,oBAgBsC/L,OACvCxjB,KAAAg6B,WAjBC,EAkBDh6B,KAAA0M,YAlBC,EAAApJ,MAAAmJ,2BAmBDzM,KAAAkkB,KAAY,IAAAmV,WAnBXr5B,MAqBDA,KAAAi6B,aAAoBj6B,KAAAwxB,OAAAiE,KArBnBz1B,MAsBDA,KAAAk6B,eAAsBl6B,KAAAm6B,UAAA1E,KAtBrBz1B,MAuBDA,KAAAo6B,mBAA0Bp6B,KAAAq6B,cAAA5E,KAvBzBz1B,MAwBDA,KAAAs6B,WAAkBt6B,KAAAu6B,MAAA9E,KAxBjBz1B,MAyBDA,KAAA4iB,QAAe2B,EAAAA,cAzBdxgB,OA4BHwtB,gBACE,OAAOvxB,KAAA0M,WAAAmb,QAAA1iB,OAA8B,eAMvCq1B,oBAAmB5K,aAAEA,GAAF,EAAAC,sBAAnB2K,IACE,GAAIx6B,KAAJg6B,UAAoB,OAGpB,GAAIh6B,KAAJ4iB,QAAkB,CAChB,GAAI6W,EAAAA,IAAsBz5B,KAA1B4iB,SACE,MAAM,IAAA1f,MACJ,mJAKJu2B,EAAAA,IAAsBz5B,KARN4iB,SAWlB,GAAI5iB,KAAAksB,SAAgB7nB,WAAAA,gBAApB/D,QAAwD,CACtDN,KAAAy6B,QAAep2B,WAAAA,eAAAA,OAAiCrE,KADM4rB,YAEtD5rB,KAAAy6B,QAAAC,KAAkB16B,KAFoCsvB,cAGtDtvB,KAAAy6B,QAAAE,eAA8B36B,KAAAy6B,QAHwBG,oBAKxD,MAAMpN,cAAAA,EAAAC,SAAAA,EAAA/lB,UAAAA,EAAAkmB,WAAAA,EAAAE,WAAAA,GAMF9tB,KA1B8DukB,OA4BlEvkB,KAAA66B,IAAW,IAAAjY,QAAAkY,eAAAtN,EAETxtB,KAFSmsB,WAGTnsB,KAHSosB,KAITpsB,KAJS6tB,cAKT7tB,KALSuuB,aAAAX,EA5BuDiC,GAqClE7vB,KAAA66B,IAAAE,aAAsB,CAAArzB,UAAAA,EAAA+lB,SAAAA,EAAAmC,aAAAA,EAAA9B,WAAAA,IAMtB9tB,KAAA25B,gBA3CkE,EA4ClE35B,KAAA85B,eA5CkE,EA6C9D95B,KAAJ65B,uBACE75B,KAD8B65B,wBAKlCrI,OAAOxC,EAAPwC,MACExxB,KAAA45B,SADmB,EAEnB55B,KAAAg6B,WAFmB,EAGfh6B,KAAJ66B,KACE76B,KAAA66B,IADYG,aAGVh7B,KAAJ4iB,SACE6W,EAAAA,OAAyBz5B,KADT4iB,SAGlB5iB,KAAAqvB,SACEL,GACE,IAAAzM,eAAA/Z,4BACE,6BAA6BxI,KAAA4rB,WAA7B,IAZa,WAkBrBkE,sBACE,GAAK9vB,KAAL85B,cAAA,CAOI95B,KAAJy6B,SACEz6B,KAAAy6B,QAAAQ,mBAAgCj7B,KADhBsvB,cAIdtvB,KAAJ45B,SAGA55B,KAfoBm6B,iBAEbn6B,KAAL65B,wBACE75B,KAAA65B,sBAA6B75B,KADEk6B,gBAgBrCC,YACEn6B,KAAA45B,SADU,EAEN55B,KAAJg6B,YAGIh6B,KAAAkkB,KAAJqV,WACEv5B,KAAAkkB,KAAAqV,WAAqBv5B,KADGo6B,oBAGxBp6B,KADKq6B,iBAKTA,gBACMr6B,KAAJ+5B,0BACEvW,OAAAA,uBAA6B,KAC3BxjB,KAAAs6B,aAAAn1B,MAAwBnF,KADSi6B,iBAInCt3B,QAAAA,UAAAA,KAAuB3C,KAAvB2C,YAAAA,MAA8C3C,KADzCi6B,cAKTp1B,cACE,IAAI7E,KAAJg6B,UAAA,CAGAh6B,KAAA25B,gBAAuB35B,KAAA66B,IAAAK,oBACrBl7B,KADqBsvB,aAErBtvB,KAFqB25B,gBAGrB35B,KAHqBk6B,eAIrBl6B,KARUy6B,SAUZ,GAAIz6B,KAAA25B,kBAAyB35B,KAAAsvB,aAAAV,UAA7BltB,OAAiE,CAC/D1B,KAAA45B,SAD+D,EAE/D,GAAI55B,KAAAsvB,aAAJT,UAAiC,CAC/B7uB,KAAA66B,IAD+BG,aAE3Bh7B,KAAJ4iB,SACE6W,EAAAA,OAAyBz5B,KADT4iB,SAGlB5iB,KAL+BqvB,gBA3Kb,GAyLtB8L,QA3kGN,kCA8kGA,MAAMC,MA9kGN,iICeA,IAAA93B,EAAAC,EAAA,GAWA,MAAA83B,eACE33B,aAAYgiB,MAAAA,EAAAkC,qBAAAA,EAAAxjB,cAGVA,EAAgBC,WAHlBX,WAKM1D,KAAA0D,cAAJ23B,iBACE13B,EAAAA,EAAAA,aADuC,qCAGzC3D,KAAA0lB,MAJCA,EAKD1lB,KAAAw1B,sBALC5N,EAMD5nB,KAAAuE,UANCH,EAQDpE,KAAAs7B,gBARC,GASDt7B,KAAAu7B,aATC,KAYHC,kBAAAA,GACEx7B,KAAAs7B,gBAAAjyB,KADgCoyB,GAEhCz7B,KAAAuE,UAAAm3B,MAAAhM,IAFgC+L,GAKlCE,WAAAA,GACE,IAAIJ,EAAev7B,KADJu7B,aAEf,IAAAA,EAAmB,CACjBA,EAAev7B,KAAAu7B,aAAoBv7B,KAAAuE,UAAAC,cADlB,SAEjB+2B,EAAAA,GAAkB,wBAAwBv7B,KAAxB0lB,QAClB1lB,KAAAuE,UAAAnB,gBAAAw4B,qBAAA,QAAA,GAAAv4B,YAHiBk4B,GAQnB,MAAMM,EAAaN,EAVJO,MAWfD,EAAAA,WAAAA,EAA4BA,EAAAA,SAXbn6B,QAcjB+vB,QACEzxB,KAAAs7B,gBAAA/E,SAA6BkF,IAC3Bz7B,KAAAuE,UAAAm3B,MAAAvJ,OAD6CsJ,MAG/Cz7B,KAAAs7B,gBAAA55B,OAJM,EAMN,GAAI1B,KAAJu7B,aAAuB,CAErBv7B,KAAAu7B,aAFqBt4B,SAGrBjD,KAAAu7B,aAHqB,MAOzB12B,WAAAoZ,GAEE,GAAIA,EAAAA,UAAiBA,EAArB8d,YAAuC,OAGvC9d,EAAAA,UALe,EAOf,GAAIje,KAAJg8B,0BAAoC,CAClC,MAAMP,EAAiBxd,EADWge,uBAElC,GAAAR,EAAoB,CAClBz7B,KAAAw7B,kBADkBC,GAElB,UACQA,EADJxE,OAEF,MAAA70B,GACApC,KAAAw1B,sBAA2B,CACzBoD,UAAWsD,EAAAA,qBAFFtd,uBAIX9c,EAAAA,EAAAA,MAAK,wBAAwB25B,EAAxBU,aAAA/5B,OAGL6b,EAAAA,iBAPW,EAQX,MARW7b,GANmB,OAqBpC,MAAMg6B,EAAOne,EA5BEoe,qBA6Bf,GAAAD,EAAU,CACRp8B,KAAA27B,WADQS,GAGR,GAAIp8B,KAAJs8B,2BAAqC,aAG/B,IAAA35B,SAAYC,IAChB,MAAMwD,EAAUpG,KAAAu8B,sBADW35B,GAE3B5C,KAAAw8B,sBAA2B,CAA3BJ,GAAmC,CAAnCne,GAF2B7X,OAQjCm2B,sBAAAA,IACE54B,EAAAA,EAAAA,aAD8B,4CAIhCq4B,gCACE,OAAO9c,EAAAA,EAAAA,QAAAA,KAAAA,8BAA4Clf,KAAAuE,WADrBm3B,OAKhCY,kCACE34B,EAAAA,EAAAA,aAD+B,iDAKjC84B,qBACE94B,EAAAA,EAAAA,aADkB,oCAIpB64B,sBAAAA,EAAAA,EAAAA,IACE74B,EAAAA,EAAAA,aADiD,6CAKrD,IA7IA4xB,iBAuJEA,EAAAA,WAAAA,EAAa,MAAAmH,0BAAArB,eACX33B,YAAAA,GACEY,MADkBigB,GAElBvkB,KAAA28B,eAAsB,CACpBC,SADoB,GAEpBC,cAFoB,GAItB78B,KAAA88B,eANkB,EASpBR,iCACE,IAAIS,GAD2B,EAG7B,GAAA,oBAAIC,UAEFD,GAFoC,MAG/B,CAGK,mCAAAE,KACRD,UAJGE,aAMD9b,IAAJ,KACE2b,GADgB,GAMtB,OAAO7d,EAAAA,EAAAA,QAAAA,KAAAA,6BAlBwB6d,GAqBjCR,sBAAAA,GAYE,MAAM93B,EAAUzE,KAZc28B,eAaxBv2B,EAAU,CACd0jB,GAAI,sBAAsBrlB,EAAtBo4B,gBACJ3L,MAFc,EAGdnC,SAfF,SAAAoO,mBACE58B,EAAAA,EAAAA,SAAQ6F,EAAR7F,KADyB,6CAEzB6F,EAAAA,MAFyB,EAKzB,KAAO3B,EAAAA,SAAAA,OAAAA,GAA+BA,EAAAA,SAAAA,GAAtCysB,MAAgE,CAC9D,MAAMkM,EAAe34B,EAAAA,SADyC44B,QAE9DpL,WAAWmL,EAAXnL,SAF8D,KAOlD5C,SAAAA,GAMhB5qB,EAAAA,SAAAA,KAnB8B2B,GAoB9B,OApB8BA,EAuBhCq2B,oBA6BE,OAAOvd,EAAAA,EAAAA,QAAAA,KAAAA,gBAzBEoe,KACL,69CA2BNd,sBAAAA,EAAAA,EAAAA,GAOE,SAAAe,MAAAlyB,EAAAmyB,GACE,OACGnyB,EAAAA,WAAAA,IAAD,GACCA,EAAAA,WAAgBmyB,EAAhBnyB,IADD,GAECA,EAAAA,WAAgBmyB,EAAhBnyB,IAFD,EAFyB,IAKxBA,EAAAA,WAAgBmyB,EAAhBnyB,GAGL,SAAAoyB,aAAAC,EAAAF,EAAAv6B,EAAA06B,GAGE,OAFeD,EAAAA,UAAAA,EADgCF,GAGxCI,EADQF,EAAAA,UAAYF,EAFoBv6B,GAKjD,IAAA2F,EApB2CD,EAuB3C,MAAM5E,EAAS/D,KAAAuE,UAAAC,cAvB4B,UAwB3CT,EAAAA,MAxB2C,EAyB3CA,EAAAA,OAzB2C,EA0B3C,MAAM85B,EAAM95B,EAAAA,WA1B+B,MA4B3C,IAAI+5B,EA5BuC,EA+C3C,MAAMhB,EAAiB,KAAK5zB,KAALC,QAAkBnJ,KAAlB88B,mBAMvB,IAAIzxB,EAAOrL,KArDgCy8B,cAuD3CpxB,EAAOoyB,aAAAA,EAvDoC,IA0DzCX,EAHKW,OAvDoCX,GA8D3C,MACMiB,EA/DqC,WAgE3C,IAAIC,EAAWT,MAAAA,EAhE4B,IAiE3C,IAAK30B,EAAAA,EAAOD,EAAKm0B,EAAAA,OAAjB,EAA4Cl0B,EAA5CD,EAAoDC,GAApD,EACEo1B,EAAYA,EAAAA,EAAwBT,MAAAA,EAAzB30B,GAD+C,EAGxDA,EAAIk0B,EAARp7B,SAEEs8B,EACGA,EAAAA,EAAwBT,MAAMT,EAANS,MAAzB30B,GAH2B,GAK/ByC,EAAOoyB,aAAAA,EAzEoC,GAyEpCA,GAA2CpuB,EAAAA,EAAAA,UAzEP2uB,IA2E3C,MACM5B,EAAO,4BAAAU,UADD,iCAAiCmB,KAAjC5yB,UAEZrL,KAAA27B,WA7E2CS,GA+E3C,MAAM8B,EA/EqC,GAgF3C,IAAKt1B,EAAAA,EAAOD,EAAK+yB,EAAjBh6B,OAA+BkH,EAA/BD,EAAuCC,IACrCs1B,EAAAA,KAAWxC,EAAAA,GAD+ByC,YAG5CD,EAAAA,KAnF2CpB,GAqF3C,MAAMsB,EAAMp+B,KAAAuE,UAAAC,cArF+B,OAsF3C45B,EAAAA,MAAAA,WAtF2C,SAuF3CA,EAAAA,MAAAA,MAAkBA,EAAAA,MAAAA,OAvFyB,OAwF3CA,EAAAA,MAAAA,SAxF2C,WAyF3CA,EAAAA,MAAAA,IAAgBA,EAAAA,MAAAA,KAzF2B,MA2F3C,IAAKx1B,EAAAA,EAAOD,EAAKu1B,EAAjBx8B,OAA+BkH,EAA/BD,IAAAC,EAA4C,CAC1C,MAAMy1B,EAAOr+B,KAAAuE,UAAAC,cAD6B,QAE1C65B,EAAAA,YAF0C,KAG1CA,EAAAA,MAAAA,WAAwBH,EAHkBt1B,GAI1Cw1B,EAAAA,YAJ0CC,GAM5Cr+B,KAAAuE,UAAA+5B,KAAAj7B,YAjG2C+6B,IA6B3C,SAAAG,YAAAz5B,EAAAuqB,GACEyO,IAEA,GAAIA,EAAJ,GAAiB,EACfh8B,EAAAA,EAAAA,MADe,gCAEfutB,IAFe,OAKjBwO,EAAAA,KAAW,QARwB/4B,EASnC+4B,EAAAA,SAAAA,IAAAA,EATmC,IAUjBA,EAAAA,aAAAA,EAAAA,EAAAA,EAViB,GAW/BtF,KAAAA,GAAJ,EACElJ,IAGF4C,WAAWsM,YAAAA,KAAAA,KAAAA,EAfwBlP,IAsErCkP,CAAAA,GAA4B,KAC1Bv+B,KAAAuE,UAAA+5B,KAAAE,YADgCJ,GAEhCh4B,EAFgC2oB,iCASxC,MAAAsJ,eACE30B,YAAAA,GAEE8c,gBACEA,GADF,EAAAwE,gBAEEA,GAFF,EAAAkC,aAGEA,GAHF,EAAAU,qBAAAA,EAAAuQ,aAKEA,EAPJz0B,OAUE1D,KAAAy+B,eAAsB11B,OAAAA,OADtB,MAGA,IAAA,MAAAH,KAAA81B,EACE1+B,KAAA4I,GAAU81B,EADoB91B,GAGhC5I,KAAAwgB,iBANA,IAMuBA,EACvBxgB,KAAAglB,iBAPA,IAOuBA,EACvBhlB,KAAAknB,cARA,IAQoBA,EACpBlnB,KAAAw1B,sBATA5N,EAUA5nB,KAAAm4B,aAVAA,EAaF8D,uBACE,IAAKj8B,KAADqL,MAAcrL,KAAlBglB,gBACE,OADsC,KAGxC,MAAMyW,EAAiB,IAAAkD,SAAa3+B,KAAbm+B,WAA8Bn+B,KAA9BqL,KAJF,IAMjBrL,KAAJm4B,cACEn4B,KAAAm4B,aAAAC,aADqBp4B,MAGvB,OATqBy7B,EAYvBY,qBACE,IAAKr8B,KAADqL,MAAcrL,KAAlBglB,gBACE,OADsC,KAGxC,MAAM3Z,GAAOI,EAAAA,EAAAA,eAAc,IAAAzF,WAAehG,KAJvBqL,OAMblL,EAAM,YAAYH,KAAZ4+B,mBAAoCX,KAApC5yB,OACN+wB,EAAO,4BAA4Bp8B,KAA5Bm+B,mBAAAh+B,KAETH,KAAJm4B,cACEn4B,KAAAm4B,aAAAC,aAAAp4B,KADqBG,GAGvB,OAZmBi8B,EAerByC,iBAAAA,EAAAA,GACE,QAAA9wB,IAAI/N,KAAAy+B,eAAAK,GACF,OAAO9+B,KAAAy+B,eADyCK,GAIlD,IAAAC,EALgCC,EAMhC,IACED,EAAO3S,EAAAA,IAASpsB,KAAAm+B,WAAA,SADdW,GAEF,MAAA18B,GACA,IAAKpC,KAALknB,aACE,MADsB9kB,EAGxBpC,KAAAw1B,sBAA2B,CACzBoD,UAAWsD,EAAAA,qBALFrd,oBAOX/c,EAAAA,EAAAA,MAAK,2CAAAM,OAEL,OAAQpC,KAAAy+B,eAAAK,GAAiC,SAAAld,EAAA6O,KAM3C,GAAIzwB,KAAAwgB,iBAAwBD,EAAAA,sBAA5BvR,MAAyD,CACvD,IAAA+iB,EACEkN,EAFqD,GAGvD,IAAK,IAAIr2B,EAAJ,EAAWD,EAAKo2B,EAArBr9B,OAAkCkH,EAAlCD,EAA0CC,IAAK,CAC7Co2B,EAAUD,EADmCn2B,GAI3CmpB,OADFhkB,IAAIixB,EAAAA,KACKA,EAAAA,KAAAA,KADuB,KAEzB,GAGPC,GAAM,KAAOD,EAAPE,IAAA,IAAAnN,EARuC,OAW/C,OAAQ/xB,KAAAy+B,eAAAK,GAAiC,IAAAre,SAAA,IAAA,OAdcwe,GAkBzD,OAAQj/B,KAAAy+B,eAAAK,GAAiC,SAAAld,EAAA6O,GACvC,IAAK,IAAI7nB,EAAJ,EAAWD,EAAKo2B,EAArBr9B,OAAkCkH,EAAlCD,EAA0CC,IAAK,CAC7Co2B,EAAUD,EADmCn2B,GAG7C,UAAIo2B,EAAAA,MACFA,EAAAA,KAAe,CAAAvO,GAAAA,IAEjB7O,EAAEod,EAAFpd,KAAAA,MAAAA,EAAwBod,EANqBjN,yHCrarD,IAAAxP,EAAAhf,EAAA,GAhBAuf,EAAAvf,EAAA,GAAAD,EAAAC,EAAA,GAoBA,IAAIogB,EAAoB,MACtBjgB,eACEC,EAAAA,EAAAA,aADY,8DAKhB,IAAIkgB,EAAwB,MAC1BngB,eACEC,EAAAA,EAAAA,aADY,sEAKhB,GAAAmf,EAAAY,SAA+E,CAC7EC,EAAAA,kBAAAA,EAAoB,cAAApB,EAAA9e,kBAClBG,OAAAA,EAAAA,GACE,GAAII,GAAAA,GAAcC,GAAlB,EACE,MAAM,IAAAf,MADuB,uBAG/B,MACMa,EADSo7B,QAJK,UAKLC,aAAAA,EALKn7B,GAMpB,MAAO,CAAAF,OAAAA,EAELU,QAASV,EAAAA,WAFJ,SAOX8f,EAAAA,sBAAAA,EAAwB,cAAAtB,EAAA7d,sBACtBQ,WAAAA,EAAAA,GACE,OAAO,IAAAvC,SAAY,CAAAC,EAAAC,KACNs8B,QAD2B,MAEtCE,SAAAA,GAAiB,CAAArQ,EAAA3jB,MACX2jB,GAAJ3jB,EAIAzI,EAAQ,CAAEmD,SAAU,IAAAC,WAAZqF,GAAAtG,gBAAAA,IAHNlC,EAAO,IAAAK,MADW8rB,yFChC9B,MAAMtL,IACJ,iBAAA4b,SACAA,QAAAA,IADA,oBAECA,QAAAA,SAFDC,IAGED,QAAAE,SAAAC,UAA6BH,QAA7B54B,MAxBJ,YAwBiD44B,QAAAA,0GCxBjD,IAAA/c,EAAAhf,EAAA,GAAAD,EAAAC,EAAA,uBAqBA,MAAA6lB,kBACE1lB,cACE1D,KAAA0/B,SAAgB,IADJjT,IAEZzsB,KAAA2/B,WAFY,EAQZ3/B,KAAA4/B,cARY,KASZ5/B,KAAA6/B,gBATY,KAqBdC,SAAAA,EAAAA,GACE,MAAMhxB,EAAM9O,KAAA0/B,SAAA9yB,IADcmC,GAE1B,YAAOD,IAAAA,EAAAA,EAFmBixB,EAQ5BC,iBAAAA,EAAAA,IACE9+B,EAAAA,EAAAA,YADkC,yBAElC,GAAIlB,KAAA0/B,SAAAzH,IAAJlpB,GACE,OAAO/O,KAAA0/B,SAAA9yB,IADmBmC,GAI5B/O,KAAA0/B,SAAAvR,IAAApf,EANkCgxB,GAOlC,OAPkCA,EAkBpCE,SAAAA,EAAAA,GACE,MAAMnxB,EAAM9O,KAAA0/B,SAAA9yB,IADOmC,GAEnB,IAAImxB,GAFe,EAGnB,QAAAnyB,IAAIe,GACF,IAAA,MAAWqxB,EAAXpN,KAA2BhqB,OAAAA,QAA3BiG,GACE,GAAIF,EAAAA,KAAJikB,EAAwB,CACtBmN,GADsB,EAEtBpxB,EAAAA,GAFsBikB,OAKrB,CACL/yB,KAAA0/B,SAAAvR,IAAApf,EADKC,GAELkxB,GAFK,EAIPA,GACElgC,KADYogC,eAKhBC,SACE,OAAOrgC,KAAA0/B,SAAAjP,KAAA,GAAyB7hB,EAAAA,EAAAA,eAAc5O,KAAvC0/B,UADA,KAITjP,WACE,OAAOzwB,KAAA0/B,SADEjP,KAOX2P,eACE,IAAKpgC,KAAL2/B,UAAqB,CACnB3/B,KAAA2/B,WADmB,EAEnB,mBAAW3/B,KAAP4/B,eACF5/B,KAD4C4/B,iBAMlDhJ,gBACE,GAAI52B,KAAJ2/B,UAAoB,CAClB3/B,KAAA2/B,WADkB,EAElB,mBAAW3/B,KAAP6/B,iBACF7/B,KAD8C6/B,mBAUpDS,mBACE,OAAOtgC,KAAA0/B,SAAAjP,KAAA,EAAyBzwB,KAAzB0/B,SADU,mGCzHrB,IAAA5c,EAAAvf,EAAA,GAiBA,MAAMg9B,EAAsBx3B,OAAAA,OAjB5B,OAoBG,SAAAy3B,gBAEC1d,EAAAY,WACE6c,EAAAA,iBADY,GAFf,GAOH,MAAMtb,EAAyBlc,OAAAA,OA3B/Bw3B,kHCeA,IAAAj9B,EAAAC,EAAA,GAcAk9B,EAAAl9B,EAAA,IAKA,MAGMm9B,EArCN,KA0CMC,EA1CN,GAmDA,SAAAC,2BAAA/C,GAEE,IAAKA,EAALgD,oBAA8B,CAC5BhD,EAAAA,cAAoBA,EADQllB,KAE5BklB,EAAAA,iBAAuBA,EAFKjlB,QAG5BilB,EAAAA,gBAAsBA,EAHMnR,OAI5BmR,EAAAA,eAAqBA,EAJOh3B,MAK5Bg3B,EAAAA,mBAAyBA,EALGiD,UAM5BjD,EAAAA,mBAAyBA,EANGn2B,UAO5Bm2B,EAAAA,sBAA4BA,EAPAkD,aAQ5BlD,EAAAA,wBAA8BA,EARFmD,eAU5BnD,EAAAA,iBAAuBA,EAAAA,kBAAwB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAC/CA,EAAAA,gBAX4B,GAa5B,IAIE,MAAM7K,EAAOjqB,OAAAA,yBACXA,OAAAA,eADWA,GAJX,aASF80B,EAAAA,cAAoB7K,EATlB7E,IAUF0P,EAAAA,cAAoB7K,EAVlBpmB,IAYF7D,OAAAA,eAAAA,EAAAA,YAAwC,CACtColB,IAAK,SAAAhW,aAAAnU,GACHhE,KAAAihC,cAhFV,SAgF6Bj9B,IAErB4I,IAAK,SAAAs0B,eACH,OAAOlhC,KADoBmhC,mBAI/B,MAAAC,IAEFr4B,OAAAA,eAAAA,EAAAA,sBAAkD,CAChD6D,IAAK,SAAAy0B,sBACH,OAAOrhC,KAD2BshC,oBAKtCv4B,OAAAA,eAAAA,EAAAA,6BAAyD,CACvD6D,IAAK,SAAA20B,6BAKH,MAAMngB,EAAIphB,KAL+BshC,iBAMnC3f,EAAIP,EAAV,GACEJ,EAAII,EADN,GAEEQ,EAAIR,EAFN,GAGEC,EAAID,EAHN,GAIE1S,EAAI0S,EAJN,GAKEogB,EAAIpgB,EAXmC,GAanCqgB,EAAQ9f,EAAAA,EAAQX,EAbmBY,EAcnC8f,EAAQ1gB,EAAAA,EAAQW,EAdmBN,EAgBzC,MAAO,CACLA,EADKogB,EAELzgB,EAFK0gB,EAGL9f,EAHK8f,EAIL/f,EAJK8f,GAKJpgB,EAAA3S,EAAQkT,EAAT4f,GALKE,GAMJ1gB,EAAAtS,EAAQiT,EAAT6f,GANKC,MAWX5D,EAAAA,KAAW,SAAA8D,UACT,MAAMC,EAAM5hC,KADgBshC,iBAE5BthC,KAAA6hC,gBAAAx4B,KAF4Bu4B,GAG5B5hC,KAAAshC,iBAAwBM,EAAAA,MAAAA,EAHI,GAK5B5hC,KAL4B8hC,iBAQ9BjE,EAAAA,QAAc,SAAAkE,aACZ,MAAMC,EAAOhiC,KAAA6hC,gBADqBI,MAElC,GAAAD,EAAU,CACRhiC,KAAAshC,iBADQU,EAERhiC,KAFQkiC,qBAMZrE,EAAAA,UAAgB,SAAAsE,aAAAn6B,EAAAC,GACd,MAAMmZ,EAAIphB,KADgCshC,iBAE1ClgB,EAAAA,GAAOA,EAAAA,GAAAA,EAAWA,EAAAA,GAAXA,EAAsBA,EAFa,GAG1CA,EAAAA,GAAOA,EAAAA,GAAAA,EAAWA,EAAAA,GAAXA,EAAsBA,EAHa,GAK1CphB,KAAAoiC,mBAAAp6B,EAL0CC,IAQ5C41B,EAAAA,MAAY,SAAAwE,SAAAr6B,EAAAC,GACV,MAAMmZ,EAAIphB,KADwBshC,iBAElClgB,EAAAA,GAAOA,EAAAA,GAF2BpZ,EAGlCoZ,EAAAA,GAAOA,EAAAA,GAH2BpZ,EAIlCoZ,EAAAA,GAAOA,EAAAA,GAJ2BnZ,EAKlCmZ,EAAAA,GAAOA,EAAAA,GAL2BnZ,EAOlCjI,KAAAsiC,eAAAt6B,EAPkCC,IAUpC41B,EAAAA,UAAgB,SAAA0E,aAAA5gB,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GACd,MAAMpgB,EAAIphB,KAD4CshC,iBAEtDthC,KAAAshC,iBAAwB,CACtBlgB,EAAAA,GAAAA,EAAWA,EAAAA,GADWJ,EAEtBI,EAAAA,GAAAA,EAAWA,EAAAA,GAFWJ,EAGtBI,EAAAA,GAAAA,EAAWA,EAAAA,GAHWC,EAItBD,EAAAA,GAAAA,EAAWA,EAAAA,GAJWC,EAKtBD,EAAAA,GAAAA,EAAWA,EAAAA,GAAXA,EAAsBA,EALA,GAMtBA,EAAAA,GAAAA,EAAWA,EAAAA,GAAXA,EAAsBA,EANA,IASxByc,EAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAXsD2D,IAcxD3D,EAAAA,aAAmB,SAAA2E,gBAAA7gB,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GACjBxhC,KAAAshC,iBAAwB,CAAA3f,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GAExB3D,EAAAA,sBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAH4D2D,IAM9D3D,EAAAA,eAAqB,SAAA4E,oBACnBziC,KAAAshC,iBAAwB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAExBzD,EAHgD6E,2BAMlD7E,EAAAA,OAAa,SAAA8E,UAAAC,GACX,MAAMC,EAAWphC,KAAAA,IADoBmhC,GAE/BE,EAAWrhC,KAAAA,IAFoBmhC,GAI/BxhB,EAAIphB,KAJ2BshC,iBAKrCthC,KAAAshC,iBAAwB,CACtBlgB,EAAAA,GAAAA,EAAkBA,EAAAA,GADI0hB,EAEtB1hB,EAAAA,GAAAA,EAAkBA,EAAAA,GAFI0hB,EAGtB1hB,EAAAA,IAAAA,EAAmBA,EAAAA,GAHGyhB,EAItBzhB,EAAAA,IAAAA,EAAmBA,EAAAA,GAJGyhB,EAKtBzhB,EALsB,GAMtBA,EANsB,IASxBphB,KAAA+iC,gBAdqCH,KAmB3C,MAAMI,EAAkB,SAAAC,wBAEtB,SAAAD,eAAAnV,GACE7tB,KAAA6tB,cADqCA,EAErC7tB,KAAAkjC,MAAan6B,OAAAA,OAFwB,MAIvCi6B,eAAAA,UAA2B,CACzBG,UAAW,SAAAC,yBAAAtZ,EAAA9lB,EAAAC,EAAAo/B,GAMT,IADAC,EAEA,QAAAv1B,IAAI/N,KAAAkjC,MAAApZ,GAA8B,CAChCwZ,EAActjC,KAAAkjC,MADkBpZ,GAEhC9pB,KAAA6tB,cAAAhqB,MAAAy/B,EAAAt/B,EAFgCC,GAIhCq/B,EAAAA,QAAAA,aAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAJgC,OAK3B,CACLA,EAActjC,KAAA6tB,cAAAjqB,OAAAI,EADTC,GAELjE,KAAAkjC,MAAApZ,GAFKwZ,EAIPD,GACEzC,2BAA2B0C,EADT7+B,SAGpB,OAdA6+B,GAgBF7R,QACE,IAAA,MAAA3H,KAAiB9pB,KAAjBkjC,MAA6B,CAC3B,MAAMI,EAActjC,KAAAkjC,MADOpZ,GAE3B9pB,KAAA6tB,cAAA3pB,QAF2Bo/B,UAGpBtjC,KAAAkjC,MAHoBpZ,MAOjC,OApCuDkZ,eAAjC,GAoNxB,MAAMO,EAAoB,SAAAC,0BAExB,SAAAD,mBAEEvjC,KAAAyjC,cAF0B,EAG1BzjC,KAAA0jC,SAH0B,EAI1B1jC,KAAA2jC,cAJ0B,EAK1B3jC,KAAA4jC,WAL0BtgC,EAAAugC,gBAM1B7jC,KAAA8jC,gBAN0B,EAO1B9jC,KAAA+jC,WAP0BzgC,EAAA0gC,qBAQ1BhkC,KAAAikC,QAR0B,EAU1BjkC,KAAAgI,EAV0B,EAW1BhI,KAAAiI,EAX0B,EAa1BjI,KAAAkkC,MAb0B,EAc1BlkC,KAAAmkC,MAd0B,EAgB1BnkC,KAAAokC,YAhB0B,EAiB1BpkC,KAAAqkC,YAjB0B,EAkB1BrkC,KAAAskC,WAlB0B,EAmB1BtkC,KAAAukC,kBAAyBC,EAAAA,kBAnBC/zB,KAoB1BzQ,KAAAykC,SApB0B,EAsB1BzkC,KAAA0kC,UAtB0B,UAuB1B1kC,KAAA2kC,YAvB0B,UAwB1B3kC,KAAA4kC,aAxB0B,EA0B1B5kC,KAAA6kC,UA1B0B,EA2B1B7kC,KAAA8kC,YA3B0B,EA4B1B9kC,KAAA+kC,UA5B0B,EA6B1B/kC,KAAAglC,YA7B0B,KA8B1BhlC,KAAAilC,eA9B0B,KA+B1BjlC,KAAAklC,aA/B0B,KAkC5B3B,iBAAAA,UAA6B,CAC3B57B,MAAO,SAAAw9B,yBACL,OAAOp8B,OAAAA,OADgC/I,OAGzColC,gBAAiB,SAAAC,iCAAAr9B,EAAAC,GACfjI,KAAAgI,EAD+DA,EAE/DhI,KAAAiI,EAF+DA,IAKnE,OA7C2Ds7B,iBAAnC,GAmDpBzI,EAAkB,SAAAwK,wBAQtB,SAAAxK,eAAAyK,EAAApZ,EAAAC,EAAAyB,EAAAU,EAAAX,EAAAiC,GASE7vB,KAAA69B,IADA0H,EAEAvlC,KAAAg/B,QAAe,IAFfuE,EAGAvjC,KAAAwlC,WAHA,GAIAxlC,KAAAylC,YAJA,KAKAzlC,KAAA0lC,eALA,EAMA1lC,KAAA2lC,IANA,KAOA3lC,KAAA4lC,MAPA,KAQA5lC,KAAAmsB,WARAA,EASAnsB,KAAAosB,KATAA,EAUApsB,KAAA6tB,cAVAA,EAWA7tB,KAAAuuB,aAXAA,EAYAvuB,KAAA4tB,WAZAA,EAaA5tB,KAAA6lC,WAbA,GAcA7lC,KAAA8lC,gBAdA,KAiBA9lC,KAAA+lC,cAjBA,KAkBA/lC,KAAAgmC,mBAlBA,GAmBAhmC,KAAAimC,WAnBA,EAoBAjmC,KAAAkmC,WApBA,GAqBAlmC,KAAAmmC,aArBA,EAsBAnmC,KAAAomC,UAtBA,KAuBApmC,KAAAqmC,gBAvBA,EAwBArmC,KAAAsmC,mBAxBA,GAyBAtmC,KAAA6vB,sBAzBAA,EA0BA7vB,KAAAumC,eAAsB,IAAAvD,EAAmBhjC,KA1BzC6tB,eA2BA0X,GAGE3E,2BAHa2E,GAKfvlC,KAAAwmC,2BAhCA,KAmCF,SAAAC,mBAAA5I,EAAA6I,EAA0CxB,EAA1C,MACE,GAAI,oBAAAyB,WAAoCD,aAAxCC,UAAsE,CACpE9I,EAAAA,aAAAA,EAAAA,EADoE,GAAA,OAgBtE,MAAM55B,EAASyiC,EAAfziC,OACED,EAAQ0iC,EAlBmD1iC,MAmBvD4iC,EAAqB3iC,EAnBkC08B,EAoBvDkG,GAAc5iC,EAAD2iC,GApB0CjG,EAqBvDmG,EAAcF,IAAAA,EAAAA,EAAwCC,EArBC,EAuBvDE,EAAelJ,EAAAA,gBAAAA,EAvBwC8C,GAwB7D,IAxB6DqG,EAwBzDC,EAAJ,EAEA,MAAMxkC,EAAMikC,EA1BiDr7B,KA2BvD67B,EAAOH,EA3BgD17B,KA4B7D,IAAAzC,EAAAu+B,EAAAC,EA5B6DC,EA8B7DC,EAAAC,EAAAC,EA9B6DC,EA+B7D,GAAAvC,EACE,OAAQA,EAARxjC,QACE,KAAA,EACE4lC,EAAiBpC,EADnB,GAEEqC,EAAmBrC,EAFrB,GAGEsC,EAAkBtC,EAHpB,GAIEuC,EAAkBvC,EAJpB,GADF,MAOE,KAAA,EACEoC,EAAiBpC,EADnB,GAEEqC,EAAmBrC,EAFrB,GAGEsC,EAAkBtC,EAHpB,GAIEuC,EAAkBvC,EAJpB,GAWJ,GAAIwB,EAAAA,OAAiBgB,EAAAA,UAArBv2B,eAA+C,CAE7C,MAAMw2B,EAAYllC,EAF2B+I,WAGvCo8B,EAAS,IAAAvnB,YAAgB6mB,EAAhB76B,OAAA,EAAgC66B,EAAAA,YAHF,GAIvCW,EAAmBD,EAJoBlmC,OAKvComC,EAAe9jC,EAAD,GALyB,EAM7C,IAAI+jC,EANyC,WAOzCC,EAAQ9nB,EAAAA,qBAAAA,MAAAA,WAPiC,IAS7CunB,GACMA,MAAAA,EAAAA,IAAJ,IAAmCA,EAAAA,QACjCM,EAAAC,GAAiB,CAAAA,EAAAD,IAIrB,IAAKn/B,EAAL,EAAYA,EAAZk+B,EAA6Bl+B,IAAK,CAChCw+B,EACEx+B,EAAAA,EAAAA,EAF8Bg+B,EAGhCI,EAHgC,EAIhC,IAAKG,EAAL,EAAYA,EAAZC,EAAiCD,IAAK,CACpC,MAAMc,EAAUN,EADoBV,EAEpC,IAAIiB,EAFgC,EAGpC,MAAMC,EAAOF,EAAAA,EAAAA,EAAgCA,EAAAA,EAHT,EAI9BG,GAAsB,EAAPD,EACrB,IAAIE,EALgC,EAMhCC,EANgC,EAOpC,KAAOJ,EAAPE,EAAyBF,GAAzB,EAAiC,CAC/BI,EAAU7lC,EAAIwkC,KACdW,EAAOZ,KAAasB,IAAAA,EAAAA,EAFWN,EAG/BJ,EAAOZ,KAAasB,GAAAA,EAAAA,EAHWN,EAI/BJ,EAAOZ,KAAasB,GAAAA,EAAAA,EAJWN,EAK/BJ,EAAOZ,KAAasB,GAAAA,EAAAA,EALWN,EAM/BJ,EAAOZ,KAAasB,EAAAA,EAAAA,EANWN,EAO/BJ,EAAOZ,KAAasB,EAAAA,EAAAA,EAPWN,EAQ/BJ,EAAOZ,KAAasB,EAAAA,EAAAA,EARWN,EAS/BJ,EAAOZ,KAAasB,EAAAA,EAAAA,EATWN,EAWjC,KAAOE,EAAPC,EAAiBD,IAAK,CACpB,GAAA,IAAIG,EAAY,CACdC,EAAU7lC,EAAIwkC,KACdoB,EAFc,IAKhBT,EAAOZ,KAAasB,EAAAA,EAAAA,EANAN,EAOpBK,IAPoB,GAWxB,KAAOrB,EAAPa,GACED,EAAOZ,KAD0B,EAInCnJ,EAAAA,aAAAA,EAAAA,EAAkCj1B,EArCF+3B,SAuC7B,GAAI+F,EAAAA,OAAiBgB,EAAAA,UAArBr2B,WAA2C,CAEhD,MAAMk3B,KACJjB,GAAAC,GAH8CC,GAQhDL,EARgD,EAShDE,EAAmBrjC,EAAAA,EAT6B,EAUhD,IAAK4E,EAAL,EAAYA,EAAZi+B,EAA4Bj+B,IAAK,CAC/Bs+B,EAAAA,IAASzkC,EAAAA,SAAAA,EAAqBwkC,EADCI,IAE/BJ,GAF+BI,EAI/B,GAAAkB,EACE,IAAK,IAAIL,EAAT,EAAgBA,EAAhBb,EAAsCa,GAAtC,EAA8C,CAC5CZ,IACEJ,EAAKgB,EAALhB,GAAcI,EAAeJ,EAAKgB,EADhB,KAGpBX,IACEL,EAAKgB,EAALhB,GAAcK,EAAiBL,EAAKgB,EADhB,KAGtBV,IACEN,EAAKgB,EAALhB,GAAcM,EAAgBN,EAAKgB,EADhB,KAMzBrK,EAAAA,aAAAA,EAAAA,EAlB+BsJ,GAmB/BA,GAnB+BxG,EAqBjC,GAAI/3B,EAAJk+B,EAAqB,CACnBO,EAAmBrjC,EAAAA,EADA,EAEnBkjC,EAAAA,IAASzkC,EAAAA,SAAAA,EAAqBwkC,EAFXI,IAInB,GAAAkB,EACE,IAAK,IAAIL,EAAT,EAAgBA,EAAhBb,EAAsCa,GAAtC,EAA8C,CAC5CZ,IACEJ,EAAKgB,EAALhB,GAAcI,EAAeJ,EAAKgB,EADhB,KAGpBX,IACEL,EAAKgB,EAALhB,GAAcK,EAAiBL,EAAKgB,EADhB,KAGtBV,IACEN,EAAKgB,EAALhB,GAAcM,EAAgBN,EAAKgB,EADhB,KAMzBrK,EAAAA,aAAAA,EAAAA,EAlBmBsJ,QAoBhB,CAAA,GAAIT,EAAAA,OAAiBgB,EAAAA,UAArBt2B,UAyCL,MAAM,IAAAlO,MAAU,mBAAmBwjC,EAAnB8B,QAzC+B,CAE/C,MAAMD,KACJjB,GAAAC,GAH6CC,GAQ/CJ,EAR+CzG,EAS/C0G,EAAmBrjC,EAT4BojC,EAU/C,IAAKx+B,EAAL,EAAYA,EAAZk+B,EAA6Bl+B,IAAK,CAChC,GAAIA,GAAJi+B,EAAqB,CACnBO,EADmBR,EAEnBS,EAAmBrjC,EAFAojC,EAKrBJ,EANgC,EAOhC,IAAKG,EAALE,EAA2BF,KAAO,CAChCD,EAAKF,KAAavkC,EAAIwkC,KACtBC,EAAKF,KAAavkC,EAAIwkC,KACtBC,EAAKF,KAAavkC,EAAIwkC,KACtBC,EAAKF,KAJ2B,IAOlC,GAAAuB,EACE,IAAK,IAAIL,EAAT,EAAgBA,EAAhBlB,EAA6BkB,GAA7B,EAAqC,CACnCZ,IACEJ,EAAKgB,EAALhB,GAAcI,EAAeJ,EAAKgB,EADhB,KAGpBX,IACEL,EAAKgB,EAALhB,GAAcK,EAAiBL,EAAKgB,EADhB,KAGtBV,IACEN,EAAKgB,EAALhB,GAAcM,EAAgBN,EAAKgB,EADhB,KAMzBrK,EAAAA,aAAAA,EAAAA,EAAkCj1B,EA5BF+3B,MAmCtC,SAAA8H,mBAAA5K,EAAA6I,GACE,MAAMziC,EAASyiC,EAAfziC,OACED,EAAQ0iC,EAF8B1iC,MAGlC4iC,EAAqB3iC,EAHa08B,EAIlCkG,GAAc5iC,EAAD2iC,GAJqBjG,EAKlCmG,EAAcF,IAAAA,EAAAA,EAAwCC,EALpB,EAOlCE,EAAelJ,EAAAA,gBAAAA,EAPmB8C,GAQxC,IAAIsG,EARoC,EASxC,MAAMxkC,EAAMikC,EAT4Br7B,KAUlC67B,EAAOH,EAV2B17B,KAYxC,IAAK,IAAIzC,EAAT,EAAgBA,EAAhBk+B,EAAiCl+B,IAAK,CACpC,MAAMw+B,EACJx+B,EAAAA,EAAAA,EAFkCg+B,EAMpC,IAAII,EANgC,EAOpC,IAAK,IAAIG,EAAT,EAAgBA,EAAhBC,EAAqCD,IAAK,CACxC,IAAAuB,EACEL,EAFsC,EAGxC,IAAK,IAAIH,EAAT,EAAgBA,EAAhBlkC,EAA2BkkC,IAAK,CAC9B,IAAAG,EAAW,CACTK,EAAOjmC,EAAIwkC,KACXoB,EAFS,IAIXnB,EAAAA,GAAgBwB,EAAAA,EAAAA,EALc,IAM9B1B,GAN8B,EAO9BqB,IAP8B,GAUlCxK,EAAAA,aAAAA,EAAAA,EAAkCj1B,EApBE+3B,IAwBxC,SAAAgI,aAAAC,EAAAC,GACE,MAAMC,EAAa,CAAA,cAAA,YAAA,WAAA,cAAA,YAAA,UAAA,WAAA,aAAA,2BAAA,QAYnB,IAAK,IAAIlgC,EAAJ,EAAWD,EAAKmgC,EAArBpnC,OAAwCkH,EAAxCD,EAAgDC,IAAK,CACnD,MAAMmgC,EAAWD,EADkClgC,QAEnDmF,IAAI66B,EAAAA,KACFC,EAAAA,GAAoBD,EADiBG,IAIzC,QAAAh7B,IAAI66B,EAAAA,YAAqC,CACvCC,EAAAA,YAAoBD,EADmBI,eAEvCH,EAAAA,eAAyBD,EAFcK,gBAM3C,SAAAC,kBAAArL,GACEA,EAAAA,YAD8B,UAE9BA,EAAAA,UAF8B,UAG9BA,EAAAA,SAH8B,UAI9BA,EAAAA,YAJ8B,EAK9BA,EAAAA,UAL8B,EAM9BA,EAAAA,QAN8B,OAO9BA,EAAAA,SAP8B,QAQ9BA,EAAAA,WAR8B,GAS9BA,EAAAA,yBAT8B,cAU9BA,EAAAA,KAV8B,kBAW9B,QAAA9vB,IAAI8vB,EAAAA,YAA+B,CACjCA,EAAAA,YADiC,IAEjCA,EAAAA,eAFiC,GAMrC,SAAAsL,qBAAAz9B,EAAA09B,EAAAC,EAAAC,GACE,MAAM5nC,EAASgK,EADgChK,OAE/C,IAAK,IAAIkH,EAAT,EAAgBA,EAAhBlH,EAA4BkH,GAA5B,EAAoC,CAClC,MAAM2gC,EAAQ79B,EADoB9C,GAElC,GAAA,IAAI2gC,EAAa,CACf79B,EAAM9C,EAAN8C,GADe09B,EAEf19B,EAAM9C,EAAN8C,GAFe29B,EAGf39B,EAAM9C,EAAN8C,GAHe49B,OAIV,GAAIC,EAAJ,IAAiB,CACtB,MAAMC,EAAS,IADOD,EAEtB79B,EAAM9C,EAAN8C,GAAgBA,EAAM9C,EAAN8C,GAAAA,EAAuB09B,EAAxBI,GAFO,EAGtB99B,EAAM9C,EAAN8C,GAAgBA,EAAM9C,EAAN8C,GAAAA,EAAuB29B,EAAxBG,GAHO,EAItB99B,EAAM9C,EAAN8C,GAAgBA,EAAM9C,EAAN8C,GAAAA,EAAuB49B,EAAxBE,GAJO,IAS5B,SAAAC,kBAAAC,EAAAC,EAAAC,GACE,MAAMloC,EAASgoC,EAD4ChoC,OAG3D,IAAK,IAAIkH,EAAT,EAAgBA,EAAhBlH,EAA4BkH,GAA5B,EAAoC,CAClC,MAAM2gC,EAAQK,EAAcA,EAAYF,EAA1BE,IAAyCF,EADrB9gC,GAElC+gC,EAAAA,GAAgBA,EAAAA,GAAAA,EAHJ,mBACsB,GAMtC,SAAAE,uBAAAH,EAAAC,EAAAC,GACE,MAAMloC,EAASgoC,EADiDhoC,OAEhE,IAAK,IAAIkH,EAAT,EAAgBA,EAAhBlH,EAA4BkH,GAA5B,EAAoC,CAClC,MAAMX,EACJyhC,GAAAA,EAAS9gC,EAAT8gC,GAAAA,IACAA,EAAS9gC,EAAT8gC,GAHgC,GAIhCA,EAAS9gC,EAAT8gC,GACFC,EAAAA,GAAeC,EACVD,EAAAA,GAAeC,EAAY3hC,GAA5B,IADW2hC,EAEVD,EAAAA,GAAD1hC,GAP8B,IAiDtC,SAAA6hC,aAAAjM,EAAA9f,EAAAgsB,EAAAxb,GACE,MAAM8Z,EAAOtqB,EAD2Cha,OAElDimC,EAAUjsB,EAFwCtZ,QAIxDo5B,EAAAA,aACE9f,EADF8f,OAAAA,EAAAA,EAIE9f,EAJF8f,OAKE9f,EALF8f,QAME9f,EAVsD/W,SAaxD,MAAMijC,EAAWlsB,EAAAA,UAbuC,KAcxD,GAAKA,EAAD6rB,cAAsBrb,EAA1B2b,UAAA,EApDF,SAAAC,oBAAAH,EAAAD,EAAA/lC,EAAAC,EAAAmmC,EAAAH,EAAAL,GASE,MAAMS,IADNJ,EAEMb,EAAKiB,EAAcJ,EAAdI,GAFX,EAGMhB,EAAKgB,EAAcJ,EAAdI,GAHX,EAIMf,EAAKe,EAAcJ,EAAdI,GAJX,EAMA,IANAC,EAQEA,EADF,eAAIF,EAA0BP,uBAEvBJ,kBAKP,MACMc,EAAY9oC,KAAAA,IAAAA,EAAiBA,KAAAA,KAfnC,QAAAuC,IAgBA,IAAK,IAAIwmC,EAAT,EAAkBA,EAAlBvmC,EAAgCumC,GAAhCD,EAAkD,CAChD,MAAME,EAAchpC,KAAAA,IAAAA,EAAoBwC,EADQumC,GAE1Cd,EAAWM,EAAAA,aAAAA,EAAAA,EAAAA,EAF+BS,GAG1Cd,EAAYI,EAAAA,aAAAA,EAAAA,EAAAA,EAH8BU,GAKhDJ,GACElB,qBAAqBO,EAArBP,KAAAA,EAAAA,EADeG,GAGjBgB,EAAUZ,EAAVY,KAAyBX,EAAzBW,KARgDV,GAUhDI,EAAAA,aAAAA,EAAAA,EAVgDQ,IAyClDL,CAAAA,EAAAA,EAGE9B,EAHF8B,MAIE9B,EAJF8B,OAKEpsB,EALFosB,QAAAA,EAOEpsB,EAlCsD6rB,aAoCxD/L,EAAAA,UAAAA,EAAAA,EApCwD,OAcxD,CACE,MAAM6M,EAAWnc,EAAAub,aAA0B,CACzCa,MAAOZ,EADkChmC,OAAAskC,KAAAA,EAGzCS,WAAY,CACVsB,QAASrsB,EADCqsB,QAAAH,SAAAA,KAKdpM,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EATgD,GAUhDA,EAAAA,UAAAA,EAAwB9f,EAAxB8f,QAAuC9f,EAVS/W,UAyBpD,MAAM4jC,EAAkB,CAAA,OAAA,QAAA,UAClBC,EAAmB,CAAA,QAAA,QAAA,SACnBC,EA/biD,GAgcjDC,EAhciD,GAkcvDjQ,eAAAA,UAA2B,CACzBC,cAAarzB,UAAAA,EAAA+lB,SAAAA,EAAAmC,aAGXA,GAHW,EAAA9B,WAIXA,EAJFiN,OAWE,MAAM/2B,EAAQhE,KAAA69B,IAAA95B,OANbC,MAOKC,EAASjE,KAAA69B,IAAA95B,OAPdE,OASDjE,KAAA69B,IATCllB,OAUD3Y,KAAA69B,IAAAmN,UAAqBld,GAVpB,qBAWD9tB,KAAA69B,IAAAoN,SAAA,EAAA,EAAAjnC,EAXCC,GAYDjE,KAAA69B,IAZCjlB,UAcD,GAAAgX,EAAkB,CAChB,MAAMsb,EAAoBlrC,KAAAumC,eAAApD,UAAA,cAAAn/B,EAAAC,GADV,GAOhBjE,KAAAmrC,aAAoBnrC,KAPJ69B,IAQhB79B,KAAAkrC,kBAAyBA,EARTnnC,OAShB/D,KAAA69B,IAAWqN,EATKzmC,QAUhBzE,KAAA69B,IAVgBllB,OAahB3Y,KAAA69B,IAAAn2B,UAAA0jC,MACEprC,KADF69B,IAEE79B,KAAAmrC,aAfctK,qBAmBlB7gC,KAAA69B,IAjCCllB,OAkCDuwB,kBAAkBlpC,KAlCjB69B,KAmCDn2B,GACE1H,KAAA69B,IAAAn2B,UAAA0jC,MAAyBprC,KAAzB69B,IADan2B,GAGf1H,KAAA69B,IAAAn2B,UAAA0jC,MAAyBprC,KAAzB69B,IAAmCpQ,EAtClC/lB,WAwCD1H,KAAA+lC,cAAqB/lC,KAAA69B,IAAAgD,oBAxCpBj5B,QAyCD5H,KAAAqrC,qBAA4B5pC,KAAAA,MAC1BzB,KAAA+lC,cAD0BtkC,GAE1BzB,KAAA+lC,cA3CD,IA8CG/lC,KAAJ4tB,YACE5tB,KAAA4tB,WADmB0d,eAKvBpQ,oBAAqB,SAAAqQ,mCAAAjc,EAAAkc,EAAAC,EAAAhR,GAMnB,MAAM7L,EAAYU,EADlBV,UAEMD,EAAUW,EAFhBX,QAGA,IAAI/lB,EAAI4iC,GAHR,EAIA,MAAME,EAAe9c,EAJrBltB,OAOA,GAAIgqC,IAAJ9iC,EACE,OADsBA,EAIxB,MAAM+iC,EACJD,EAAAA,EA5gBiD,IAggBnD,mBAaED,EACIG,EAAUD,EAAkBziC,KAAAA,MA9gBiB,GAggBnD,EAeA,IAAI2iC,EAfJ,EAiBA,MAAM1f,EAAansB,KAjBnBmsB,WAkBMC,EAAOpsB,KAlBbosB,KAmBA,IAnBA0f,EAqBA,OAAa,CACX,QAAIrR,IAAAA,GAAyB7xB,IAAM6xB,EAAnCE,eAA2D,CACzDF,EAAAA,QAAAA,EADyDgR,GAEzD,OAFyD7iC,EAK3DkjC,EAAOnd,EANI/lB,GAQX,GAAIkjC,IAASC,EAAAA,IAAb7zB,WACElY,KAAA8rC,GAAAV,MAAAprC,KAAuB4uB,EADIhmB,SAG3B,IAAA,MAAAojC,KAAuBpd,EAAvBhmB,GAAqC,CACnC,MAAMqjC,EAAWD,EAAAA,WAAAA,MAAAA,EADkB5f,EAKnC,IAAK6f,EAAAA,IAALD,GAA6B,CAC3BC,EAAAA,IAAAA,EAD2BR,GAE3B,OAF2B7iC,GAOjCA,IAGA,GAAIA,IAAJ8iC,EACE,OADsB9iC,EAMxB,GAAI+iC,KAAmBE,EArjB0B,GAqjBC,CAChD,GAAI3iC,KAAAA,MAAJ0iC,EAA0B,CACxBH,IACA,OAFwB7iC,EAI1BijC,EALgD,KAatD7Q,WAAY,SAAAkR,4BAEV,KAAOlsC,KAAAwlC,WAAA9jC,QAAP,OAAiC1B,KAAAg/B,QAAAgG,aAC/BhlC,KADkE4Y,UAIpE5Y,KAAA69B,IAN+CjlB,UAQ/C,GAAI5Y,KAAJkrC,kBAA4B,CAC1BlrC,KAAA69B,IAAW79B,KADemrC,aAE1BnrC,KAAA69B,IAF0BllB,OAG1B3Y,KAAA69B,IAAAkD,aAAA,EAAA,EAAA,EAAA,EAAA,EAH0B,GAI1B/gC,KAAA69B,IAAAsO,UAAmBnsC,KAAnBkrC,kBAAA,EAJ0B,GAK1BlrC,KAAA69B,IAL0BjlB,UAM1B5Y,KAAAkrC,kBAN0B,KAS5BlrC,KAAAumC,eAjB+C9U,QAkB/CzxB,KAAAuuB,aAlB+CkD,QAoB3CzxB,KAAJ4tB,YACE5tB,KAAA4tB,WADmBwe,aAMvBj0B,aAAc,SAAAk0B,4BAAAroC,GACZhE,KAAAg/B,QAAA+F,UADwD/gC,EAExDhE,KAAA69B,IAAAkH,UAFwD/gC,GAI1DoU,WAAY,SAAAk0B,0BAAAC,GACVvsC,KAAA69B,IAAA2O,QAAmB5B,EADiC2B,IAGtDl0B,YAAa,SAAAo0B,2BAAAF,GACXvsC,KAAA69B,IAAA6O,SAAoB7B,EADkC0B,IAGxDj0B,cAAe,SAAAq0B,6BAAAC,GACb5sC,KAAA69B,IAAAgP,WAD0DD,GAG5Dr0B,QAAS,SAAAu0B,uBAAAC,EAAAC,GACP,MAAMnP,EAAM79B,KADiD69B,IAE7D,QAAA9vB,IAAI8vB,EAAAA,YAA+B,CACjCA,EAAAA,YADiCkP,GAEjClP,EAAAA,eAFiCmP,IAKrCx0B,mBAAAA,KAGAC,YAAAA,KAGAC,UAAW,SAAAu0B,yBAAAC,GACT,IAAK,IAAItkC,EAAJ,EAAWD,EAAKukC,EAArBxrC,OAAoCkH,EAApCD,EAA4CC,IAAK,CAC/C,MAAMukC,EAAQD,EADiCtkC,GAEzCmG,EAAMo+B,EAFmC,GAGzCn+B,EAAQm+B,EAHiC,GAK/C,OAAAp+B,GACE,IAAA,KACE/O,KAAAmY,aADFnJ,GADF,MAIE,IAAA,KACEhP,KAAAoY,WADFpJ,GAJF,MAOE,IAAA,KACEhP,KAAAqY,YADFrJ,GAPF,MAUE,IAAA,KACEhP,KAAAsY,cADFtJ,GAVF,MAaE,IAAA,IACEhP,KAAAuY,QAAavJ,EAAb,GAAuBA,EADzB,IAbF,MAgBE,IAAA,KACEhP,KAAAwY,mBADFxJ,GAhBF,MAmBE,IAAA,KACEhP,KAAAyY,YADFzJ,GAnBF,MAsBE,IAAA,OACEhP,KAAAqa,QAAarL,EAAb,GAAuBA,EADzB,IAtBF,MAyBE,IAAA,KACEhP,KAAAg/B,QAAA8F,YAA2BqI,EAD7B,GAzBF,MA4BE,IAAA,KACEntC,KAAAg/B,QAAA6F,UAAyBsI,EAD3B,GAEEntC,KAAA69B,IAAAuP,YAAuBD,EAFzB,GA5BF,MAgCE,IAAA,KACEntC,KAAA69B,IAAAwP,yBADFr+B,EAhCF,MAmCE,IAAA,QACMhP,KAAAg/B,QAAJgG,cAKIhlC,KAAAwlC,WAAA9jC,OAAA,GACA1B,KAAAwlC,WAAgBxlC,KAAAwlC,WAAA9jC,OAAhB,GAAAsjC,cACEhlC,KAAAg/B,QAHJgG,YAKEhlC,KADAstC,oBAGAttC,KADKutC,iBAITvtC,KAAAg/B,QAAAgG,YAA2Bh2B,EAAQhP,KAARgP,UAf7B,KAgBMhP,KAAAg/B,QAAJgG,aACEhlC,KAD4BwtC,kBAG9BxtC,KAAAomC,UAnBF,KAnCF,MAwDE,IAAA,KACEpmC,KAAAg/B,QAAAkG,aAzDJl2B,KA6DJw+B,gBAAiB,SAAAC,iCACf,MAAMzI,EAAchlC,KAAAg/B,QADqCgG,YAEnD0I,EAAa1I,EAAAA,OAFsChhC,MAGnD2pC,EAAc3I,EAAAA,OAHqC/gC,OAInD2pC,EAAU,eAAiB5tC,KAJwBimC,WAKnD4H,EAAgB7tC,KAAAumC,eAAApD,UAAAyK,EAAAF,EAAAC,GALmC,GAYnDG,EAAa9tC,KAZsC69B,IAanDkQ,EAAmBD,EAbgCjN,oBAczD7gC,KAAA69B,IAdyDllB,OAgBzD,MAAMq1B,EAAWH,EAhBwCppC,QAiBzDupC,EAAAA,MAAe,EAAIhJ,EAAnBgJ,OAAuC,EAAIhJ,EAjBciJ,QAkBzDD,EAAAA,WAAoBhJ,EAApBgJ,SAA0ChJ,EAlBeh+B,SAmBzDgnC,EAAAA,UAAAA,MAAAA,EAnByDD,GAqBzD/I,EAAAA,sBAAoCgJ,EArBqBE,2BAuBzDvF,aAAAA,EAvByDqF,GAwBzDhuC,KAAA69B,IAxByDmQ,EAyBzDhuC,KAAA0Y,UAAe,CACb,CAAA,KAAA,eACA,CAAA,KAAA,GACA,CAAA,KAAA,KAEF1Y,KAAA6lC,WAAAx8B,KA9ByDykC,GA+BzD9tC,KA/ByDimC,cAiC3DqH,kBAAmB,SAAAa,+BAGjB,MAAMH,EAAWhuC,KAHwC69B,IAIzD79B,KAJyDimC,aAKzDjmC,KAAA69B,IAAW79B,KAAA6lC,WAL8C5D,MAOzD6H,aACE9pC,KADF8pC,IAEE9pC,KAAAg/B,QAFF8K,YAAAA,EAIE9pC,KAXuDuuB,cAazDvuB,KAAA69B,IAbyDjlB,UAczD5Y,KAAA69B,IAdyDllB,OAezDgwB,aAAAA,EAAuB3oC,KAfkC69B,KAkBzD79B,KAAAg/B,QAAAiG,eAlByD+I,EAqBzD,MAAMI,EAAiBtmC,EAAAA,KAAAA,UACrB9H,KAAAg/B,QAAAgG,YADqBl9B,sBAErBkmC,EAvBuDnN,qBAyBzD7gC,KAAA69B,IAAAn2B,UAAA0jC,MAAyBprC,KAAzB69B,IAzByDuQ,GA4BzDJ,EA5ByDr1B,OA6BzDq1B,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EA7ByD,GA8BzDA,EAAAA,UAAAA,EAAAA,EAAyBA,EAAAA,OAAzBA,MAAgDA,EAAAA,OA9BS/pC,QA+BzD+pC,EA/ByDp1B,WAiC3Dy1B,iBAAkB,SAAAC,kCAIhB,MAAMN,EAAWhuC,KAAAg/B,QAJ0CiG,eAKrD6I,EAAa9tC,KALwC69B,IAM3D79B,KAAA69B,IAN2DmQ,EAO3DhuC,KAAA6lC,WAAAx8B,KAP2DykC,GAQ3D9tC,KAR2DimC,cAU7DsH,cAAe,SAAAY,+BACb,MAAMH,EAAWhuC,KADoC69B,IAErD79B,KAFqDimC,aAGrDjmC,KAAA69B,IAAW79B,KAAA6lC,WAH0C5D,MAKrD6H,aACE9pC,KADF8pC,IAEE9pC,KAAAg/B,QAFF8K,YAAAA,EAIE9pC,KATmDuuB,cAWrDvuB,KAAA69B,IAXqDjlB,UAYrD+vB,aAAAA,EAAuB3oC,KAZ8B69B,KAerD,MAAMuQ,EAAiBtmC,EAAAA,KAAAA,UACrB9H,KAAAg/B,QAAAgG,YADqBl9B,sBAErBkmC,EAjBmDnN,qBAmBrD7gC,KAAA69B,IAAAn2B,UAAA0jC,MAAyBprC,KAAzB69B,IAnBqDuQ,IAqBvDz1B,KAAM,SAAA41B,sBACJvuC,KAAA69B,IADmCllB,OAEnC,MAAMipB,EAAM5hC,KAFuBg/B,QAGnCh/B,KAAAwlC,WAAAn8B,KAHmCu4B,GAInC5hC,KAAAg/B,QAAe4C,EAJoBj6B,QAKnC3H,KAAAg/B,QAAAiG,eALmC,MAOrCrsB,QAAS,SAAA41B,yBAEHxuC,KAAAg/B,QAAJiG,gBACEjlC,KAD+BquC,mBAM/B,OAAAruC,KAAAg/B,QAAAgG,aACC,IAAAhlC,KAAAwlC,WAAA9jC,QACC1B,KAAAwlC,WAAgBxlC,KAAAwlC,WAAA9jC,OAAhB,GAAAsjC,cACEhlC,KAAAg/B,QAJNgG,aAMEhlC,KADAutC,gBAIF,GAAA,IAAIvtC,KAAAwlC,WAAA9jC,OAA8B,CAChC1B,KAAAg/B,QAAeh/B,KAAAwlC,WADiBvD,MAEhCjiC,KAAA69B,IAFgCjlB,UAKhC5Y,KAAAylC,YALgC,KAOhCzlC,KAAAwmC,2BAPgC,UAUhCxmC,KAAAg/B,QAAAgG,YAFK,MAKTt9B,UAAW,SAAA+mC,yBAAA9sB,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GACTxhC,KAAA69B,IAAAn2B,UAAAia,EAAAX,EAAAY,EAAAP,EAAA3S,EAD6D8yB,GAG7DxhC,KAAAwmC,2BAH6D,MAO/D7oB,cAAe,SAAA+wB,6BAAAC,EAAA5c,GACb,MAAM8L,EAAM79B,KADkD69B,IAExDmB,EAAUh/B,KAF8Cg/B,QAG9D,IAAIh3B,EAAIg3B,EAARh3B,EACEC,EAAI+2B,EAJwD/2B,EAK9D,IAAK,IAAIW,EAAJ,EAAWu+B,EAAX,EAAkBx+B,EAAKgmC,EAA5BjtC,OAAwCkH,EAAxCD,EAAgDC,IAC9C,OAAA,EAAQ+lC,EAAAA,IACN,KAAK5C,EAAAA,IAAL5yB,UACEnR,EAAI+pB,EAAKoV,KACTl/B,EAAI8pB,EAAKoV,KACT,MAAMnjC,EAAQ+tB,EAAKoV,KACbljC,EAAS8tB,EAAKoV,KAEdyH,EAAK5mC,EANbhE,EAOQ6qC,EAAK5mC,EAPbhE,EAQE45B,EAAAA,OAAAA,EARF51B,GASE,GAAIjE,IAAAA,GAAJ,IAAmBC,EACjB45B,EAAAA,OAAAA,EAD+BgR,OAE1B,CACLhR,EAAAA,OAAAA,EADK51B,GAEL41B,EAAAA,OAAAA,EAFKgR,GAGLhR,EAAAA,OAAAA,EAHKgR,GAMPhR,EAjBF3kB,YADF,MAoBE,KAAK6yB,EAAAA,IAALlzB,OACE7Q,EAAI+pB,EAAKoV,KACTl/B,EAAI8pB,EAAKoV,KACTtJ,EAAAA,OAAAA,EAHF51B,GApBF,MAyBE,KAAK8jC,EAAAA,IAALjzB,OACE9Q,EAAI+pB,EAAKoV,KACTl/B,EAAI8pB,EAAKoV,KACTtJ,EAAAA,OAAAA,EAHF51B,GAzBF,MA8BE,KAAK8jC,EAAAA,IAALhzB,QACE/Q,EAAI+pB,EAAKoV,EADX,GAEEl/B,EAAI8pB,EAAKoV,EAFX,GAGEtJ,EAAAA,cACE9L,EADF8L,GAEE9L,EAAKoV,EAFPtJ,GAGE9L,EAAKoV,EAHPtJ,GAIE9L,EAAKoV,EAJPtJ,GAAAA,EAHF51B,GAWEk/B,GAXF,EA9BF,MA2CE,KAAK4E,EAAAA,IAAL/yB,SACE6kB,EAAAA,cAAAA,EAAAA,EAGE9L,EAHF8L,GAIE9L,EAAKoV,EAJPtJ,GAKE9L,EAAKoV,EALPtJ,GAME9L,EAAKoV,EAPT,IASEn/B,EAAI+pB,EAAKoV,EATX,GAUEl/B,EAAI8pB,EAAKoV,EAVX,GAWEA,GAXF,EA3CF,MAwDE,KAAK4E,EAAAA,IAAL9yB,SACEjR,EAAI+pB,EAAKoV,EADX,GAEEl/B,EAAI8pB,EAAKoV,EAFX,GAGEtJ,EAAAA,cAAkB9L,EAAlB8L,GAA2B9L,EAAKoV,EAAhCtJ,GAAAA,EAAAA,EAAAA,EAHF51B,GAIEk/B,GAJF,EAxDF,MA8DE,KAAK4E,EAAAA,IAAL7yB,UACE2kB,EADF3kB,YAKJ8lB,EAAAA,gBAAAA,EAzE8D/2B,IA2EhEiR,UAAW,SAAA41B,2BACT9uC,KAAA69B,IAD6C3kB,aAG/CE,OAAQ,SAAA21B,sBAAAC,GACNA,OAAc,IAAAA,GAAAA,EACd,MAAMnR,EAAM79B,KAFsC69B,IAG5C8G,EAAc3kC,KAAAg/B,QAH8B2F,YAMlD9G,EAAAA,YAAkB79B,KAAAg/B,QANgC8F,YAOlD,GAAI9kC,KAAJqmC,eACE,GAAI,iBAAA1B,GAAmCA,GAAvCsK,WAAgE,CAG9DpR,EAH8DllB,OAQ9D,MAAMjR,EAAYm2B,EAR4CgD,oBASxDh6B,EAAQiB,EAAAA,KAAAA,8BAAAA,GATgD,GAU9D+1B,EAAAA,YAAkB8G,EAAAA,WAAAA,EAV4C3kC,MAW9D,MAAM+kC,EAAY/kC,KAX4CkvC,sBAYxDC,EAAkBnvC,KAAAg/B,QAAA+F,UAZsCl+B,EAa9D,GAAIk+B,EAAAA,IAAiBA,GAArBoK,EAAoD,CAClDtR,EADkDmD,iBAElDnD,EAAAA,UAAgBp8B,KAAAA,MAAWzB,KAFuBqrC,2BAIlDxN,EAAAA,UAAgBp8B,KAAAA,IAAAA,EADX0tC,GAGPtR,EAnB8DzkB,SAoB9DykB,EApB8DjlB,cAqBzD,CACL,MAAMmsB,EAAY/kC,KADbkvC,sBAEL,GAAInK,EAAAA,IAAiBA,GAAc/kC,KAAAg/B,QAAnC+F,UAA2D,CAGzDlH,EAHyDllB,OAIzDklB,EAJyDmD,iBAKzDnD,EAAAA,UAAgBp8B,KAAAA,MAAWzB,KAL8BqrC,sBAMzDxN,EANyDzkB,SAOzDykB,EAPyDjlB,cAQpD,CAELilB,EAAAA,UAAgBp8B,KAAAA,IAAAA,EAAoBzB,KAAAg/B,QAF/B+F,WAGLlH,EAHKzkB,UAOX41B,GACEhvC,KADegvC,cAIjBnR,EAAAA,YAAkB79B,KAAAg/B,QAlDgC6F,WAoDpDxrB,YAAa,SAAA+1B,6BACXpvC,KADiDkZ,YAEjDlZ,KAFiDoZ,UAInDE,KAAM,SAAA+1B,oBAAAL,GACJA,OAAc,IAAAA,GAAAA,EACd,MAAMnR,EAAM79B,KAFkC69B,IAGxC6G,EAAY1kC,KAAAg/B,QAH4B0F,UAK9C,IAAI4K,GAL0C,EAO9C,GAHsBtvC,KAAAg/B,QAJwB4F,YAO3B,CACjB/G,EADiBllB,OAEb3Y,KAAJ+lC,eACElI,EAAAA,aAAAA,MAAAA,EAA4B79B,KADN+lC,eAGxBlI,EAAAA,UAAgB6G,EAAAA,WAAAA,EALC1kC,MAMjBsvC,GANiB,EASnB,GAAItvC,KAAJqmC,eACE,GAAIrmC,KAAJ0lC,cAAwB,CACtB7H,EAAAA,KADsB,WAEtB79B,KAAA0lC,eAFsB,OAItB7H,EADKvkB,OAKTg2B,GACEzR,EADejlB,UAGjBo2B,GACEhvC,KADegvC,eAInBz1B,OAAQ,SAAAg2B,wBACNvvC,KAAA0lC,eADuC,EAEvC1lC,KAFuCsZ,QAIzCE,WAAY,SAAAg2B,4BACVxvC,KAAAsZ,MAD+C,GAE/CtZ,KAAAoZ,QAF+C,GAI/CpZ,KAJ+CgvC,eAMjDv1B,aAAc,SAAAg2B,8BACZzvC,KAAA0lC,eADmD,EAEnD1lC,KAFmDwZ,cAIrDE,gBAAiB,SAAAg2B,iCACf1vC,KADyDkZ,YAEzDlZ,KAFyDwZ,cAI3DG,kBAAmB,SAAAg2B,mCACjB3vC,KAAA0lC,eAD6D,EAE7D1lC,KAF6DkZ,YAG7DlZ,KAH6DwZ,cAK/DI,QAAS,SAAAg2B,yBACP5vC,KADyCgvC,eAK3Cn1B,KAAM,SAAAg2B,sBACJ7vC,KAAAylC,YADmCqF,GAGrChxB,OAAQ,SAAAg2B,wBACN9vC,KAAAylC,YADuCsF,GAKzChxB,UAAW,SAAAg2B,2BACT/vC,KAAAg/B,QAAA4E,WAD6CtgC,EAAAugC,gBAE7C7jC,KAAAg/B,QAAA8E,gBAF6C,EAG7C9jC,KAAAg/B,QAAAh3B,EAAiBhI,KAAAg/B,QAAAkF,MAH4B,EAI7ClkC,KAAAg/B,QAAA/2B,EAAiBjI,KAAAg/B,QAAAmF,MAJ4B,GAM/CnqB,QAAS,SAAAg2B,yBACP,MAAMC,EAAQjwC,KAD2BkwC,iBAEnCrS,EAAM79B,KAF6B69B,IAGzC,QAAA9vB,IAAIkiC,EAAJ,CAKApS,EARyCllB,OASzCklB,EATyCsS,YAUzC,IAAK,IAAIvnC,EAAT,EAAgBA,EAAIqnC,EAApBvuC,OAAkCkH,IAAK,CACrC,MAAMwnC,EAAOH,EADwBrnC,GAErCi1B,EAAAA,aAAAA,MAAAA,EAA4BuS,EAFS1oC,WAGrCm2B,EAAAA,UAAcuS,EAAdvS,EAAsBuS,EAHenoC,GAIrCmoC,EAAAA,UAAAA,EAAoBA,EAJiB1M,UAMvC7F,EAhByCjlB,UAiBzCilB,EAjByChkB,OAkBzCgkB,EAlByCsS,mBAmBlCnwC,KAnBkCkwC,sBAIvCrS,EADuBsS,aAkB3Bl2B,eAAgB,SAAAo2B,8BAAAC,GACdtwC,KAAAg/B,QAAAoF,YAD8DkM,GAGhEp2B,eAAgB,SAAAq2B,8BAAAD,GACdtwC,KAAAg/B,QAAAqF,YAD8DiM,GAGhEn2B,UAAW,SAAAq2B,yBAAA3pC,GACT7G,KAAAg/B,QAAAsF,WAA0Bz9B,EADwB,KAGpDuT,WAAY,SAAAq2B,0BAAAxM,GACVjkC,KAAAg/B,QAAAiF,SADsDA,GAGxD5pB,QAAS,SAAAq2B,uBAAAC,EAAAlgB,GACP,MAAMmgB,EAAU5wC,KAAAmsB,WAAAvf,IAD0C+jC,GAEpD3R,EAAUh/B,KAF0Cg/B,QAI1D,IAAA4R,EACE,MAAM,IAAA1tC,MAAU,uBAAAytC,KAElB3R,EAAAA,WAAqB4R,EAAAA,YAPqCttC,EAAA0gC,qBAWtDhF,IAAAA,EAAAA,WAAAA,IAAJ,IAAmCA,EAAAA,WAAAA,KACjCl9B,EAAAA,EAAAA,MAAK,gCADyD6uC,GAMhE,GAAIlgB,EAAJ,EAAc,CACZA,GADYA,EAEZuO,EAAAA,eAFY,OAIZA,EAAAA,cADK,EAIPh/B,KAAAg/B,QAAA/gB,KAxB0D2yB,EAyB1D5wC,KAAAg/B,QAAA0E,SAzB0DjT,EA2B1D,GAAImgB,EAAJC,YAAyB,OAIzB,MAAM/rC,EAAO8rC,EAAAA,YA/B6C,aAiC1D,IAAIE,EAjCsD,SAkCtDF,EAAJ5I,MACE8I,EADiB,MAERF,EAAJE,OACLA,EADuB,QAGzB,MAAMC,EAASH,EAAAA,OAAAA,SAvC2C,SAwCpDI,EAAW,IAAAlsC,OAAc8rC,EAAdK,eAMjB,IAAIC,EA9CsDzgB,EA+CtDA,EArjDV,GAsjDQygB,EAtjDR,GAujDiBzgB,EAvjDjB,MAwjDQygB,EAxjDR,KA0jDMlxC,KAAAg/B,QAAA2E,cAA6BlT,EApD6BygB,EAsD1DlxC,KAAA69B,IAAA5f,KAAgB,GAAA8yB,KAAAD,KAAAI,OAAAF,KAElB12B,qBAAsB,SAAA62B,oCAAAC,GACpBpxC,KAAAg/B,QAAAuF,kBADuE6M,GAGzE72B,YAAa,SAAA82B,2BAAAC,GACXtxC,KAAAg/B,QAAAyF,SADqD6M,GAGvD92B,SAAU,SAAA+2B,wBAAAvpC,EAAAC,GACRjI,KAAAg/B,QAAAh3B,EAAiBhI,KAAAg/B,QAAAkF,OAD8Bl8B,EAE/ChI,KAAAg/B,QAAA/2B,EAAiBjI,KAAAg/B,QAAAmF,OAF8Bl8B,GAIjDwS,mBAAoB,SAAA+2B,kCAAAxpC,EAAAC,GAClBjI,KAAAoa,YADmEnS,GAEnEjI,KAAAwa,SAAAxS,EAFmEC,IAIrEyS,cAAe,SAAA+2B,6BAAA9vB,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GACbxhC,KAAAg/B,QAAA4E,WAA0B,CAAAjiB,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GAC1BxhC,KAAAg/B,QAAA8E,gBAA+BriC,KAAAA,MAAAA,EAFsCuf,GAIrEhhB,KAAAg/B,QAAAh3B,EAAiBhI,KAAAg/B,QAAAkF,MAJoD,EAKrElkC,KAAAg/B,QAAA/2B,EAAiBjI,KAAAg/B,QAAAmF,MALoD,GAOvExpB,SAAU,SAAA+2B,0BACR1xC,KAAAwa,SAAA,EAAiBxa,KAAAg/B,QAD0BiF,UAI7C0N,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACE,MAAM9T,EAAM79B,KADoD69B,IAE1DmB,EAAUh/B,KAFgDg/B,QAG1D/gB,EAAO+gB,EAHmD/gB,KAI1DsmB,EAAoBvF,EAJsCuF,kBAK1Db,EAAW1E,EAAAA,SAAmBA,EAL4B2E,cAM1DiO,EACJrN,EAAoBC,EAAAA,kBAP0CvzB,iBAQ1D4gC,KACJtN,EAAoBC,EAAAA,kBAT0CtzB,kBAW1D0zB,EAAc5F,EAAAA,cAAwB/gB,EAXoB8d,YAahE,IAbgE+V,GAc5D7zB,EAAAA,iBAAAA,GAAJ2mB,KACEkN,EAAY7zB,EAAAA,iBAAsBje,KAAtBie,WAD6C6gB,IAI3D,GAAI7gB,EAAAA,iBAAJ2mB,EAAyC,CACvC/G,EADuCllB,OAEvCklB,EAAAA,UAAAA,EAFuC51B,GAGvC41B,EAHuCsS,YAIvC2B,EAAAA,EAJuCpO,GAKvCqO,GACElU,EAAAA,aAAAA,MAAAA,EADoBkU,GAIpBH,IAAmBpN,EAAAA,kBAAnBoN,MACAA,IAAmBpN,EAAAA,kBAFrB7zB,aAIEktB,EADAvkB,OAGF,GACEs4B,IAAmBpN,EAAAA,kBAAnBoN,QACAA,IAAmBpN,EAAAA,kBAFrB7zB,YAGE,CACA,GAAAqhC,EAAyB,CACvBnU,EADuBmD,iBAEvBnD,EAAAA,UAAgBp8B,KAAAA,MAAWzB,KAFJqrC,sBAIzBxN,EALAzkB,SAOFykB,EAxBuCjlB,cAyBlC,CAEHg5B,IAAmBpN,EAAAA,kBAAnBoN,MACAA,IAAmBpN,EAAAA,kBAFrB7zB,aAIEktB,EAAAA,SAAAA,EAAAA,EADA51B,GAGF,GACE2pC,IAAmBpN,EAAAA,kBAAnBoN,QACAA,IAAmBpN,EAAAA,kBAFrB7zB,YAIE,GAAAqhC,EAAyB,CACvBnU,EADuBllB,OAEvBklB,EAAAA,OAAAA,EAFuB51B,GAGvB41B,EAHuBmD,iBAIvBnD,EAAAA,UAAgBp8B,KAAAA,MAAWzB,KAJJqrC,sBAKvBxN,EAAAA,WAAAA,EAAAA,EALuB,GAMvBA,EANuBjlB,eAQvBilB,EAAAA,WAAAA,EAAAA,EADK51B,GAMX,GAAA4pC,EAAoB,EACJ7xC,KAAAkwC,mBAA0BlwC,KAAAkwC,iBADtB,KAElBD,KAAW,CACTvoC,UAAWm2B,EADFgD,oBAAA74B,EAAAA,EAAAC,EAAAA,EAAAy7B,SAAAA,EAAAoO,UAAAA,MAUfG,8BAGE,MAAQxtC,QAAFo5B,GAAmB79B,KAAAumC,eAAApD,UAAA,0BAAA,GAHG,IAQ5BtF,EAAAA,MAAAA,IAR4B,GAS5BA,EAAAA,SAAAA,IAAAA,EAT4B,IAU5B,MAAMxyB,EAAOwyB,EAAAA,aAAAA,EAAAA,EAAAA,GAAAA,IAVexyB,KAW5B,IAAI/K,GAXwB,EAY5B,IAAK,IAAIsI,EAAT,EAAgBA,EAAIyC,EAApB3J,OAAiCkH,GAAjC,EACE,GAAIyC,EAAAA,GAAAA,GAAeA,EAAAA,GAAnB,IAAkC,CAChC/K,GADgC,EAAA,MAKpC,OAAO4e,EAAAA,EAAAA,QAAAA,KAAAA,0BAlBqB5e,IAqB9Bsa,SAAU,SAAAs3B,wBAAAC,GACR,MAAMnT,EAAUh/B,KADiCg/B,QAE3C/gB,EAAO+gB,EAFoC/gB,KAGjD,GAAIA,EAAJ4yB,YACE,OAAO7wC,KAAAoyC,cADaD,GAItB,MAAMzO,EAAW1E,EAPgC0E,SAQjD,GAAA,IAAIA,EACF,OAGF,MAAM7F,EAAM79B,KAZqC69B,IAa3C8F,EAAgB3E,EAb2B2E,cAc3CS,EAAcpF,EAd6BoF,YAe3CC,EAAcrF,EAf6BqF,YAgB3CgO,EAAgBrT,EAhB2BqT,cAiB3C/N,EAAatF,EAAAA,WAjB8BqT,EAkB3CC,EAAeH,EAlB4BzwC,OAmB3C6wC,EAAWt0B,EAnBgCs0B,SAoB3CC,EAAaD,EAAAA,GApB8B,EAqB3CE,EAAkBx0B,EArByBw0B,gBAsB3CC,EAAoBhP,EAAW1E,EAAAA,WAtBY,GAwB3C2T,EACJ3T,EAAAA,oBAA8BwF,EAAAA,kBAA9BxF,OACC/gB,EADD+gB,kBAECA,EA3B8C4F,YA6BjD/G,EA7BiDllB,OA8BjD,IA9BiDo5B,EA+BjD,GAAI/S,EAAJ4F,YAAyB,CAGvB/G,EAHuBllB,OAIvB,MAAMi6B,EAAU5T,EAAAA,UAAAA,WAAAA,EAJOh/B,MAKvB+xC,EAAmBlU,EALIgD,oBAMvBhD,EANuBjlB,UAOvBilB,EAAAA,UAPuB+U,EASzB/U,EAAAA,UAAAA,MAAAA,EAAyBmB,EAxCwB4E,YAyCjD/F,EAAAA,UAAcmB,EAAdnB,EAAyBmB,EAAAA,EAAYA,EAzCYyF,UA2C7C4N,EAAJ,EACExU,EAAAA,MAAAA,GADqB,GAGrBA,EAAAA,MAAAA,EADK,GAIP,IAAIkH,EAAY/F,EAjDiC+F,UAkD7CiN,GAlD6C,EAmDjD,MAAMnrC,EAAQm4B,EAnDmC8E,gBAoDjD,GAAIj9B,IAAAA,GAAJ,IAAmBk+B,EAAiB,CAClC,MAAM6M,EACJ5S,EAAAA,kBAA4BwF,EAAAA,kBAFIvzB,iBAGlC,GACE2gC,IAAmBpN,EAAAA,kBAAnBoN,QACAA,IAAmBpN,EAAAA,kBAFrB7zB,YAGE,CACA3Q,KAAAwmC,2BADA,KAEAzB,EAAY/kC,KAFZkvC,sBAGA8C,EAAsBjN,EAHtB,QAMFA,GADKl+B,EAIP,GAAA,IAAI88B,EAAuB,CACzB9F,EAAAA,MAAAA,EADyB8F,GAEzBoB,GAFyBpB,EAK3B9F,EAAAA,UAxEiDkH,EA0EjD,IA1EiDn8B,EA0E7CZ,EAAJ,EAEA,IAAKY,EAAL,EAAYA,EAAZ0pC,IAAA1pC,EAAmC,CACjC,MAAMiqC,EAAQV,EADmBvpC,GAEjC,IAAIyF,EAAAA,EAAAA,OAAJwkC,GAAkB,CAChB7qC,GAAMwqC,EAAAA,EAAD9O,EADW,IAAA,SAKlB,IAAIoP,GAP6B,EAQjC,MAAMxC,GAAWuC,EAAAE,QAAA1O,EAAD,GARiBD,EAS3BtF,EAAY+T,EATeG,SAU3BC,EAASJ,EAVkBI,OAWjC,IAAAC,EAXiCC,EAAAC,EAY7BpvC,EAAQ6uC,EAZqB7uC,MAajC,GAAAuuC,EAAc,CACZ,MAAMc,EAAUR,EAAAA,SADJJ,EAENa,IACFT,EAAAQ,QAAgBA,EAAhB,GAAF,GAA+BrvC,GAHrB0uC,EAINa,EAAKF,EAAAA,GAJCX,EAMZ1uC,EAAQqvC,GAAWA,EAAXA,GANIrvC,EAOZkvC,EAAUI,EAPE3P,EAQZwP,GAAWnrC,EAADurC,GARE5P,MASP,CACLuP,EAAUlrC,EADL27B,EAELwP,EAFK,EAKP,GAAIl1B,EAAAA,WAAkBja,EAAtB,EAAiC,CAM/B,MAAMwvC,EAAc3V,EAAAA,YANWiB,GAO/B,GAAA0U,EAAiB,CACf,MAAMC,EAAiB,IAACD,EAAAA,MAAF9P,EADPC,EAEf,GAAI3/B,EAAAA,GAAyBhE,KAA7BiyC,wBAA2D,CACzD,MAAMyB,EAAkB1vC,EADiCyvC,EAEzDX,GAFyD,EAGzDjV,EAHyDllB,OAIzDklB,EAAAA,MAAAA,EAJyD,GAKzDqV,GALyDQ,OAMhD1vC,IAAJyvC,IACLP,IAAclvC,EAADyvC,GAAD,IAAD/P,EADuBC,IAQxC,GAAI3jC,KAAAqmC,iBAAwBwM,EAAAc,UAAkB11B,EAA9C8d,aACE,GAAI4W,IAAJM,EAEEpV,EAAAA,SAAAA,EAAAA,EAF6BsV,OAGxB,CACLnzC,KAAA2xC,UAAA7S,EAAAoU,EAAAC,EAAApB,EADKC,GAQL,GAAAiB,EAAY,CACV,MAAMW,EACJV,EAAWxP,EAAWuP,EAAAA,OAAZjrC,EAFF27B,EAGJkQ,EACJV,EAAWzP,EAAWuP,EAAAA,OAAZhrC,EAJF07B,EAKV3jC,KAAA2xC,UACEsB,EADFD,SAAAY,EAAAC,EAAA9B,EALUC,IAkBdoB,EADFb,EACcvuC,EAAAA,EAA4BssC,EAD5B+B,EAGAruC,EAAAA,EAA4BssC,EADnC+B,EAGPrqC,GApFiCorC,EAsFjCN,GACEjV,EADiBjlB,UAIrB25B,EACEvT,EAAAA,GADYh3B,EAGZg3B,EAAAA,GAAah3B,EADRs8B,EAGPzG,EA3KiDjlB,WA8KnDw5B,cAAe,SAAA0B,6BAAA3B,GAEb,MAAMtU,EAAM79B,KAF+C69B,IAGrDmB,EAAUh/B,KAH2Cg/B,QAIrD/gB,EAAO+gB,EAJ8C/gB,KAKrDylB,EAAW1E,EAL0C0E,SAMrD2O,EAAgBrT,EANqCqT,cAOrDG,EAAav0B,EAAAA,SAAAA,GAPwC,EAQrDmmB,EAAcpF,EARuCoF,YASrDC,EAAcrF,EATuCqF,YAUrDC,EAAatF,EAAAA,WAVwCqT,EAWrDtO,EAAa/E,EAAAA,YAXwC17B,EAAA0gC,qBAYrDsO,EAAeH,EAZsCzwC,OAe3D,IAAAkH,EAAAiqC,EAAA7uC,EAf2D+vC,EAiB3D,KAHE/U,EAAAA,oBAA8BwF,EAAAA,kBAd2B5zB,YAiB3D,IAAuB8yB,EAAvB,CAGA1jC,KAAAwmC,2BApB2D,KAsB3D3I,EAtB2DllB,OAuB3DklB,EAAAA,UAAAA,MAAAA,EAAyBmB,EAvBkC4E,YAwB3D/F,EAAAA,UAAcmB,EAAdnB,EAAyBmB,EAxBkC/2B,GA0B3D41B,EAAAA,MAAAA,EA1B2DwU,GA4B3D,IAAKzpC,EAAL,EAAYA,EAAZ0pC,IAAA1pC,EAAmC,CACjCiqC,EAAQV,EADyBvpC,GAEjC,IAAIyF,EAAAA,EAAAA,OAAJwkC,GAAkB,CAChBkB,EAAiBvB,EAAAA,EAAD9O,EADA,IAEhB1jC,KAAA69B,IAAAiD,UAAAiT,EAFgB,GAGhB/U,EAAAA,GAAa+U,EAHGzP,EAAA,SAOlB,MAAMgM,GAAWuC,EAAAE,QAAA1O,EAAD,GATiBD,EAU3B9U,EAAerR,EAAAA,qBAA0B40B,EAVdmB,gBAWjC,IAAA1kB,EAAmB,EACjBxtB,EAAAA,EAAAA,MAAK,oBAAoB+wC,EAApBmB,qCADY,SAInB,GAAIh0C,KAAJqmC,eAAyB,CACvBrmC,KAAA8lC,gBADuB+M,EAEvB7yC,KAFuB2Y,OAGvBklB,EAAAA,MAAAA,EAHuB6F,GAIvB7F,EAAAA,UAAAA,MAAAA,EAJuBkG,GAKvB/jC,KAAAk7B,oBALuB5L,GAMvBtvB,KANuB4Y,UAUzB5U,EADoBV,EAAAwE,KAAAC,eAAoB,CAAC8qC,EAAD7uC,MAAA,GAxBP+/B,GAyBzBkQ,GAAAA,EAzByB3D,EA2BjCzS,EAAAA,UAAAA,EA3BiC,GA4BjCmB,EAAAA,GAAah7B,EA5BoBsgC,EA8BnCzG,EA1D2DjlB,UA2D3D5Y,KAAA8lC,gBA3D2D,OA+D7D9qB,aAAc,SAAAk5B,4BAAAC,EAAAC,KAIdn5B,sBAAuB,SAAAo5B,qCAAAF,EAAAC,EAAAE,EAAAC,EAAAC,EAAAC,GAUrBz0C,KAAA69B,IAAAz1B,KAAAksC,EAAAC,EAAwBC,EAAxBF,EAAmCG,EAHnCF,GAIAv0C,KAJA6Z,OAKA7Z,KALA4Z,WASF86B,kBAAmB,SAAAC,iCAAAC,GACjB,IAD+DhC,EAE/D,GAAA,kBAAIgC,EAAAA,GAA2B,CAC7B,MAAMC,EAAQD,EADe,GAEvB7O,EACJ/lC,KAAA+lC,eAAsB/lC,KAAA69B,IAAAgD,oBAHKj5B,QAIvBktC,EAAwB,CAC5BC,qBAAsBlX,GACb,IAAA/C,eAAA+C,EAEL79B,KAFKmsB,WAGLnsB,KAHKosB,KAILpsB,KAJK6tB,cAKL7tB,KANyBuuB,eAU/BqkB,EAAU,IAAAnS,EAAAuU,cAAAJ,EAAAC,EAGR70C,KAHQ69B,IAAAiX,EAfmB/O,QAuB7B6M,GAAUqC,EAAAA,EAAAA,yBADLL,GAGP,OA3B+DhC,GA6BjEv3B,gBAAiB,SAAA65B,iCACfl1C,KAAAg/B,QAAA2F,YAA2B3kC,KAAA00C,kBAD8BS,YAG3D55B,cAAe,SAAA65B,+BACbp1C,KAAAg/B,QAAA0F,UAAyB1kC,KAAA00C,kBAD4BS,WAErDn1C,KAAAg/B,QAAA4F,aAFqD,GAIvDlpB,kBAAmB,SAAA25B,iCAAAv0B,EAAAC,EAAAC,GACjB,MAAM6zB,EAAQ/sC,EAAAA,KAAAA,aAAAA,EAAAA,EADsDkZ,GAEpEhhB,KAAA69B,IAAAyX,YAFoET,EAGpE70C,KAAAg/B,QAAA2F,YAHoEkQ,GAKtEl5B,gBAAiB,SAAA45B,+BAAAz0B,EAAAC,EAAAC,GACf,MAAM6zB,EAAQ/sC,EAAAA,KAAAA,aAAAA,EAAAA,EADkDkZ,GAEhEhhB,KAAA69B,IAAAmN,UAFgE6J,EAGhE70C,KAAAg/B,QAAA0F,UAHgEmQ,EAIhE70C,KAAAg/B,QAAA4F,aAJgE,GAOlE9oB,YAAa,SAAA05B,2BAAAC,GACX,IAAKz1C,KAALqmC,eAA0B,OAG1B,MAAMxI,EAAM79B,KAJ8C69B,IAM1D79B,KAN0D2Y,OAO1D,MAAMi6B,GAAUqC,EAAAA,EAAAA,yBAP0CQ,GAQ1D5X,EAAAA,UAAgB+U,EAAAA,WAAAA,EAAAA,MAR0C,GAU1D,MAAM8C,EAAM7X,EAV8CqQ,2BAW1D,GAAAwH,EAAS,CACP,MAAM3xC,EAAS85B,EADR95B,OAEDC,EAAQD,EAFPC,MAGDC,EAASF,EAHRE,OAKD0xC,EAAKryC,EAAAwE,KAAAC,eAAoB,CAAA,EAAA,GALxB2tC,GAMDE,EAAKtyC,EAAAwE,KAAAC,eAAoB,CAAA,EAAA9D,GANxByxC,GAODG,EAAKvyC,EAAAwE,KAAAC,eAAoB,CAAA/D,EAAA,GAPxB0xC,GAQDI,EAAKxyC,EAAAwE,KAAAC,eAAoB,CAAA/D,EAAAC,GARxByxC,GAUDK,EAAKt0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EAVlC,IAWDE,EAAKv0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EAXlC,IAYDG,EAAKx0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EAZlC,IAaDI,EAAKz0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EAblC,IAeP91C,KAAA69B,IAAAoN,SAAA8K,EAAAC,EAA0BC,EAA1BF,EAAmCG,EAf5BF,QAuBPh2C,KAAA69B,IAAAoN,UAAA,MAAA,KAAA,KAPK,MAUPjrC,KArC0D4Y,WAyC5DmD,iBAAkB,SAAAo6B,mCAChBxyC,EAAAA,EAAAA,aAD2D,qCAG7DqY,eAAgB,SAAAo6B,iCACdzyC,EAAAA,EAAAA,aADuD,mCAIzD+Y,sBAAuB,SAAA25B,qCAAAC,EAAAC,GAIrB,GAAKv2C,KAALqmC,eAAA,CAGArmC,KAJA2Y,OAKA3Y,KAAAgmC,mBAAA38B,KAA6BrJ,KAL7B+lC,eAOIplB,MAAAA,QAAAA,IAAJ,IAA6B21B,EAAAA,QAC3Bt2C,KAAA0H,UAAA0jC,MAAAprC,KADgDs2C,GAIlDt2C,KAAA+lC,cAAqB/lC,KAAA69B,IAXrBgD,oBAaA,GAAA0V,EAAU,CACR,MAAMvyC,EAAQuyC,EAAAA,GAAUA,EADhB,GAEFtyC,EAASsyC,EAAAA,GAAUA,EAFjB,GAGRv2C,KAAA69B,IAAAz1B,KAAcmuC,EAAd,GAAuBA,EAAvB,GAAAvyC,EAHQC,GAIRjE,KAJQ6Z,OAKR7Z,KALQ4Z,aASZ+C,oBAAqB,SAAA65B,qCACnB,GAAKx2C,KAALqmC,eAAA,CAGArmC,KAJiE4Y,UAKjE5Y,KAAA+lC,cAAqB/lC,KAAAgmC,mBAL4C/D,QAQnErlB,WAAY,SAAA65B,0BAAAC,GACV,IAAK12C,KAALqmC,eAA0B,OAI1BrmC,KALoD2Y,OAMpD,MAAMm1B,EAAa9tC,KANiC69B,IAoB/C6Y,EAALC,WACEjpC,EAAAA,EAAAA,MADmB,sCAMjBgpC,EAAJE,WACE90C,EAAAA,EAAAA,MADkB,kCAIpB,MAAMisC,EAAmBD,EA9B2BjN,oBA+BhD6V,EAAJJ,QACExI,EAAAA,UAAAA,MAAAA,EAAuC4I,EADvBJ,QAGlB,IAAKI,EAALH,KACE,MAAM,IAAArzC,MADS,6BAMjB,IAAI2zC,EAAS/uC,EAAAA,KAAAA,2BACX4uC,EADW5uC,KAEXgmC,EA1CkDjN,qBA6CpD,MAAMiW,EAAe,CAAA,EAAA,EAGnBhJ,EAAAA,OAHmB9pC,MAInB8pC,EAAAA,OAJmB7pC,QAMrB4yC,EAAS/uC,EAAAA,KAAAA,UAAAA,EAAAA,IAAwC,CAAA,EAAA,EAAA,EAAA,GAGjD,MAAMf,EAAUtF,KAAAA,MAAWo1C,EAtDyB,IAuD9C7vC,EAAUvF,KAAAA,MAAWo1C,EAvDyB,IAwDpD,IAAInJ,EAAajsC,KAAAA,IAASA,KAAAA,KAAUo1C,EAAVp1C,IAATA,EAxDmC,GAyDhDksC,EAAclsC,KAAAA,IAASA,KAAAA,KAAUo1C,EAAVp1C,IAATA,EAzDkC,GA0DhDs1C,EAAJ,EACE9I,EA3DkD,EA4DpD,GAAIP,EAAJhN,EAAiC,CAC/BqW,EAASrJ,EADsBhN,EAE/BgN,EAF+BhN,EAIjC,GAAIiN,EAAJjN,EAAkC,CAChCuN,EAASN,EADuBjN,EAEhCiN,EAFgCjN,EAKlC,IAAIkN,EAAU,UAAY5tC,KArE0BimC,WAsEhDyQ,EAAJ34B,QAEE6vB,GAAW,UAAa5tC,KAAAmmC,eAFT,GAIjB,MAAM0H,EAAgB7tC,KAAAumC,eAAApD,UAAAyK,EAAAF,EAAAC,GA1E8B,GAgF9CK,EAAWH,EAhFmCppC,QAoFpDupC,EAAAA,MAAe,EAAfA,EAA2B,EApFyBC,GAqFpDD,EAAAA,WAAAA,GArFoDhnC,GAsFpDgnC,EAAAA,UAAAA,MAAAA,EAtFoDD,GAwFpD,GAAI2I,EAAJ34B,MAEE/d,KAAAkmC,WAAA78B,KAAqB,CACnBtF,OAAQ8pC,EADW9pC,OAEnBU,QAFmBupC,EAAAjnC,QAAAA,EAAAC,QAAAA,EAAA+vC,OAAAA,EAAA9I,OAAAA,EAOnB7D,QAASsM,EAAAA,MAPUtM,QAQnBH,SAAUyM,EAAAA,MARSzM,SASnBL,YAAa8M,EAAAA,MAAAA,aATM,KAUnBM,sBAVmB,WAYhB,CAGLlJ,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAHK,GAILA,EAAAA,UAAAA,EAJK9mC,GAKL8mC,EAAAA,MAAAA,EALKG,GASPtF,aAAAA,EA/GoDqF,GAgHpDhuC,KAAA69B,IAhHoDmQ,EAiHpDhuC,KAAA0Y,UAAe,CACb,CAAA,KAAA,eACA,CAAA,KAAA,GACA,CAAA,KAAA,KAEF1Y,KAAA6lC,WAAAx8B,KAtHoDykC,GAuHpD9tC,KAvHoDimC,aA0HpDjmC,KAAAg/B,QAAAgG,YA1HoD,MA6HtDnoB,SAAU,SAAAo6B,wBAAAP,GACR,IAAK12C,KAALqmC,eAA0B,OAG1BrmC,KAJgDimC,aAKhD,MAAM+H,EAAWhuC,KAL+B69B,IAMhD79B,KAAA69B,IAAW79B,KAAA6lC,WANqC5D,WAShDl0B,IAAI/N,KAAA69B,IAAAqZ,sBACFl3C,KAAA69B,IAAAqZ,uBADgD,EAGhDl3C,KAAA69B,IAAAsZ,0BADK,EAGHT,EAAJ34B,MACE/d,KAAAomC,UAAiBpmC,KAAAkmC,WADFjE,MAGfjiC,KAAA69B,IAAAsO,UAAmB6B,EAAnBjqC,OAAA,EADK,GAGP/D,KAnBgD4Y,WAsBlDkE,iBAAkB,SAAAs6B,kCAChBp3C,KAD2D2Y,OAEvD3Y,KAAJ+lC,eACE/lC,KAAA69B,IAAAkD,aAAAqK,MAA4BprC,KAA5B69B,IAAsC79B,KADhB+lC,gBAK1BhpB,eAAgB,SAAAs6B,gCACdr3C,KADuD4Y,WAIzDoE,gBAAiB,SAAAs6B,+BAAAlvC,EAAAV,EAAA4uC,GAKft2C,KADA2Y,OAEAuwB,kBAAkBlpC,KAFlB69B,KAGA79B,KAAAg/B,QAAe,IAHfuE,EAKA,GAAI5iB,MAAAA,QAAAA,IAAJ,IAA2BvY,EAAAA,OAAmB,CAC5C,MAAMpE,EAAQoE,EAAAA,GAAUA,EADoB,GAEtCnE,EAASmE,EAAAA,GAAUA,EAFmB,GAG5CpI,KAAA69B,IAAAz1B,KAAcA,EAAd,GAAuBA,EAAvB,GAAApE,EAH4CC,GAI5CjE,KAJ4C6Z,OAK5C7Z,KAL4C4Z,UAQ9C5Z,KAAA0H,UAAA0jC,MAAAprC,KAbA0H,GAcA1H,KAAA0H,UAAA0jC,MAAAprC,KAdAs2C,IAiBFr5B,cAAe,SAAAs6B,+BACbv3C,KADqD4Y,WAIvDuE,sBAAuB,SAAAq6B,qCAAAC,GACrB,IAAKz3C,KAALqmC,eAA0B,OAG1B,MAAMxI,EAAM79B,KAJ4D69B,IAKlE75B,EAAQyzC,EAAdzzC,MACEC,EAASwzC,EAN6DxzC,OAOlEygC,EAAY1kC,KAAAg/B,QAPsD0F,UAQlEgT,EAAgB13C,KAAAg/B,QARkD4F,YAUlEiO,EAAQ7yC,KAV0D8lC,gBAYpE6R,QAAJ5pC,IAAqC8kC,EAAAA,WAEjCA,EAAAA,SADE7uC,GAjwEZ,KAiwE4CC,GAjwE5C,IAgPA,SAAA2zC,kBAAAlR,GACE,MAEM1iC,EAAQ0iC,EAAd1iC,MACEC,EAASyiC,EADXziC,OAEE4zC,EAAS7zC,EALuB,EAMlC,IAAA4E,EAAAD,EAAAw+B,EANkC2Q,EAOlC,MAAMC,EAAS,IAAA/xC,WAAe6xC,GAAU5zC,EAPN,IAS5B+zC,EACF,IAAAhyC,WAAe,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGbiyC,EAAYj0C,EAAD,GAAc,EAC7Bk0C,EAAQxR,EAdwBr7B,KAe5BA,EAAO,IAAArF,WAAeiyC,EAfMh0C,GAgBlC,IAAImH,EAhB8B,EAiBlC,IAAKxC,EAAAA,EAAOD,EAAKuvC,EAAjBx2C,OAA+BkH,EAA/BD,EAAuCC,IAAK,CAC1C,MAAM8/B,EAAOwP,EAD6BtvC,GAE1C,IAAIy/B,EAFsC,IAG1C,KAAOA,EAAP,GAAiB,CACfh9B,EAAKD,KAASs9B,EAAAA,EAAAA,EADC,IAEfL,IAFe,GAgBnB,IAAI8P,EApC8B,EAqClC/sC,EArCkC,EAsClC,GAAA,IAAIC,EAAAA,GAAiB,CACnB0sC,EAAAA,GADmB,IAAAI,EAIrB,IAAKhR,EAAL,EAAYA,EAAZnjC,EAAuBmjC,IAAK,CAC1B,GAAI97B,EAAAA,KAAcA,EAAKD,EAAvB,GAAiC,CAC/B2sC,EAAAA,GAAY1sC,EAAAA,GAAAA,EADmB,IAAA8sC,EAIjC/sC,IAEF,GAAA,IAAIC,EAAAA,GAAiB,CACnB0sC,EAAAA,GADmB,IAAAI,EAIrB,IAAKvvC,EAAL,EAAYA,EAAZ3E,EAAwB2E,IAAK,CAC3BwC,EAAMxC,EADqBqvC,EAE3BH,EAAKlvC,EAFsBivC,EAG3B,GAAIxsC,EAAKD,EAALC,KAAyBA,EAA7BD,GAAwC,CACtC2sC,EAAAA,GAAa1sC,EAAAA,GAAAA,EADyB,IAAA8sC,EAMxC,IAAIC,GAAO/sC,EAAAD,GAAA,EAAD,IAAuBC,EAAKD,EAAL6sC,GAAA,EATN,GAU3B,IAAK9Q,EAAL,EAAYA,EAAZnjC,EAAuBmjC,IAAK,CAC1BiR,GACGA,GAAD,IACC/sC,EAAKD,EAAL,GAAA,EADD,IAECC,EAAKD,EAAAA,EAAL,GAAA,EAJuB,GAK1B,GAAI4sC,EAAJI,GAAsB,CACpBL,EAAOD,EAAPC,GAAiBC,EADGI,KAAAD,EAItB/sC,IAEF,GAAIC,EAAKD,EAALC,KAAyBA,EAA7BD,GAAwC,CACtC2sC,EAAOD,EAAPC,GAAiB1sC,EAAAA,GAAAA,EADqB,IAAA8sC,EAKxC,GAAIA,EA/E4B,IAgF9B,OADkC,KAKtC/sC,EAAM6sC,GAAYh0C,EApFgB,GAqFlC6zC,EAAKlvC,EArF6BivC,EAsFlC,GAAA,IAAIxsC,EAAAA,GAAiB,CACnB0sC,EAAAA,GADmB,IAAAI,EAIrB,IAAKhR,EAAL,EAAYA,EAAZnjC,EAAuBmjC,IAAK,CAC1B,GAAI97B,EAAAA,KAAcA,EAAKD,EAAvB,GAAiC,CAC/B2sC,EAAOD,EAAPC,GAAiB1sC,EAAAA,GAAAA,EADc,IAAA8sC,EAIjC/sC,IAEF,GAAA,IAAIC,EAAAA,GAAiB,CACnB0sC,EAAOD,EAAPC,GADmB,IAAAI,EAIrB,GAAIA,EArG8B,IAsGhC,OADkC,KAKpC,MAAMtM,EAAQ,IAAAwM,WAAe,CAAA,EAAAR,GAAA,EAAA,GAAAA,EAAA,EAAA,EAAA,EAAA,IACvBS,EA3G4B,GA4GlC,IAAK1vC,EAAL,EAAYuvC,GAASvvC,GAArB3E,EAAkC2E,IAAK,CACrC,IAAIuY,EAAIvY,EAD6BivC,EAErC,MAAMr2C,EAAM2f,EAFyBnd,EAGrC,KAAOmd,EAAAA,IAAY42B,EAAnB52B,IACEA,IAEF,GAAIA,IAAJ3f,EAAe,SAGf,MAAM+2C,EAAS,CAACp3B,EAAD02B,EAAAjvC,GAET4vC,EAX+Br3B,EAYrC,IAAIza,EAAOqxC,EAZ0B52B,GAarC,EAAG,CACD,MAAMs3B,EAAO5M,EADZnlC,GAED,GACEya,GADCs3B,SAEOV,EAJT52B,IAMD,MAAMu3B,EAAKX,EANV52B,GAOD,GAAIu3B,IAAAA,GAAJ,KAAgBA,EAAW,CAEzBhyC,EAFyBgyC,EAIzBX,EAAAA,GAJyB,MAKpB,CAGLrxC,EAAOgyC,EAAO,GAADhyC,GAHR,EAKLqxC,EAAAA,IAAcrxC,GAAD,EAAeA,GALvB,EAQP6xC,EAAAA,KAAYp3B,EApBX02B,GAqBDU,EAAAA,KAAap3B,EAAD02B,EArBX,GAuBIE,EAAL52B,MAAgBg3B,QAGTK,IAvC4Br3B,GAwCrCm3B,EAAAA,KAxCqCC,KAAA3vC,EA8DvC,OAlBoB,SAAAgZ,GAClBA,EAD+BjJ,OAG/BiJ,EAAAA,MAAQ,EAARA,GAAmB,EAHY3d,GAI/B2d,EAAAA,UAAAA,GAJ+B3d,GAK/B2d,EAL+BuuB,YAM/B,IAAK,IAAIjI,EAAJ,EAAWyQ,EAAKL,EAArB52C,OAAsCwmC,EAAtCyQ,EAA8CzQ,IAAK,CACjD,MAAM0Q,EAAIN,EADuCpQ,GAEjDtmB,EAAAA,OAASg3B,EAATh3B,GAAeg3B,EAFkC,IAGjD,IAAK,IAAIC,EAAJ,EAAWC,EAAKF,EAArBl3C,OAA+Bm3C,EAA/BC,EAAuCD,GAAvC,EACEj3B,EAAAA,OAASg3B,EAATh3B,GAAeg3B,EAAEC,EAD4B,IAIjDj3B,EAb+BtI,OAc/BsI,EAd+BuuB,YAe/BvuB,EAf+BhJ,WA03DRg/B,CAAkB,CAAEvsC,KAAMosC,EAARpsC,KAAArH,MAAAA,EAAAC,OAAAA,IAC9B,MAKT,GAAI4uC,GAAJkG,SAAqB,CACnBlG,EAAAA,SADmBhV,GAAA,OAKrB,MAAMmb,EAAah5C,KAAAumC,eAAApD,UAAA,aAAAn/B,EAzBqDC,GA8BlE+lC,EAAUgP,EA9BwDv0C,QA+BxEulC,EA/BwErxB,OAiCxE8vB,mBAAAA,EAjCwEgP,GAmCxEzN,EAAAA,yBAnCwE,YAqCxEA,EAAAA,UAAoB0N,EAChBhT,EAAAA,WAAAA,EADgBgT,MArCoDhT,EAwCxEsF,EAAAA,SAAAA,EAAAA,EAAAA,EAxCwE/lC,GA0CxE+lC,EA1CwEpxB,UA4CxE5Y,KAAAsd,wBAA6B07B,EA5C2Cj1C,SA+C1E0Z,4BAAAA,EAAAA,EAGEw7B,EAHFx7B,EAIEy7B,EAJFz7B,EAAAA,EAAAA,GAQE,IAAKzd,KAALqmC,eAA0B,OAG1B,MAAMriC,EAAQ0iC,EAJd1iC,MAKMC,EAASyiC,EALfziC,OAMMygC,EAAY1kC,KAAAg/B,QANlB0F,UAOMgT,EAAgB13C,KAAAg/B,QAPtB4F,YASMoU,EAAah5C,KAAAumC,eAAApD,UAAA,aAAAn/B,EATnBC,GAcM+lC,EAAUgP,EAdhBv0C,QAeAulC,EAfArxB,OAiBA8vB,mBAAAA,EAjBA/B,GAmBAsD,EAAAA,yBAnBA,YAqBAA,EAAAA,UAAoB0N,EAChBhT,EAAAA,WAAAA,EADgBgT,MArBpBhT,EAwBAsF,EAAAA,SAAAA,EAAAA,EAAAA,EAxBA/lC,GA0BA+lC,EA1BApxB,UA4BA,MAAMilB,EAAM79B,KA5BZ69B,IA6BA,IAAK,IAAIj1B,EAAJ,EAAWD,EAAKwwC,EAArBz3C,OAAuCkH,EAAvCD,EAA+CC,GAA/C,EAAuD,CACrDi1B,EADqDllB,OAErDklB,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAKEsb,EALFtb,GAMEsb,EAAUvwC,EARyC,IAUrDi1B,EAAAA,MAAAA,GAVqD,GAWrDA,EAAAA,UAAcmb,EAAdnb,OAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAXqD,GAYrDA,EAZqDjlB,YAgBzDwE,2BAA4B,SAAAg8B,0CAAAC,GAG1B,IAAKr5C,KAALqmC,eAA0B,OAG1B,MAAMxI,EAAM79B,KAJZ69B,IAMM6G,EAAY1kC,KAAAg/B,QANlB0F,UAOMgT,EAAgB13C,KAAAg/B,QAPtB4F,YAQA,IAAK,IAAIh8B,EAAJ,EAAWD,EAAK0wC,EAArB33C,OAAoCkH,EAApCD,EAA4CC,IAAK,CAC/C,MAAM0wC,EAAQD,EADiCzwC,GAEzC5E,EAAQs1C,EAAdt1C,MACEC,EAASq1C,EAHoCr1C,OAKzC+0C,EAAah5C,KAAAumC,eAAApD,UAAA,aAAAn/B,EAL4BC,GAUzC+lC,EAAUgP,EAV+Bv0C,QAW/CulC,EAX+CrxB,OAa/C8vB,mBAAAA,EAb+C6Q,GAe/CtP,EAAAA,yBAf+C,YAiB/CA,EAAAA,UAAoB0N,EAChBhT,EAAAA,WAAAA,EADgBgT,MAjB2BhT,EAoB/CsF,EAAAA,SAAAA,EAAAA,EAAAA,EApB+C/lC,GAsB/C+lC,EAtB+CpxB,UAwB/CilB,EAxB+CllB,OAyB/CklB,EAAAA,UAAAA,MAAAA,EAAyByb,EAzBsB5xC,WA0B/Cm2B,EAAAA,MAAAA,GA1B+C,GA2B/CA,EAAAA,UAAcmb,EAAdnb,OAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EA3B+C,GA4B/CA,EA5B+CjlB,YAgCnDyE,kBAAmB,SAAAk8B,iCAAApgB,GACjB,IAAKn5B,KAALqmC,eAA0B,OAG1B,MAAMK,EAAUvN,EAAAA,WAAAA,MACZn5B,KAAAmsB,WAAAvf,IADYusB,GAEZn5B,KAAAosB,KAAAxf,IAN8DusB,GAOlEuN,EAKA1mC,KAAAsd,wBAZkEopB,IAQhE5kC,EAAAA,EAAAA,MADY,oCAQhB0b,wBAAyB,SAAAg8B,uCAAArgB,EAAA4d,EAAA9I,EAAAkL,GAMvB,IAAKn5C,KAALqmC,eAA0B,OAG1B,MAAMK,EAAUvN,EAAAA,WAAAA,MACZn5B,KAAAmsB,WAAAvf,IADYusB,GAEZn5B,KAAAosB,KAAAxf,IANJusB,GAOA,IAAAuN,EAAc,EACZ5kC,EAAAA,EAAAA,MADY,mCAAA,OAKd,MAAMkC,EAAQ0iC,EAZd1iC,MAaMC,EAASyiC,EAbfziC,OAcM4K,EAdN,GAeA,IAAK,IAAIjG,EAAJ,EAAWD,EAAKwwC,EAArBz3C,OAAuCkH,EAAvCD,EAA+CC,GAA/C,EACEiG,EAAAA,KAAS,CACPnH,UAAW,CAAAqvC,EAAA,EAAA,EAAA9I,EAAuBkL,EAAvBvwC,GAAqCuwC,EAAUvwC,EAA/C,IACXZ,EAFO,EAGPC,EAHO,EAIPwxC,EAJOz1C,EAKP01C,EALOz1C,IAQXjE,KAAAud,6BAAAmpB,EAxBA73B,IA2BFyO,wBAAyB,SAAAq8B,uCAAAjT,GAGvB,IAAK1mC,KAALqmC,eAA0B,OAG1B,MAAMriC,EAAQ0iC,EAJd1iC,MAKMC,EAASyiC,EALfziC,OAMM45B,EAAM79B,KANZ69B,IAQA79B,KARA2Y,OAUAklB,EAAAA,MAAU,EAAVA,GAAqB,EAVrB55B,GAYA,MAAM8pC,EAAmBlQ,EAZzBqQ,2BAaA,IASA0L,EAAAC,EAtBAC,EAaIC,EAAat4C,KAAAA,IACfA,KAAAA,MAAWssC,EAAXtsC,GAAgCssC,EADjBtsC,IAbjB,GAiBIu4C,EAAcv4C,KAAAA,IAChBA,KAAAA,MAAWssC,EAAXtsC,GAAgCssC,EADhBtsC,IAjBlB,GAwBA,GACG,mBAAAw4C,aAAqCvT,aAAtCuT,cACCvT,EAFHr7B,KAIEuuC,EADAlT,MAEK,CACLmT,EAAY75C,KAAAumC,eAAApD,UAAA,cAAAn/B,EADPC,GAEL61C,EAASD,EAFJp1C,QAGLgiC,mBAAAA,EAAAA,EAAoCzmC,KAAAg/B,QAH/BkG,cAIL0U,EAAaC,EAJR91C,OAOP,IAAIm2C,EAAJl2C,EACEm2C,EArCFl2C,EAsCIm2C,EAtCJ,YA0CA,KACGL,EAAAA,GAAkBG,EAAnB,GACCF,EAAAA,GAAmBG,EAFtB,GAGE,CACA,IAAIE,EAAJH,EACEI,EAFFH,EAGA,GAAIJ,EAAAA,GAAkBG,EAAtB,EAAsC,CACpCG,EAAW54C,KAAAA,KAAUy4C,EADe,GAEpCH,GAAcG,EAFsBG,EAItC,GAAIL,EAAAA,GAAmBG,EAAvB,EAAwC,CACtCG,EAAY74C,KAAAA,KAAU04C,EADgB,GAEtCH,GAAeG,EAFuBG,EAIxCT,EAAY75C,KAAAumC,eAAApD,UAAAiX,EAAAC,EAXZC,GAgBAR,EAASD,EAhBTp1C,QAiBAq1C,EAAAA,UAAAA,EAAAA,EAAAA,EAjBAQ,GAkBAR,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAlBAQ,GA6BAV,EAAaC,EA7Bb91C,OA8BAm2C,EA9BAG,EA+BAF,EA/BAG,EAgCAF,EAAcA,cAAAA,EAAAA,YAhCd,YAkCFvc,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EA/EA55B,GA2FA,GAAIjE,KAAJ4tB,WAAqB,CACnB,MAAM2sB,EAAWv6C,KAAAw6C,kBAAA,GADEv2C,GAEnBjE,KAAA4tB,WAAA6sB,YAA4B,CAAA/T,QAAAA,EAE1BgU,KAAMH,EAFoB,GAG1BI,IAAKJ,EAHqB,GAI1Bv2C,MAAOA,EAAQ+pC,EAJW,GAK1B9pC,OAAQA,EAAS8pC,EALS,KAQ9B/tC,KArGA4Y,WAwGF2E,6BAA8B,SAAAq9B,4CAAAlU,EAAA73B,GAI5B,IAAK7O,KAALqmC,eAA0B,OAG1B,MAAMxI,EAAM79B,KAJZ69B,IAKM4b,EAAI/S,EALV1iC,MAMM01C,EAAIhT,EANVziC,OAQM41C,EAAY75C,KAAAumC,eAAApD,UAAA,cAAAsW,EARlBC,GAUAjT,mBADeoT,EATfp1C,QAUAgiC,EAAoCzmC,KAAAg/B,QAVpCkG,cAYA,IAAK,IAAIt8B,EAAJ,EAAWD,EAAKkG,EAArBnN,OAAiCkH,EAAjCD,EAAyCC,IAAK,CAC5C,MAAMu3B,EAAQtxB,EAD8BjG,GAE5Ci1B,EAF4CllB,OAG5CklB,EAAAA,UAAAA,MAAAA,EAAyBsC,EAHmBz4B,WAI5Cm2B,EAAAA,MAAAA,GAJ4C,GAK5CA,EAAAA,UACEgc,EADFhc,OAEEsC,EAFFtC,EAGEsC,EAHFtC,EAIEsC,EAJFtC,EAKEsC,EALFtC,EAAAA,GAAAA,EAAAA,EAL4C,GAgB5C,GAAI79B,KAAJ4tB,WAAqB,CACnB,MAAM2sB,EAAWv6C,KAAAw6C,kBAAuBra,EAAvBn4B,EAAgCm4B,EAD9Bl4B,GAEnBjI,KAAA4tB,WAAA6sB,YAA4B,CAAA/T,QAAAA,EAE1BgU,KAAMH,EAFoB,GAG1BI,IAAKJ,EAHqB,GAI1Bv2C,MAJ0By1C,EAK1Bx1C,OAL0By1C,IAQ9B7b,EA1B4CjlB,YA8BhD8E,yBAA0B,SAAAm9B,0CACnB76C,KAALqmC,gBAGArmC,KAAA69B,IAAAoN,SAAA,EAAA,EAAA,EAJ2E,IAS7E9uB,UAAW,SAAA2+B,yBAAAC,KAGX3+B,eAAgB,SAAA4+B,8BAAAD,EAAAjS,KAGhBzsB,mBAAoB,SAAA4+B,kCAAAF,GAClB/6C,KAAAsmC,mBAAAj9B,KAA6B,CAC3B6xC,SAFgE,KAKpE5+B,wBAAyB,SAAA6+B,uCAAAJ,EAAAjS,GAIvB,OAAIiS,EACF/6C,KAAAsmC,mBAAAj9B,KAA6B,CAC3B6xC,QAASl7C,KAAA6vB,sBAAAurB,UAFKtS,KAKhB9oC,KAAAsmC,mBAAAj9B,KAA6B,CAC3B6xC,SAFG,IAKPl7C,KAAAqmC,eAAsBrmC,KAVtBq7C,oBAYF9+B,iBAAkB,SAAA++B,kCAChBt7C,KAAAsmC,mBAD2DrE,MAE3DjiC,KAAAqmC,eAAsBrmC,KAFqCq7C,oBAO7D7+B,YAAa,SAAA++B,+BAGb9+B,UAAW,SAAA++B,6BAMXxM,YAAa,SAAAyM,6BACX,MAAM5d,EAAM79B,KADqC69B,IAEjD,GAAI79B,KAAJylC,YAAsB,CAChBzlC,KAAAylC,cAAJsF,EACElN,EAAAA,KADgC,WAGhCA,EADKhkB,OAGP7Z,KAAAylC,YANoB,KAQtB5H,EAViDsS,aAYnDjB,sBACE,GAAA,OAAIlvC,KAAAwmC,2BAA0C,CAY5C,MAAMplB,EAAIphB,KAAA69B,IAZkCgD,oBActC6a,EAASj6C,KAAAA,IAAS2f,EAAAA,GAAOA,EAAPA,GAAcA,EAAAA,GAAOA,EAdD,IAetCu6B,EAAUv6B,EAAAA,IAAAA,EAAYA,EAAAA,IAfgB,EAgBtCw6B,EAAUx6B,EAAAA,IAAAA,EAAYA,EAAAA,IAhBgB,EAiBtCy6B,EAAcp6C,KAAAA,KAAUA,KAAAA,IAAAA,EAAVA,IAjBwBi6C,EAmB1CC,IAAAA,GACA37C,KAAAqrC,qBAAAwQ,EAFF,EAaE77C,KAAAwmC,4BACExmC,KAAAqrC,qBAXFwQ,EAaSH,EAAStsC,OAAb0sC,QACL97C,KAAAwmC,2BADkCqV,EAIlC77C,KAAAwmC,2BAFK,EAMT,OAAOxmC,KA3CawmC,4BA6CtBgU,kBAAmB,SAAAuB,iCAAA/zC,EAAAC,GACjB,MAAMP,EAAY1H,KAAA69B,IAD+CgD,oBAEjE,MAAO,CACLn5B,EAAAA,GAAAA,EAAmBA,EAAAA,GAAnBA,EAAsCA,EADjC,GAELA,EAAAA,GAAAA,EAAmBA,EAAAA,GAAnBA,EAAsCA,EAFjC,KAMT2zC,iBAAkB,SAAAW,kCAChB,IAAK,IAAIpzC,EAAI5I,KAAAsmC,mBAAA5kC,OAAb,EAAiDkH,GAAjD,EAAyDA,IACvD,IAAK5I,KAAAsmC,mBAAA19B,GAALsyC,QACE,OADuC,EAI3C,OAN2D,IAU/D,IAAA,MAAAe,KAAA34C,EAAAyoC,IACEjR,eAAAA,UAAyBiR,EAAAA,IAAzBjR,IAAoCA,eAAAA,UADhBmhB,GAItB,OAzvEuDnhB,eAAjC,4GCnExB,SAAAma,wBAAAiH,GACE,MAAMC,EAAYC,EAAWF,EADO,IAEpC,IAAAC,EACE,MAAM,IAAAj5C,MAAU,oBAAoBg5C,EAApB,MAElB,OAAOC,EAAAA,OAL6BD,2BA9XtC,IAAA54C,EAAAC,EAAA,GAEA,MAAM64C,EAjBN,GAmBA,SAAAC,iBAAAxe,EAAA0Y,GACE,IAAIA,GAAJ,oBAAa+F,OAA+B,OAG5C,MAAMt4C,EAAQuyC,EAAAA,GAAUA,EAJW,GAK7BtyC,EAASsyC,EAAAA,GAAUA,EALU,GAM7BgG,EAAS,IANoBD,OAOnCC,EAAAA,KAAYhG,EAAZgG,GAAqBhG,EAArBgG,GAAAA,EAPmCt4C,GAQnC45B,EAAAA,KARmC0e,GAWrCH,EAAAA,YAAyB,CACvBI,OAAQ,SAAAC,mBAAAP,GACN,MAAMx1C,EAAOw1C,EAD0B,GAEjC3F,EAAO2F,EAF0B,GAGjCQ,EAAaR,EAHoB,GAIjC1D,EAAK0D,EAJ4B,GAKjC56B,EAAK46B,EAL4B,GAMjC9S,EAAK8S,EAN4B,GAOjCS,EAAKT,EAP4B,GAQvC,MAAO,CACLjN,WAAY,SAAA2N,uBAAA/e,GACVwe,iBAAAA,EAD+C9F,GAE/C,IAF+CsG,EAG/C,UAAIn2C,EACFm2C,EAAOhf,EAAAA,qBAAyB2a,EAAzB3a,GAAgC2a,EAAhC3a,GAAuCvc,EAAvCuc,GAA8Cvc,EADjC,IAEf,WAAI5a,IACTm2C,EAAOhf,EAAAA,qBAAyB2a,EAAzB3a,GAAgC2a,EAAhC3a,GAAAA,EAA2Cvc,EAA3Cuc,GAAkDvc,EAAlDuc,GADqB8e,IAI9B,IAAK,IAAI/zC,EAAJ,EAAWD,EAAK+zC,EAArBh7C,OAAwCkH,EAAxCD,IAAAC,EAAqD,CACnD,MAAMgZ,EAAI86B,EADyC9zC,GAEnDi0C,EAAAA,aAAkBj7B,EAAlBi7B,GAAwBj7B,EAF2B,IAIrD,OAb+Ci7B,MAmBvD,MAAMC,EAAoB,SAAAC,0BACxB,SAAAC,aAAA3xC,EAAA5G,EAAA6c,EAAAC,EAAAC,EAAAy7B,EAAAC,EAAAC,GAEE,MAAM5E,EAAS9zC,EAAf8zC,OACE6E,EAAS34C,EAHgD24C,OAIrD1xC,EAAQL,EAAdA,KACEgyC,EALyD,EAK/ChyC,EAAAA,MACZ,IAN2DiyC,EAO3D,GAAI/E,EAAOj3B,EAAPi3B,GAAiBA,EAAOh3B,EAA5B,GAAqC,CACnC+7B,EADmCh8B,EAEnCA,EAFmCC,EAGnCA,EAHmC+7B,EAInCA,EAJmCL,EAKnCA,EALmCC,EAMnCA,EANmCI,EAQrC,GAAI/E,EAAOh3B,EAAPg3B,GAAiBA,EAAO/2B,EAA5B,GAAqC,CACnC87B,EADmC/7B,EAEnCA,EAFmCC,EAGnCA,EAHmC87B,EAInCA,EAJmCJ,EAKnCA,EALmCC,EAMnCA,EANmCG,EAQrC,GAAI/E,EAAOj3B,EAAPi3B,GAAiBA,EAAOh3B,EAA5B,GAAqC,CACnC+7B,EADmCh8B,EAEnCA,EAFmCC,EAGnCA,EAHmC+7B,EAInCA,EAJmCL,EAKnCA,EALmCC,EAMnCA,EANmCI,EAQrC,MAAMrH,GAAMsC,EAAAj3B,GAAa7c,EAAdsC,SAAiCtC,EA/BesyC,OAgCrDb,GAAMqC,EAAOj3B,EAAP,GAAiB7c,EAAlBuC,SAAqCvC,EAhCWwpC,OAiCrDsP,GAAMhF,EAAAh3B,GAAa9c,EAAdsC,SAAiCtC,EAjCesyC,OAkCrDyG,GAAMjF,EAAOh3B,EAAP,GAAiB9c,EAAlBuC,SAAqCvC,EAlCWwpC,OAmCrDwP,GAAMlF,EAAA/2B,GAAa/c,EAAdsC,SAAiCtC,EAnCesyC,OAoCrD2G,GAAMnF,EAAO/2B,EAAP,GAAiB/c,EAAlBuC,SAAqCvC,EApCWwpC,OAqC3D,GAAIiI,GAAJwH,EAAc,OAGd,MAAMC,EAAMP,EAAZH,GACEW,EAAMR,EAAOH,EADf,GAEEY,EAAMT,EAAOH,EA1C4C,GA2CrDa,EAAMV,EAAZF,GACEa,EAAMX,EAAOF,EADf,GAEEc,EAAMZ,EAAOF,EA7C4C,GA8CrDe,EAAMb,EAAZD,GACEe,EAAMd,EAAOD,EADf,GAEEgB,EAAMf,EAAOD,EAhD4C,GAkDrDiB,EAAO38C,KAAAA,MAAby0C,GACEmI,EAAO58C,KAAAA,MAnDkDi8C,GAoD3D,IAAAY,EAAAC,EAAAC,EApD2DC,EAqD3DC,EAAAC,EAAAC,EArD2DC,EAsD3D,IAAK,IAAI52C,EAATm2C,EAAmBn2C,GAAnBo2C,EAA8Bp2C,IAAK,CACjC,GAAIA,EAAJu1C,EAAY,CACV,IADUtV,EAGRA,EADEjgC,EAAJiuC,EAAY,EAEDA,IAAJsH,EAAe,GAGftH,EAADjuC,IAAYiuC,EADXsH,GAGPc,EAAKrI,GAAMA,EAADsH,GATArV,EAUVqW,EAAMZ,GAAOA,EAADG,GAVF5V,EAWVsW,EAAMZ,GAAOA,EAADG,GAXF7V,EAYVuW,EAAMZ,GAAOA,EAADG,GAZF9V,MAaL,CACL,IADKA,EAGHA,EADEjgC,EAAJy1C,EAAY,EAEDF,IAAJE,EAAe,GAGfF,EAADv1C,IAAYu1C,EADXE,GAGPY,EAAKf,GAAMA,EAADE,GATLvV,EAULqW,EAAMT,GAAOA,EAADG,GAVP/V,EAWLsW,EAAMT,GAAOA,EAADG,GAXPhW,EAYLuW,EAAMT,GAAOA,EAADG,GAZPjW,EAeP,IA7BiCA,EA+B/BA,EADEjgC,EAAJiuC,EAAY,EAEDjuC,EAAJy1C,EAAY,GAGZxH,EAADjuC,IAAYiuC,EADXwH,GAGPgB,EAAKzI,GAAMA,EAADwH,GArCuBvV,EAsCjCyW,EAAMhB,GAAOA,EAADM,GAtCqB/V,EAuCjC0W,EAAMhB,GAAOA,EAADM,GAvCqBhW,EAwCjC2W,EAAMhB,GAAOA,EAADM,GAxCqBjW,EAyCjC,MAAM4W,EAAMr9C,KAAAA,MAAWA,KAAAA,IAAAA,EAzCUi9C,IA0C3BK,EAAMt9C,KAAAA,MAAWA,KAAAA,IAAAA,EA1CUi9C,IA2CjC,IAAIvX,EAAIkW,EAAAA,EA3CyB,EA2CXyB,EACtB,IAAK,IAAI92C,EAAT82C,EAAkB92C,GAAlB+2C,EAA4B/2C,IAAK,CAC/BkgC,GAAKoW,EAADt2C,IAAYs2C,EADeI,GAE3BxW,EAAJ,EACEA,EADS,EAEAA,EAAJ,IACLA,EADgB,GAGlBx8B,EAAMy7B,KAAQoX,GAAOA,EAADI,GAAPzW,EAPkB,EAQ/Bx8B,EAAMy7B,KAAQqX,GAAOA,EAADI,GAAP1W,EARkB,EAS/Bx8B,EAAMy7B,KAAQsX,GAAOA,EAADI,GAAP3W,EATkB,EAU/Bx8B,EAAMy7B,KAVyB,MAerC,SAAA6X,WAAA3zC,EAAA4zC,EAAAx6C,GACE,MAAMy6C,EAAKD,EAD8B1G,OAEnC4G,EAAKF,EAF8B7B,OAGzC,IAAAx0C,EAHyCD,EAIzC,OAAQs2C,EAARv4C,MACE,IAAA,UACE,MAAM04C,EAAiBH,EADzBG,eAEQC,EAAO59C,KAAAA,MAAWy9C,EAAAA,OAAXz9C,GAFf,EAGQ69C,EAAOF,EAHf,EAIE,IAAKx2C,EAAL,EAAYA,EAAZy2C,EAAsBz2C,IAAK,CACzB,IAAI22C,EAAI32C,EADiBw2C,EAEzB,IAAK,IAAIjY,EAAT,EAAgBA,EAAhBmY,EAA0BnY,IAAKoY,IAAK,CAClCvC,aAAAA,EAAAA,EAGEkC,EAHFlC,GAIEkC,EAAGK,EAJLvC,GAKEkC,EAAGK,EALLvC,GAMEmC,EANFnC,GAOEmC,EAAGI,EAPLvC,GAQEmC,EAAGI,EAT6BH,IAWlCpC,aAAAA,EAAAA,EAGEkC,EAAGK,EAAAA,EAHLvC,GAIEkC,EAAGK,EAJLvC,GAKEkC,EAAGK,EALLvC,GAMEmC,EAAGI,EAAAA,EANLvC,GAOEmC,EAAGI,EAPLvC,GAQEmC,EAAGI,EAnB6BH,KAP1C,MA+BE,IAAA,YACE,IAAKx2C,EAAAA,EAAOD,EAAKu2C,EAAjBx9C,OAA4BkH,EAA5BD,EAAoCC,GAApC,EACEo0C,aAAAA,EAAAA,EAGEkC,EAHFlC,GAIEkC,EAAGt2C,EAJLo0C,GAKEkC,EAAGt2C,EALLo0C,GAMEmC,EANFnC,GAOEmC,EAAGv2C,EAPLo0C,GAQEmC,EAAGv2C,EATqC,IAhChD,MA6CE,QACE,MAAM,IAAA1F,MA9CV,mBAsJF,OAnGA,SAAA45C,iBAAAjG,EAAA2I,EAAAjH,EAAA6E,EAAAqC,EAAAC,EAAAnZ,EAAAhY,GAYE,MAOMxnB,EAAUtF,KAAAA,MAAWo1C,EAV3B,IAWM7vC,EAAUvF,KAAAA,MAAWo1C,EAX3B,IAYM8I,EAAcl+C,KAAAA,KAAUo1C,EAAVp1C,IAZpBsF,EAaM64C,EAAen+C,KAAAA,KAAUo1C,EAAVp1C,IAbrBuF,EAeMhD,EAAQvC,KAAAA,IACZA,KAAAA,KAAUA,KAAAA,IAASk+C,EAAcH,EAAdG,GAhBrB,MAAA,KAmBM17C,EAASxC,KAAAA,IACbA,KAAAA,KAAUA,KAAAA,IAASm+C,EAAeJ,EAAfI,GApBrB,MAAA,KAuBM7I,EAAS4I,EAvBf37C,EAwBMiqC,EAAS2R,EAxBf37C,EA0BMQ,EAAU,CAAA8zC,OAAAA,EAAA6E,OAAAA,EAGdr2C,SAHcA,EAIdC,SAJcA,EAKd+vC,OAAQ,EALMA,EAMd9I,OAAQ,EANMA,GASV4R,EAAc77C,EAAQ87C,EACtBC,EAAe97C,EAAS67C,EAE9B,IAAA/7C,EAAA81C,EAAAjxC,EAtCAD,EAuCA,GAAI4lB,EAAJ2b,UAA4B,CAC1BnmC,EAASwqB,EAAAyxB,YAAyB,CAAAh8C,MAAAA,EAAAC,OAAAA,EAAAy7C,gBAAAA,EAAAD,QAAAA,EAAAh7C,QAAAA,IAQlCo1C,EAAYtT,EAAAA,UAAAA,OAAAA,EAAAA,GATc,GAe1BsT,EAAAA,QAAAA,UAAAA,EAtDF,EAAA,GAuDE91C,EAAS81C,EAhBiB91C,WAiBrB,CACL81C,EAAYtT,EAAAA,UAAAA,OAAAA,EAAAA,GADP,GAOL,MAAMuT,EAASD,EAPVp1C,QASC4G,EAAOyuC,EAAAA,gBAAAA,EATR71C,GAUL,GAAAy7C,EAAqB,CACnB,MAAMh0C,EAAQL,EADKA,KAEnB,IAAKzC,EAAAA,EAAOD,EAAK+C,EAAjBhK,OAA+BkH,EAA/BD,EAAuCC,GAAvC,EAA+C,CAC7C8C,EAAAA,GAAWg0C,EADkC,GAE7Ch0C,EAAM9C,EAAN8C,GAAeg0C,EAF8B,GAG7Ch0C,EAAM9C,EAAN8C,GAAeg0C,EAH8B,GAI7Ch0C,EAAM9C,EAAN8C,GAJ6C,KAOjD,IAAK9C,EAAL,EAAYA,EAAI62C,EAAhB/9C,OAAgCkH,IAC9Bo2C,WAAAA,EAAiBS,EAAjBT,GADmCv6C,GAGrCq1C,EAAAA,aAAAA,EA9EF,EAAA,GA+EE/1C,EAAS81C,EAvBJ91C,OA0BP,MAAO,CAAAA,OAAAA,EAELgD,QAASA,EApFX,EAkFOgwC,EAGL/vC,QAASA,EArFX,EAkFOinC,EAAA8I,OAAAA,EAAA9I,OAAAA,IApQe,GA+Q1BmO,EAAAA,KAAkB,CAChBI,OAAQ,SAAAyD,YAAA/D,GAEN,MAAM3D,EAAS2D,EAFiB,GAG1BkB,EAASlB,EAHiB,GAI1BuD,EAAUvD,EAJgB,GAK1BrF,EAASqF,EALiB,GAM1B5F,EAAS4F,EANiB,GAO1B3F,EAAO2F,EAPmB,GAQ1BpuB,EAAaouB,EARa,GAShC,MAAO,CACLjN,WAAY,SAAAiR,gBAAAriB,EAAAsiB,EAAArkC,GACVugC,iBAAAA,EAD4D9F,GAE5D,IAF4D1vC,EAG5D,GAAAiV,EACEjV,EAAQiB,EAAAA,KAAAA,8BAAmC+1B,EAD5BgD,yBAEV,CAELh6B,EAAQiB,EAAAA,KAAAA,8BAAmCq4C,EAFtCpa,eAGL,GAAAuQ,EAAY,CACV,MAAM8J,EAAct4C,EAAAA,KAAAA,8BADVwuC,GAEVzvC,EAAQ,CAACA,EAAAA,GAAWu5C,EAAZ,GAA4Bv5C,EAAAA,GAAWu5C,EAAvC,KAMZ,MAAMC,EAAyBvD,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAM7BhhC,EAAAA,KAN6BghC,EAO7BqD,EAP6BrD,eAQ7BqD,EAxB0D5xB,cA2B5D,IAAAzS,EAAkB,CAChB+hB,EAAAA,aAAAA,MAAAA,EAA4BsiB,EADZpa,eAEhBuQ,GACEzY,EAAAA,UAAAA,MAAAA,EADUyY,GAKdzY,EAAAA,UACEwiB,EADFxiB,QAEEwiB,EApC0Dr5C,SAsC5D62B,EAAAA,MAAUwiB,EAAVxiB,OAAyCwiB,EAtCmBpS,QAwC5D,OAAOpQ,EAAAA,cAAkBwiB,EAAlBxiB,OAxCqD,iBA8CpEue,EAAAA,MAAmB,CACjBI,OAAQ,SAAA8D,eACN,MAAO,CACLrR,WAAY,SAAAsR,0BACV,MAD6C,cAkBrD,MAAMvL,EAAiB,SAAAwL,uBACrB,MAAMC,EAAY,EAAZA,EAAY,EAQlB,SAAAzL,cAAAJ,EAAAC,EAAAhX,EAAAiX,EAAA/O,GACE/lC,KAAAsvB,aAAoBslB,EADuD,GAE3E50C,KAAAs2C,OAAc1B,EAAAA,IAAS,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACvB50C,KAAAu2C,KAAY3B,EAH+D,GAI3E50C,KAAA0gD,MAAa9L,EAJ8D,GAK3E50C,KAAA2gD,MAAa/L,EAL8D,GAM3E50C,KAAA4gD,UAAiBhM,EAN0D,GAO3E50C,KAAA6gD,WAAkBjM,EAPyD,GAQ3E50C,KAAA60C,MAR2EA,EAS3E70C,KAAA80C,sBAT2EA,EAU3E90C,KAAA+lC,cAV2EA,EAW3E/lC,KAAA69B,IAX2EA,EAc7EmX,cAAAA,UAA0B,CACxB8L,oBAAqB,SAAAC,iCAAAZ,GACnB,MAAM7wB,EAAetvB,KAD+CsvB,aAE9DinB,EAAOv2C,KAFuDu2C,KAG9DmK,EAAQ1gD,KAHsD0gD,MAI9DC,EAAQ3gD,KAJsD2gD,MAK9DC,EAAY5gD,KALkD4gD,UAM9DC,EAAa7gD,KANiD6gD,WAO9DhM,EAAQ70C,KAPsD60C,MAQ9DC,EAAwB90C,KARsC80C,uBAUpEpnC,EAAAA,EAAAA,MAAK,eAV+DmzC,GAgCpE,MAAM9K,EAAKQ,EAAX,GACEP,EAAKO,EADP,GAEEN,EAAKM,EAFP,GAGEL,EAAKK,EAnC6D,GAsC9D6J,EAAct4C,EAAAA,KAAAA,8BAAmC9H,KAtCas2C,QAuC9D0K,EAAiBl5C,EAAAA,KAAAA,8BACrB9H,KAxCkE+lC,eA0C9Dkb,EAAgB,CACpBb,EAAAA,GAAiBY,EADG,GAEpBZ,EAAAA,GAAiBY,EAFG,IAQhBE,EAAOlhD,KAAAmhD,gBAAAT,EAEX1gD,KAAA69B,IAAA95B,OAFWC,MAGXi9C,EArDkE,IAuD9DG,EAAOphD,KAAAmhD,gBAAAR,EAEX3gD,KAAA69B,IAAA95B,OAFWE,OAGXg9C,EA1DkE,IA6D9DpH,EAAYsG,EAAAA,eAAAA,UAAAA,UAEhBe,EAFgBf,KAGhBiB,EAHgBjB,MA7DkD,GAmE9DrG,EAASD,EAnEqDp1C,QAoE9D48C,EAAWvM,EAAAA,qBApEmDgF,GAqEpEuH,EAAAA,WAAsBlB,EArE8Cla,WAuEpEjmC,KAAAshD,+BAAAD,EAAAT,EAvEoE/L,GAyEpEwM,EAAAA,UAAmBH,EAAnBG,MAAAA,EAAAA,EAAqCD,EAArCC,MAAAA,EAzEoE,GA4EpEA,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GA5EoErL,GA8EpEh2C,KAAAuhD,SAAAF,EAAA9K,EAAAR,EAAAC,EAAAC,EA9EoEC,GAgFpEmL,EAAAA,oBAhFoE/xB,GAkFpEtvB,KAAA69B,IAAAn2B,UAAA,EAAA,EAAA,EAAA,EAAAquC,EAlFoEC,GAsFpEh2C,KAAA69B,IAAAh3B,MAAe,EAAIq6C,EAAnBr6C,MAA+B,EAAIu6C,EAtFiCv6C,OAuFpE,OAAOgzC,EAvF6D91C,QA0FtEo9C,gBAAiB,SAAAK,8BAAA/I,EAAAgJ,EAAA56C,GAMf4xC,EAAOh3C,KAAAA,IAFPg3C,GAOA,MAAMiJ,EAAUjgD,KAAAA,IA7HiC,IAsHjDggD,GAQA,IAAIhxB,EAAOhvB,KAAAA,KAAUg3C,EARrB5xC,GASI4pB,GAAJixB,EACEjxB,EADmBixB,EAGnB76C,EAAQ4pB,EADHgoB,EAGP,MAAO,CAAA5xC,MAAAA,EAAA4pB,KAAAA,IAGT8wB,SAAU,SAAAA,SAAAF,EAAA9K,EAAAR,EAAAC,EAAAC,EAAAC,GACR,GAAIv1B,MAAAA,QAAAA,IAAJ,IAA2B41B,EAAAA,OAAmB,CAC5C,MAAMoL,EAAY1L,EAD0BF,EAEtC6L,EAAa1L,EAFyBF,EAG5CqL,EAAAA,IAAAA,KAAAA,EAAAA,EAAAA,EAH4CO,GAI5CP,EAJ4CxnC,OAK5CwnC,EAL4CznC,YAShD0nC,+BAAgC,SAAAA,+BAAAD,EAAAT,EAAA/L,GAK9B,MAAMpwC,EAAU48C,EAAhBxjB,IACEmB,EAAUqiB,EAFZriB,QAGA,OAAA4hB,GACE,KAAKH,EACH,MAAM5iB,EAAM79B,KADd69B,IAEEp5B,EAAAA,UAAoBo5B,EAFtBmN,UAGEvmC,EAAAA,YAAsBo5B,EAHxByX,YAIEtW,EAAAA,UAAoBnB,EAJtBmN,UAKEhM,EAAAA,YAAsBnB,EALxByX,YADF,MAQE,KAAKmL,EACH,MAAMoB,EAAW/5C,EAAAA,KAAAA,aAAkB+sC,EAAlB/sC,GAA4B+sC,EAA5B/sC,GAAsC+sC,EADzD,IAEEpwC,EAAAA,UAFFo9C,EAGEp9C,EAAAA,YAHFo9C,EAKE7iB,EAAAA,UALF6iB,EAME7iB,EAAAA,YANF6iB,EARF,MAgBE,QACE,MAAM,IAAAv+C,EAAAyc,YAAgB,2BAAA6gC,OAI5B3R,WAAY,SAAA6S,yBAAAjkB,EAAAsiB,IACVtiB,EAAM79B,KADkD69B,KAGxDA,aAAAA,MAAAA,EAA4B79B,KAH4B+lC,eAIxDlI,EAAAA,UAAAA,MAAAA,EAAyB79B,KAJ+Bs2C,QAMxD,MAAM+J,EAAyBrgD,KAAA8gD,oBANyBX,GAQxD,OAAOtiB,EAAAA,cAAAA,EARiD,YAY5D,OAzLqDmX,cAAhC,4GC7XvB,MAAMzvB,EAAsBxc,OAAAA,OA3B5B,8BA6BAwc,EAAAA,gBACEA,IAAAA,EAAAA,WAAAA,KAEIA,EAhCNC,WAkCAD,EAAAA,eACEA,IAAAA,EAAAA,UAAAA,GAEIA,EArCNwO,8FCgBA,IAAAzwB,EAAAC,EAAA,GASA,MAAMw+C,EAAe,EAAfA,EAAe,EAMfC,EAAa,EAAbA,EAAa,EAAbA,EAAa,EAAbA,EAAa,EAAbA,EAAa,EAAbA,EAAa,EAAbA,EAAa,EAAbA,EAAa,EAYnB,SAAAC,WAAA78C,GAWI,GAAI,iBAAAA,GAAJ,OAAkCA,EAChC,OADiDA,EAIrD,OAAQA,EAARN,MACE,IAAA,iBACE,OAAO,IAAAxB,EAAA0c,eAAmB5a,EAF9Boa,SAGE,IAAA,sBACE,OAAO,IAAAlc,EAAAsc,oBAAwBxa,EAJnCoa,SAKE,IAAA,8BACE,OAAO,IAAAlc,EAAAuc,4BAAgCza,EAAhCoa,QAAgDpa,EAN3D0a,QAOE,IAAA,wBACE,OAAO,IAAAxc,EAAAoc,sBAA0Bta,EAA1Boa,QAA0Cpa,EARrDjE,SASE,QACE,OAAO,IAAAmC,EAAAoc,sBAA0Bta,EAA1Boa,QAA0Cpa,EAVrDmE,8BAcF,MAAAmd,eACEhjB,YAAAA,EAAAA,EAAAA,GACE1D,KAAAkiD,WAD0CA,EAE1CliD,KAAAmiD,WAF0CA,EAG1CniD,KAAAoiD,OAH0CA,EAI1CpiD,KAAAqiD,WAJ0C,EAK1CriD,KAAAsiD,SAL0C,EAM1CtiD,KAAA2mB,sBAN0C,EAO1C3mB,KAAAuiD,YAAmBx5C,OAAAA,OAPuB,MAQ1C/I,KAAAwiD,kBAAyBz5C,OAAAA,OARiB,MAS1C/I,KAAAyiD,qBAA4B15C,OAAAA,OATc,MAU1C/I,KAAA0iD,cAAqB35C,OAAAA,OAVqB,MAY1C/I,KAAA2iD,mBAA0BhwB,IACxB,MAAMtnB,EAAOsnB,EADoBtnB,KAEjC,GAAIA,EAAAA,aAAoBrL,KAAxBkiD,WAAyC,OAGzC,GAAI72C,EAAJu3C,OAAiB,CACf5iD,KAAA6iD,sBADex3C,GAAA,OAIjB,GAAIA,EAAJgkB,SAAmB,CACjB,MAAMgzB,EAAah3C,EADFg3C,WAEX31C,EAAa1M,KAAAyiD,qBAFFJ,GAGjB,IAAA31C,EACE,MAAM,IAAAxJ,MAAU,2BAAAm/C,YAEXriD,KAAAyiD,qBANUJ,GAQjB,GAAIh3C,EAAAA,WAAkB02C,EACpBr1C,EAAAA,QAAmBrB,EADoBA,UAElC,CAAA,GAAIA,EAAAA,WAAkB02C,EAG3B,MAAM,IAAA7+C,MADD,4BADLwJ,EAAAA,OAAkBu1C,WAAW52C,EADkBjG,SAVhC,OAiBnB,MAAM09C,EAAS9iD,KAAA0iD,cAAmBr3C,EA1BDy3C,QA2BjC,IAAAA,EACE,MAAM,IAAA5/C,MAAU,+BAA+BmI,EAA/By3C,UAElB,GAAIz3C,EAAJg3C,WAAA,CACE,MAAMU,EAAe/iD,KADFkiD,WAEbc,EAAe33C,EAFF62C,WAGnB,IAAAv/C,SAAY,SAAAC,GACVA,EAAQkgD,EAAOz3C,EADcA,UAA/B3F,MAGE,SAAA4c,GACE8/B,EAAAA,YAAmB,CACjBF,WADiBa,EAEjBZ,WAFiBa,EAGjB3zB,SAAU0yB,EACVM,WAAYh3C,EAJKg3C,WAKjBh3C,KALiBiX,OAQrB,SAAAld,GACEg9C,EAAAA,YAAmB,CACjBF,WADiBa,EAEjBZ,WAFiBa,EAGjB3zB,SAAU0yB,EACVM,WAAYh3C,EAJKg3C,WAKjBj9C,OAAQ68C,WALS78C,aAWrBiG,EAAJi3C,SACEtiD,KAAAijD,kBADiB53C,GAInBy3C,EAAOz3C,EA7D0BA,OA+DnC+2C,EAAAA,iBAAAA,UAAmCpiD,KA3EO2iD,oBA8E5C9tB,GAAAA,EAAAA,GAUE,MAAMquB,EAAKljD,KAVW0iD,cAWtB,GAAIQ,EAAJC,GACE,MAAM,IAAAjgD,MAAU,0CAAAigD,MAElBD,EAAAA,GAdsBE,EAuBxBC,KAAAA,EAAAA,EAAAA,GACErjD,KAAAsjD,aACE,CACEpB,WAAYliD,KADdkiD,WAEEC,WAAYniD,KAFdmiD,WAGEW,OAHFK,EAAA93C,KAAAA,GAF8BwnB,GAoBlC9L,gBAAAA,EAAAA,EAAAA,GACE,MAAMs7B,EAAariD,KADwBqiD,aAErC31C,GAFqC,EAAApJ,EAAAmJ,2BAG3CzM,KAAAyiD,qBAAAJ,GAH2C31C,EAI3C,IACE1M,KAAAsjD,aACE,CACEpB,WAAYliD,KADdkiD,WAEEC,WAAYniD,KAFdmiD,WAGEW,OAHFK,EAAAd,WAAAA,EAAAh3C,KAAAA,GAFAwnB,GAWF,MAAAzwB,GACAsK,EAAAA,OADWtK,GAGb,OAAOsK,EAlBoCmb,QA+B7CyI,eAAAA,EAAAA,EAAAA,EAAAA,GACE,MAAMgyB,EAAWtiD,KAD2CsiD,WAEtDJ,EAAaliD,KAFyCkiD,WAGtDC,EAAaniD,KAHyCmiD,WAItDC,EAASpiD,KAJ6CoiD,OAM5D,OAAO,IAAAv4C,eACL,CACEP,MAAOi6C,IACL,MAAMC,GADa,EAAAlgD,EAAAmJ,2BAEnBzM,KAAAwiD,kBAAAF,GAAmC,CAAAiB,WAAAA,EAEjCE,UAFiCD,EAGjCE,SAHiC,KAIjCC,WAJiC,KAKjCC,UALiC,GAOnC5jD,KAAAsjD,aACE,CAAApB,WAAAA,EAAAC,WAAAA,EAGEW,OAHFK,EAAAb,SAAAA,EAAAj3C,KAAAA,EAMEw4C,YAAaN,EANfM,aAViBhxB,GAqBnB,OAAO2wB,EArBY37B,SAwBrBi8B,KAAMP,IACJ,MAAMQ,GADY,EAAAzgD,EAAAmJ,2BAElBzM,KAAAwiD,kBAAAF,GAAAoB,SAFkBK,EAGlB3B,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBuB,YAAaN,EALIM,cASnB,OAAOE,EAZWl8B,SAepB2J,OAAQpsB,KACN7E,EAAAA,EAAAA,QAAO6E,aAAP7E,MADgB,mCAEhB,MAAMyjD,GAFU,EAAA1gD,EAAAmJ,2BAGhBzM,KAAAwiD,kBAAAF,GAAAqB,WAHgBK,EAIhBhkD,KAAAwiD,kBAAAF,GAAAsB,UAJgB,EAKhBxB,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBl9C,OAAQ68C,WALS78C,KAQnB,OAAO4+C,EAbSn8B,UA/CsCo8B,GAsE9DhB,kBAAAA,GACE,MAAMiB,EADgBlkD,KAEhB8iD,EAAS9iD,KAAA0iD,cAAmBr3C,EAFZy3C,QAGhBR,EAAWj3C,EAHKi3C,SAIhBJ,EAAaliD,KAJGkiD,WAKhBC,EAAa92C,EALG62C,WAMhBE,EAASpiD,KANOoiD,OAQhB+B,EAAa,CACjBC,QAAAA,EAAe3zB,EAAf2zB,EAAAA,GACE,GAAIpkD,KAAJqkD,YAAsB,OAGtB,MAAMC,EAAkBtkD,KAJU6jD,YAKlC7jD,KAAA6jD,aALkCpzB,EASlC,GAAI6zB,EAAAA,GAAuBtkD,KAAA6jD,aAA3B,EAAkD,CAChD7jD,KAAAukD,gBADgD,EAAAjhD,EAAAmJ,2BAEhDzM,KAAAwkD,MAAaxkD,KAAAukD,eAFmC18B,QAIlDq8B,EAAAA,aACE,CAAAhC,WAAAA,EAAAC,WAAAA,EAGES,OAAQZ,EAHVM,SAAAA,EAAAv2C,MAAAA,GAdgC8mB,IAyBpCsE,QACE,IAAIn3B,KAAJqkD,YAAA,CAGArkD,KAAAqkD,aAJM,EAKNjC,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,WAMZ4B,EAAAA,YAXD5B,KAcRtzB,MAAAA,IACEzuB,EAAAA,EAAAA,QAAO6E,aAAP7E,MADY,kCAEZ,IAAIP,KAAJqkD,YAAA,CAGArkD,KAAAqkD,aALY,EAMZjC,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBl9C,OAAQ68C,WALS78C,OASrBm/C,gBAvDiB,EAAAjhD,EAAAmJ,2BAwDjBg4C,OAxDiB,KAyDjBC,SAzDiB,KA0DjBL,aA1DiB,EA2DjBR,YAAax4C,EA3DIw4C,YA4DjBW,MA5DiB,MA+DnBL,EAAAA,eAvEsBvhD,UAwEtBuhD,EAAAA,MAAmBA,EAAAA,eAxEGt8B,QAyEtB7nB,KAAAuiD,YAAAD,GAzEsB6B,EA0EtB,IAAAxhD,SAAY,SAAAC,GACVA,EAAQkgD,EAAOz3C,EAAPy3C,KADqBqB,OAA/Bz+C,MAGE,WACE08C,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBqC,SALiB,OAQrB,SAAAv/C,GACEg9C,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBl9C,OAAQ68C,WALS78C,QAczBy9C,sBAAAA,GACE,MAAMP,EAAWj3C,EADSi3C,SAEpBJ,EAAaliD,KAFOkiD,WAGpBC,EAAa92C,EAHO62C,WAIpBE,EAASpiD,KAJWoiD,OAM1B,OAAQ/2C,EAARu3C,QACE,KAAKZ,EACC32C,EAAJs5C,QACE3kD,KAAAwiD,kBAAAF,GAAAmB,UADgB7gD,UAGhB5C,KAAAwiD,kBAAAF,GAAAmB,UAAA5gD,OACEo/C,WAAW52C,EAFRjG,SAJX,MAUE,KAAK48C,EACC32C,EAAJs5C,QACE3kD,KAAAwiD,kBAAAF,GAAAoB,SADgB9gD,UAGhB5C,KAAAwiD,kBAAAF,GAAAoB,SAAA7gD,OACEo/C,WAAW52C,EAFRjG,SAbX,MAmBE,KAAK48C,EAEH,IAAKhiD,KAAAuiD,YAALD,GAAiC,CAC/BF,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBqC,SALiB,IADY,MAc/B3kD,KAAAuiD,YAAAD,GAAAuB,aAAA,GACAx4C,EAAAA,YAFF,GAIErL,KAAAuiD,YAAAD,GAAAiC,eADA3hD,UAIF5C,KAAAuiD,YAAAD,GAAAuB,YAAyCx4C,EAtB3Cw4C,YAuBE,MAAMY,OAAAA,GAAazkD,KAAAuiD,YAAiBl3C,EAvBtCi3C,UAwBE,IAAA3/C,SAAY,SAAAC,GACVA,EAAQ6hD,GAAUA,QADpB/+C,MAGE,WACE08C,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBqC,SALiB,OAQrB,SAAAv/C,GACEg9C,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBl9C,OAAQ68C,WALS78C,QAxD3B,MAkEE,KAAK48C,GACHzhD,EAAAA,EAAAA,QACEP,KAAAwiD,kBADFjiD,GADF,yCAKE,GAAIP,KAAAwiD,kBAAAF,GAAJsB,SAA+C,MAG/C5jD,KAAAwiD,kBAAAF,GAAAiB,WAAAa,QAAoD/4C,EARtDU,OAlEF,MA4EE,KAAKi2C,GACHzhD,EAAAA,EAAAA,QACEP,KAAAwiD,kBADFjiD,GADF,uCAKE,GAAIP,KAAAwiD,kBAAAF,GAAJsB,SAA+C,MAG/C5jD,KAAAwiD,kBAAAF,GAAAsB,UARF,EASE5jD,KAAAwiD,kBAAAF,GAAAiB,WATFpsB,QAUEn3B,KAAA4kD,wBAVFtC,GA5EF,MAwFE,KAAKN,GACHzhD,EAAAA,EAAAA,QACEP,KAAAwiD,kBADFjiD,GADF,uCAKEP,KAAAwiD,kBAAAF,GAAAiB,WAAAv0B,MACEizB,WAAW52C,EANfjG,SAQEpF,KAAA4kD,wBARFtC,GAxFF,MAkGE,KAAKN,EACC32C,EAAJs5C,QACE3kD,KAAAwiD,kBAAAF,GAAAqB,WADgB/gD,UAGhB5C,KAAAwiD,kBAAAF,GAAAqB,WAAA9gD,OACEo/C,WAAW52C,EAFRjG,SAKPpF,KAAA4kD,wBARFtC,GAlGF,MA4GE,KAAKN,EACH,IAAKhiD,KAAAuiD,YAALD,GAAiC,MAGjC,MAAMoC,SAAAA,GAAe1kD,KAAAuiD,YAAiBl3C,EAJxCi3C,UAKE,IAAA3/C,SAAY,SAAAC,GACVA,EAAQ8hD,GAAYA,EAASzC,WAAW52C,EADXjG,aAA/BM,MAGE,WACE08C,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBqC,SALiB,OAQrB,SAAAv/C,GACEg9C,EAAAA,YAAmB,CAAAF,WAAAA,EAAAC,WAAAA,EAGjBS,OAAQZ,EAHSM,SAAAA,EAKjBl9C,OAAQ68C,WALS78C,QAbvBD,OAqBSC,IACPhE,QAAAA,IAAY,yCADMgE,MAGpBpF,KAAAuiD,YAAAD,GAAAiC,eAAA1hD,OACEo/C,WAAW52C,EA9BfjG,SAgCEpF,KAAAuiD,YAAAD,GAAA+B,aAhCF,SAiCSrkD,KAAAuiD,YAjCTD,GA5GF,MA+IE,QACE,MAAM,IAAAp/C,MAhJV,2BAuJF2B,8BAAAy9C,SAGQ3/C,QAAAkiD,WACJ,CACE7kD,KAAAwiD,kBAAAF,GADFmB,UAEEzjD,KAAAwiD,kBAAAF,GAFFoB,SAGE1jD,KAAAwiD,kBAAAF,GAHFqB,YAAA90C,KAIM,SAAAnC,GACJ,OAAOA,GAAcA,EADKmb,mBAIvB7nB,KAAAwiD,kBAZ+BF,GAqBxCgB,aAAAA,EAAAA,GACMzwB,GAAa7yB,KAAjB2mB,qBACE3mB,KAAAoiD,OAAA5vB,YAAAhT,EAD0CqT,GAG1C7yB,KAAAoiD,OAAA5vB,YADKhT,GAKTtb,UACElE,KAAAoiD,OAAAlvB,oBAAA,UAA2ClzB,KADnC2iD,oGCtkBZ,IAAAr/C,EAAAC,EAAA,cAiBA,MAAAy1B,SACEt1B,aAAYohD,WAAAA,EAAAC,QAAZrhD,IACE1D,KAAAglD,aADmCF,EAEnC9kD,KAAAilD,MAFmCF,EAKrCG,SACE,OAAOllD,KADAilD,MAITr4C,IAAAA,GACE,OAAO5M,KAAAglD,aAAAp4C,IAAA9H,IADC,KAIVu7B,SACE,OAAOzxB,EAAAA,EAAAA,eAAc5O,KADdglD,cAIT/sB,IAAAA,GACE,OAAOj4B,KAAAglD,aAAA/sB,IADCnzB,gGCrBZ,IAAAxB,EAAAC,EAAA,GAEA,MAAA4hD,qBACEzhD,YAAAA,EAAAA,GACE1D,KAAAk7C,SADwB,EAExBl7C,KAAA8E,KAFwBA,EAGxB9E,KAAA+sB,OAHwBA,2BAO5B,MAAA+L,sBACEp1B,YAAAA,GACE1D,KAAA8E,KADgB,KAEhB9E,KAAAolD,QAFgB,KAGhBplD,KAAAqlD,OAHgB,KAIhBrlD,KAAAslD,QAAe,IAJC74B,IAMhB,GAAA,OAAIphB,EAAJ,CAGArL,KAAA8E,KAAYuG,EATIvG,KAUhB9E,KAAAolD,QAAe/5C,EAVC+5C,QAWhBplD,KAAAqlD,OAAch6C,EAXEk6C,MAYhB,IAAA,MAAA7O,KAAoBrrC,EAApBm6C,OACExlD,KAAAslD,QAAAn3B,IACEuoB,EADF5sB,GAEE,IAAAq7B,qBAAyBzO,EAAzB5xC,KAAqC4xC,EAHR3pB,SAOjC,GAAA,QAAI1hB,EAAAA,UACF,IAAA,MAAAqrC,KAAoB12C,KAApBslD,QACE5O,EAAAA,SADgC,EAKpC,IAAA,MAAA7hB,KAAiBxpB,EAAjBwpB,GACE70B,KAAAslD,QAAA14C,IAAAioB,GAAAqmB,SADwB,EAI1B,IAAA,MAAAuK,KAAkBp6C,EAAlBo6C,IACEzlD,KAAAslD,QAAA14C,IAAA64C,GAAAvK,SAD0B,GAK9BE,UAAAA,GACE,GAAA,QAAI1E,EAAAA,KAAsB,CACxB,IAAK12C,KAAAslD,QAAArtB,IAAiBye,EAAtB5sB,IAAiC,EAC/BhoB,EAAAA,EAAAA,MAAK,qCAAqC40C,EAArC5sB,MACL,OAF+B,EAIjC,OAAO9pB,KAAAslD,QAAA14C,IAAiB8pC,EAAjB5sB,IALiBoxB,QAMnB,GAAA,SAAIxE,EAAAA,KAAuB,CAG5BA,EAAJgP,aACE5jD,EAAAA,EAAAA,MADoB,4CAGtB,IAAK40C,EAADiP,QAAJ,UAAqBjP,EAAAA,OAA0B,CAE7C,IAAA,MAAA5sB,KAAiB4sB,EAAjBkP,IAA4B,CAC1B,IAAK5lD,KAAAslD,QAAArtB,IAALnO,GAA2B,EACzBhoB,EAAAA,EAAAA,MAAK,qCAAAgoB,KACL,OAFyB,EAI3B,GAAI9pB,KAAAslD,QAAA14C,IAAAkd,GAAJoxB,QACE,OADgC,EAIpC,OAX6C,EAYxC,GAAA,UAAIxE,EAAAA,OAA0B,CACnC,IAAA,MAAA5sB,KAAiB4sB,EAAjBkP,IAA4B,CAC1B,IAAK5lD,KAAAslD,QAAArtB,IAALnO,GAA2B,EACzBhoB,EAAAA,EAAAA,MAAK,qCAAAgoB,KACL,OAFyB,EAI3B,IAAK9pB,KAAAslD,QAAA14C,IAAAkd,GAALoxB,QACE,OADiC,EAIrC,OAVmC,EAW9B,GAAA,WAAIxE,EAAAA,OAA2B,CACpC,IAAA,MAAA5sB,KAAiB4sB,EAAjBkP,IAA4B,CAC1B,IAAK5lD,KAAAslD,QAAArtB,IAALnO,GAA2B,EACzBhoB,EAAAA,EAAAA,MAAK,qCAAAgoB,KACL,OAFyB,EAI3B,IAAK9pB,KAAAslD,QAAA14C,IAAAkd,GAALoxB,QACE,OADiC,EAIrC,OAVoC,EAW/B,GAAA,WAAIxE,EAAAA,OAA2B,CACpC,IAAA,MAAA5sB,KAAiB4sB,EAAjBkP,IAA4B,CAC1B,IAAK5lD,KAAAslD,QAAArtB,IAALnO,GAA2B,EACzBhoB,EAAAA,EAAAA,MAAK,qCAAAgoB,KACL,OAFyB,EAI3B,GAAI9pB,KAAAslD,QAAA14C,IAAAkd,GAAJoxB,QACE,OADgC,EAIpC,OAVoC,GAYtCp5C,EAAAA,EAAAA,MAAK,mCAAmC40C,EAAnCiP,WACL,OArDgC,GAuDlC7jD,EAAAA,EAAAA,MAAK,sBAAsB40C,EAAtBhwC,SACL,OA/De,EAkEjBm/C,cAAAA,EAAkB3K,GAAlB2K,GACO7lD,KAAAslD,QAAArtB,IAALnO,GAIA9pB,KAAAslD,QAAA14C,IAAAkd,GAAAoxB,UALgCA,GAE9Bp5C,EAAAA,EAAAA,MAAK,qCAAAgoB,KAMTg8B,WACE,OAAK9lD,KAAAslD,QAAL70B,KAGIzwB,KAAJqlD,OACSrlD,KAAAqlD,OADQz9C,QAGV+Y,MAAAA,KAAW3gB,KAAAslD,QAPT1kC,QACe,KAS1BmlC,YACE,OAAO/lD,KAAAslD,QAAA70B,KAAA,GAAwB7hB,EAAAA,EAAAA,eAAc5O,KAAtCslD,SADG,KAIZU,SAAAA,GACE,OAAOhmD,KAAAslD,QAAA14C,IAAAkd,IADI,mGCpIf,IAAAxmB,EAAAC,EAAA,GAfAgf,EAAAhf,EAAA,4BAmBA,MAAAyiB,uBACEtiB,YAAAA,EAAAA,IACEnD,EAAAA,EAAAA,QAAAA,EADyC,+EAMzCP,KAAAimD,cANyC,GAOzCjmD,KAAAkmD,iBAAwB3hC,EAAAA,kBAPiB,EAQzCvkB,KAAAmmD,4BACE5hC,EAAAA,4BATuC,KAWzC,MAAM0B,EAAc1B,EAXqB0B,YAYzC,GAAIA,GAAAA,OAAJ,EAA6B,CAC3B,MAAM5Z,EAAS,IAAArG,WAAAigB,GADY5Z,OAE3BrM,KAAAimD,cAAA58C,KAF2BgD,GAK7BrM,KAAAomD,uBAjByCt/B,EAkBzC9mB,KAAAqmD,uBAA8B9hC,EAlBWY,cAmBzCnlB,KAAAsmD,mBAA0B/hC,EAnBeW,aAoBzCllB,KAAAumD,eAAsBhiC,EApBmB7iB,OAsBzC1B,KAAAwmD,mBAtByC,KAuBzCxmD,KAAAymD,cAvByC,GAyBzCzmD,KAAAomD,uBAAAj+B,kBAA6C,CAAAyP,EAAA7rB,KAC3C/L,KAAA0mD,eAAoB,CAAA9uB,MAAAA,EAAA7rB,MAAAA,OAGtB/L,KAAAomD,uBAAA/9B,qBAAgD,CAAA4O,EAAAvO,KAC9C1oB,KAAA2mD,YAAiB,CAAA1vB,OAAAA,EAAAvO,MAAAA,OAGnB1oB,KAAAomD,uBAAA99B,4BAAuDvc,IACrD/L,KAAA0mD,eAAoB,CAD0C36C,MAAAA,OAIhE/L,KAAAomD,uBAAA79B,4BAAuD,KACrDvoB,KAD2D4mD,wBAI7D5mD,KAAAomD,uBAzCyCv9B,iBA4C3C69B,eAAAA,GACE,MAAMr6C,EAAS,IAAArG,WAAe+rB,EAAfhmB,OADIM,OAEnB,QAAA0B,IAAIgkB,EAAAA,MACE/xB,KAAJwmD,mBACExmD,KAAAwmD,mBAAAK,SAD2Bx6C,GAG3BrM,KAAAimD,cAAA58C,KADKgD,OAGF,CACL,MAAMy6C,EAAQ9mD,KAAAymD,cAAAM,MAAwB,SAAArvB,GACpC,GAAIA,EAAAA,SAAuB3F,EAA3B6F,MACE,OADqC,EAGvCF,EAAAA,SAJ2DrrB,GAK3D,OAL2D,MAO7D9L,EAAAA,EAAAA,QAAAA,EARK,4EAeTymD,6BACE,OAAOhnD,KAAAwmD,oBAAAS,SADoB,EAI7BN,YAAAA,GACE,QAAA54C,IAAI/K,EAAAA,MAAyB,CAE3B,MAAMkkD,EAAclnD,KAAAymD,cAFO,GAGvBS,GAAJv/B,YACEu/B,EAAAA,WAAuB,CAAEjwB,OAAQj0B,EADNi0B,aAGxB,CACL,MAAMK,EAAat3B,KADdwmD,mBAEDlvB,GAAJ3P,YACE2P,EAAAA,WAAsB,CAAEL,OAAQj0B,EAAVi0B,OAAsBvO,MAAO1lB,EAA7B0lB,SAK5Bk+B,qBACM5mD,KAAJwmD,oBACExmD,KAAAwmD,mBAD2BtgC,kBAG7BlmB,KAAAkmD,kBAJmB,EAOrBiB,mBAAAA,GACE,MAAMv+C,EAAI5I,KAAAymD,cAAAtzB,QADetC,GAErBjoB,GAAJ,GACE5I,KAAAymD,cAAArzB,OAAAxqB,EADU,GAKdouB,iBACEz2B,EAAAA,EAAAA,SACGP,KADHO,mBADc,iEAKd,MAAM6mD,EAAepnD,KALPimD,cAMdjmD,KAAAimD,cANc,KAOd,OAAO,IAAAoB,6BAAArnD,KAAAonD,EAGLpnD,KAHKkmD,iBAILlmD,KAXYmmD,6BAehBxuB,eAAAA,EAAAA,GACE,GAAIn2B,GAAOxB,KAAXgnD,uBACE,OADsC,KAGxC,MAAMn2B,EAAS,IAAAy2B,kCAAAtnD,KAAA43B,EAJUp2B,GAKzBxB,KAAAomD,uBAAAt9B,iBAAA8O,EALyBp2B,GAMzBxB,KAAAymD,cAAAp9C,KANyBwnB,GAOzB,OAPyBA,EAU3BiG,kBAAAA,GACM92B,KAAJwmD,oBACExmD,KAAAwmD,mBAAAh1B,OAD2BpsB,GAGbpF,KAAAymD,cAAA7+C,MAJQ,GAKxB2/C,SAAgB,SAAA7vB,GACdA,EAAAA,OADqCtyB,MAGvCpF,KAAAomD,uBARwBr9B,UAa5B,MAAAs+B,6BACE3jD,YAAAA,EAAAA,EAGEwiB,GAHFxiB,EAIEyiB,EAJFziB,MAME1D,KAAAwnD,QADA5E,EAEA5iD,KAAAynD,MAAavhC,IAFb,EAGAlmB,KAAA0nD,WAAiBrlD,EAAAA,EAAAA,WAAAA,GAAAA,EAHjB,KAMArC,KAAAimD,cAAqBmB,GANrB,GAOApnD,KAAAinD,QAPA,EAQA,IAAA,MAAAl7C,KAAoB/L,KAApBimD,cACEjmD,KAAAinD,SAAgBl7C,EADsBP,WAGxCxL,KAAA2nD,UAXA,GAYA3nD,KAAA4nD,cAAqBjlD,QAZrBC,UAaAggD,EAAAA,mBAbA5iD,KAeAA,KAAA2nB,WAfA,KAkBFk/B,SAAAA,GACE,IAAI7mD,KAAJynD,MAAA,CAGA,GAAIznD,KAAA2nD,UAAAjmD,OAAJ,EAA+B,CACH1B,KAAA2nD,UADGtqB,QAE7BwqB,QAA0B,CAAE74C,MAAFjD,EAAgBmlB,MAAhB,SAE1BlxB,KAAAimD,cAAA58C,KADK0C,GAGP/L,KAAAinD,SAAgBl7C,EAVFP,YAahBs8C,mBACE,OAAO9nD,KADU4nD,cAInBtlD,eACE,OAAOtC,KADM0nD,UAIflwB,uBACE,OAAOx3B,KAAAwnD,QADclB,kBAIvB/uB,2BACE,OAAOv3B,KAAAwnD,QADkBnB,sBAI3B5uB,oBACE,OAAOz3B,KAAAwnD,QADWjB,eAIpB1hD,aACE,GAAI7E,KAAAimD,cAAAvkD,OAAJ,EAAmC,CAEjC,MAAO,CAAEsN,MADKhP,KAAAimD,cADmB5oB,QAEVnM,MAAhB,GAET,GAAIlxB,KAAJynD,MACE,MAAO,CAAEz4C,WAAFjB,EAAoBmjB,MAApB,GAET,MAAM22B,GARK,EAAAvkD,EAAAmJ,2BASXzM,KAAA2nD,UAAAt+C,KATWw+C,GAUX,OAAOA,EAVIhgC,QAab2J,OAAAA,GACExxB,KAAAynD,OADa,EAEbznD,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UALa,GAQfzhC,kBACMlmB,KAAJynD,QAGAznD,KAAAynD,OAJgB,IASpB,MAAAH,kCACE5jD,YAAAA,EAAAA,EAAAA,GACE1D,KAAAwnD,QAD8B5E,EAE9B5iD,KAAA+nD,OAF8BnwB,EAG9B53B,KAAAgoD,KAH8BxmD,EAI9BxB,KAAAioD,aAJ8B,KAK9BjoD,KAAA2nD,UAL8B,GAM9B3nD,KAAAynD,OAN8B,EAQ9BznD,KAAA2nB,WAR8B,KAWhCk/B,SAAAA,GACE,IAAI7mD,KAAJynD,MAAA,CAGA,GAAA,IAAIznD,KAAA2nD,UAAAjmD,OACF1B,KAAAioD,aAD+Bl8C,MAE1B,CACsB/L,KAAA2nD,UADtBtqB,QAEL6qB,QAA2B,CAAEl5C,MAAFjD,EAAgBmlB,MAAhB,IAC3BlxB,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UANK,GAQP3nD,KAAAynD,OAdc,EAedznD,KAAAwnD,QAAAL,mBAfcnnD,OAkBhBu3B,2BACE,OADyB,EAI3B1yB,aACE,GAAI7E,KAAJioD,aAAuB,CACrB,MAAMl8C,EAAQ/L,KADOioD,aAErBjoD,KAAAioD,aAFqB,KAGrB,MAAO,CAAEj5C,MAAFjD,EAAgBmlB,MAAhB,GAET,GAAIlxB,KAAJynD,MACE,MAAO,CAAEz4C,WAAFjB,EAAoBmjB,MAApB,GAET,MAAM22B,GATK,EAAAvkD,EAAAmJ,2BAUXzM,KAAA2nD,UAAAt+C,KAVWw+C,GAWX,OAAOA,EAXIhgC,QAcb2J,OAAAA,GACExxB,KAAAynD,OADa,EAEbznD,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UALa,GAMb3nD,KAAAwnD,QAAAL,mBANannD,0FCrSjB,IAAAsD,EAAAC,EAAA,kBAkBA,MAAAirB,aACE9qB,aAAY+qB,OAAEA,GAAF,IACVzuB,KAAAmoD,UAD8B,IACd15B,EAGlByb,gBACE,IAAI5pC,EAAUN,KADAmoD,SAEd7nD,IACEA,EAAU8nD,EADCC,aAGb,OAAOnpC,EAAAA,EAAAA,QAAAA,KAAAA,YALO5e,GAQhBwpC,cAAaa,MAAAA,EAAAtC,KAAAA,EAAAS,WAAbgB,IACE,OAAOse,EAAAA,aAAAA,EAAAA,EADiCtf,GAI1CkX,aAAYh8C,MAAAA,EAAAC,OAAAA,EAAAy7C,gBAAAA,EAAAD,QAAAA,EAAAh7C,QAAZu7C,IACE,OAAOoI,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,EADyD3jD,GAUlEgtB,QACE22B,EADMn9B,YAKV,MAAMm9B,EAAc,SAAAE,oBAClB,SAAAC,WAAAC,EAAAj5C,EAAAk5C,GACE,MAAMC,EAASF,EAAAA,aADyBC,GAExCD,EAAAA,aAAAA,EAFwCj5C,GAGxCi5C,EAAAA,cAHwCE,GAKxC,IADiBF,EAAAA,mBAAAA,EAA8BA,EAJPG,gBAKzB,CACb,MAAMC,EAAWJ,EAAAA,iBADJE,GAEb,MAAM,IAAAxlD,MAAU,oCAFH0lD,GAIf,OATwCF,EAW1C,SAAAG,mBAAAL,EAAAj5C,GACE,OAAOg5C,WAAAA,EAAAA,EAAqBC,EADQM,eAGtC,SAAAC,qBAAAP,EAAAj5C,GACE,OAAOg5C,WAAAA,EAAAA,EAAqBC,EADUQ,iBAGxC,SAAAC,cAAAT,EAAAU,GACE,MAAMC,EAAUX,EADkBS,gBAElC,IAAK,IAAIrgD,EAAJ,EAAWD,EAAKugD,EAArBxnD,OAAqCkH,EAArCD,IAAAC,EACE4/C,EAAAA,aAAAA,EAAyBU,EADuBtgD,IAGlD4/C,EAAAA,YALkCW,GAOlC,IADeX,EAAAA,oBAAAA,EAAgCA,EANbY,aAOrB,CACX,MAAMR,EAAWJ,EAAAA,kBADNW,GAEX,MAAM,IAAAjmD,MAAU,iCAFL0lD,GAIb,OAXkCO,EAapC,SAAAE,cAAAb,EAAAlP,EAAAgQ,GACEd,EAAAA,cAD2Cc,GAE3C,MAAMC,EAAUf,EAF2Ba,gBAG3Cb,EAAAA,YAAeA,EAAfA,WAH2Ce,GAM3Cf,EAAAA,cAAiBA,EAAjBA,WAAgCA,EAAhCA,eAAmDA,EANRgB,eAO3ChB,EAAAA,cAAiBA,EAAjBA,WAAgCA,EAAhCA,eAAmDA,EAPRgB,eAQ3ChB,EAAAA,cAAiBA,EAAjBA,WAAgCA,EAAhCA,mBAAuDA,EARZiB,SAS3CjB,EAAAA,cAAiBA,EAAjBA,WAAgCA,EAAhCA,mBAAuDA,EATZiB,SAY3CjB,EAAAA,WAAcA,EAAdA,WAAAA,EAAgCA,EAAhCA,KAAyCA,EAAzCA,KAAkDA,EAAlDA,cAZ2ClP,GAa3C,OAb2CiQ,EAgB7C,IAAAG,EA/C+CC,EAgD/C,SAAAC,aACE,IAAAF,EAAA,CAKAC,EAAgB5mD,SAAAA,cANI,UAOpB2mD,EAAYC,EAAAA,WAAAA,QAAkC,CAC5CE,oBARkB,KA0DtB,IAAIC,EA1G2C,KAyP/C,IAAIC,EAzP2C,KAga/C,MAAO,CACL1B,YACE,IACEuB,aACA,QAFEF,EAGF,MAAAtnD,IACF,OALU,GADP0nC,aAvQP,SAAAA,aAAAa,EAAAtC,EAAAS,GACE,MAAM9kC,EAAQ2mC,EAAd3mC,MACEC,EAAS0mC,EAFkC1mC,OAI7C6lD,GAjDF,SAAAE,cACEJ,aACA,MAAM7lD,EAFe4lD,EAGrBA,EAHqB,KAIrB,MAAMnB,EAJekB,EAKrBA,EALqB,KAQrB,MAEMP,EAAUF,cAAAT,EAAkB,CAFbK,mBAAAA,EAvDrB,o0BAwDuBE,qBAAAA,EAxCvB,ssDA0CAP,EAAAA,WAXqBW,GAarB,MAAMjmB,EAbe,GAcrBA,EAAAA,GAdqBslB,EAerBtlB,EAAAA,OAfqBn/B,EAgBrBm/B,EAAAA,mBAA2BslB,EAAAA,mBAAAA,EAhBN,gBAiBrBtlB,EAAAA,iBAAyBslB,EAAAA,kBAAAA,EAjBJ,cAkBrBtlB,EAAAA,iBAAyBslB,EAAAA,mBAAAA,EAlBJ,cAmBrBtlB,EAAAA,gBAAwBslB,EAAAA,mBAAAA,EAnBH,aAqBrB,MAAMyB,EAAmBzB,EAAAA,kBAAAA,EArBJ,cAsBf0B,EAAmB1B,EAAAA,mBAAAA,EAtBJ,WAuBf2B,EAAkB3B,EAAAA,mBAAAA,EAvBH,UA0Bf4B,EAAiB5B,EA1BF6B,eA2BrB7B,EAAAA,WAAcA,EAAdA,aA3BqB4B,GA6BrB5B,EAAAA,WAAcA,EAAdA,aAA+B,IAAA8B,aAAiB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAMlC9B,EAnCO+B,aAoCrB/B,EAAAA,wBApCqByB,GAqCrBzB,EAAAA,oBAAAA,EAAAA,EAA4CA,EAA5CA,OAAAA,EAAAA,EArCqB,GAuCrBA,EAAAA,UAAAA,EAvCqB,GAwCrBA,EAAAA,UAAAA,EAxCqB,GA0CrBsB,EA1CqB5mB,EAkDnB8mB,GAEF,MAAM9mB,EAAN4mB,EACE/lD,EAASm/B,EADXn/B,OAEEykD,EAAKtlB,EATsCslB,GAU7CzkD,EAAAA,MAV6CC,EAW7CD,EAAAA,OAX6CE,EAY7CukD,EAAAA,SAAAA,EAAAA,EAAkBA,EAAlBA,mBAAyCA,EAZIgC,qBAa7ChC,EAAAA,UAAatlB,EAAbslB,mBAAAA,EAb6CvkD,GAezC6kC,EAAJmB,SACEue,EAAAA,UACEtlB,EADFslB,mBAEE1f,EAAAA,SAFF0f,GAGE1f,EAAAA,SAHF0f,GAIE1f,EAAAA,SAJF0f,GADuB,GASvBA,EAAAA,UAAatlB,EAAbslB,mBAAAA,EAAAA,EAAAA,EADK,GAGPA,EAAAA,UACEtlB,EADFslB,gBAEE1f,eAAAA,EAAAA,QAAAA,EA5B2C,GAgC7C,MAAMygB,EAAUF,cAAAA,EAAAA,EAAyBb,EAhCIiC,UAiCvCC,EAAcrB,cAAAA,EAAAA,EAAwBb,EAjCCmC,UAqCvCt+C,EAASm8C,EArC8B6B,eAsC7C7B,EAAAA,WAAcA,EAAdA,aAtC6Cn8C,GAwC7Cm8C,EAAAA,WAAcA,EAAdA,aAA+B,IAAA8B,aAAiB,CAAA,EAAA,EAAAtmD,EAAA,EAAA,EAAAC,EAAA,EAAAA,EAAAD,EAAA,EAAAA,EAAAC,IAM7BukD,EA9C0B+B,aA+C7C/B,EAAAA,wBAA2BtlB,EA/CkB0nB,kBAgD7CpC,EAAAA,oBAAuBtlB,EAAvBslB,iBAAAA,EAAkDA,EAAlDA,OAAAA,EAAAA,EAhD6C,GAmD7CA,EAAAA,WAAAA,EAAAA,EAAAA,EAnD6C,GAoD7CA,EAAAA,OAAUA,EApDmCqC,OAqD7CrC,EAAAA,UAAaA,EAAbA,IAAqBA,EArDwBsC,qBAsD7CtC,EAAAA,MAASA,EAtDoCuC,kBAwD7CvC,EAAAA,WAAcA,EAAdA,UAAAA,EAxD6C,GA0D7CA,EA1D6CwC,QA4D7CxC,EAAAA,cA5D6Ce,GA6D7Cf,EAAAA,cA7D6CkC,GA8D7ClC,EAAAA,aA9D6Cn8C,GAgE7C,OAhE6CtI,GAuQxCi8C,YA5IP,SAAAA,YAAAh8C,EAAAC,EAAAy7C,EAAAD,EAAAh7C,GACEslD,GA1BF,SAAAkB,gBACErB,aACA,MAAM7lD,EAFiB4lD,EAGvBA,EAHuB,KAIvB,MAAMnB,EAJiBkB,EAKvBA,EALuB,KAQvB,MAEMP,EAAUF,cAAAT,EAAkB,CAFbK,mBAAAA,EAtCrB,ogCAuCuBE,qBAAAA,EApBvB,scAsBAP,EAAAA,WAXuBW,GAavB,MAAMjmB,EAbiB,GAcvBA,EAAAA,GAduBslB,EAevBtlB,EAAAA,OAfuBn/B,EAgBvBm/B,EAAAA,mBAA2BslB,EAAAA,mBAAAA,EAhBJ,gBAiBvBtlB,EAAAA,cAAsBslB,EAAAA,mBAAAA,EAjBC,WAkBvBtlB,EAAAA,eAAuBslB,EAAAA,mBAAAA,EAlBA,YAmBvBtlB,EAAAA,iBAAyBslB,EAAAA,kBAAAA,EAnBF,cAoBvBtlB,EAAAA,cAAsBslB,EAAAA,kBAAAA,EApBC,WAsBvBuB,EAtBuB7mB,EA2BrB+nB,GAEF,MAAM/nB,EAAN6mB,EACEhmD,EAASm/B,EADXn/B,OAEEykD,EAAKtlB,EAN8DslB,GAQrEzkD,EAAAA,MARqEC,EASrED,EAAAA,OATqEE,EAUrEukD,EAAAA,SAAAA,EAAAA,EAAkBA,EAAlBA,mBAAyCA,EAV4BgC,qBAWrEhC,EAAAA,UAAatlB,EAAbslB,mBAAAA,EAXqEvkD,GAcrE,IAAIk0C,EAdiE,EAerE,IAAK,IAAIvvC,EAAJ,EAAWD,EAAK82C,EAArB/9C,OAAqCkH,EAArCD,EAA6CC,IAC3C,OAAQ62C,EAAAA,GAAR/4C,MACE,IAAA,UAGEyxC,KADGsH,EAAAA,GAAAA,OAAAA,OAA2BA,EAAAA,GAA5BL,eAFJ,GAGW,IAAcK,EAAA72C,GAAAw2C,eAAd,GAHX,EADF,MAME,IAAA,YACEjH,GAASsH,EAAAA,GAAAA,OADX/9C,OAMJ,MAAM62C,EAAS,IAAA+R,aA5BsD,EA4BrCnS,GAC1BiF,EAAS,IAAAp3C,WA7BsD,EA6BvCmyC,GACxB+S,EAAYzmD,EAAlB8zC,OACE4S,EAAY1mD,EA/BuD24C,OAgCrE,IAAIgO,EAAJ,EACEC,EAjCmE,EAkCrE,IAAK,IAAIziD,EAAJ,EAAWD,EAAK82C,EAArB/9C,OAAqCkH,EAArCD,EAA6CC,IAAK,CAChD,MAAMq2C,EAASQ,EAAf72C,GACEs2C,EAAKD,EADP1G,OAEE4G,EAAKF,EAHyC7B,OAIhD,OAAQ6B,EAARv4C,MACE,IAAA,UACE,MAAM44C,EAAOL,EADfG,eAEQC,EAAQH,EAAAA,OAADI,EAFf,EAGE,IAAK,IAAI9U,EAAT,EAAkBA,EAAlB6U,EAA8B7U,IAAO,CACnC,IAAIhN,EAASgN,EAAAA,EADsB,EAEnC,IAAK,IAAI8gB,EAAT,EAAkBA,EAAlBhM,EAA8BgM,IAAO9tB,IAAU,CAC7C+a,EAAAA,GAAiB2S,EAAUhM,EAAG1hB,EAAAA,EADe,IAE7C+a,EAAO6S,EAAP7S,GAAqB2S,EAAUhM,EAAG1hB,EAAAA,EAAH0hB,GAFc,GAG7C3G,EAAO6S,EAAP7S,GAAqB2S,EAAUhM,EAAG1hB,EAHW8hB,IAI7C/G,EAAO6S,EAAP7S,GAAqB2S,EAAUhM,EAAG1hB,EAAH0hB,GAJc,GAK7C3G,EAAO6S,EAAP7S,GAAqB2S,EAAUhM,EAAG1hB,EALW,IAM7C+a,EAAO6S,EAAP7S,GAAqB2S,EAAUhM,EAAG1hB,EAAH0hB,GANc,GAO7C9B,EAAAA,GAAiB+N,EAAUhM,EAAG3hB,EAAAA,EAPe,IAQ7C4f,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAAAA,EAAH2hB,GARc,GAS7C/B,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAAAA,EAAH2hB,GATc,GAU7C/B,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAVW8hB,IAW7ClC,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAAH2hB,GAXc,GAY7C/B,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAAH2hB,GAZc,GAa7C/B,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAbW,IAc7C4f,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAAH2hB,GAdc,GAe7C/B,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAG3hB,EAAH2hB,GAfc,GAiB7C5G,EAAO6S,EAAP7S,GAAqBA,EAAO6S,EAjBiB,GAkB7C7S,EAAO6S,EAAP7S,GAAqBA,EAAO6S,EAlBiB,GAmB7C7S,EAAO6S,EAAP7S,GAAqBA,EAAO6S,EAnBiB,GAoB7C7S,EAAO6S,EAAP7S,GAAqBA,EAAO6S,EApBiB,GAqB7C7S,EAAO6S,EAAP7S,IAAsB2S,EAAUhM,EArBa1hB,IAsB7C+a,EAAO6S,EAAP7S,IAAsB2S,EAAUhM,EAAAA,GAtBa,GAuB7C9B,EAAOiO,EAAPjO,GAAqBA,EAAOiO,EAvBiB,GAwB7CjO,EAAOiO,EAAPjO,IAAsBA,EAAOiO,EAxBgB,GAyB7CjO,EAAOiO,EAAPjO,IAAsBA,EAAOiO,EAzBgB,GA0B7CjO,EAAOiO,EAAPjO,IAAsBA,EAAOiO,EA1BgB,GA2B7CjO,EAAOiO,EAAPjO,IAAsBA,EAAOiO,EA3BgB,GA4B7CjO,EAAOiO,EAAPjO,IAAsBA,EAAOiO,EA5BgB,GA6B7CjO,EAAOiO,EAAPjO,IAAsB+N,EAAUhM,EA7Ba3hB,IA8B7C4f,EAAOiO,EAAPjO,IAAsB+N,EAAUhM,EAAAA,GA9Ba,GA+B7C/B,EAAOiO,EAAPjO,IAAsB+N,EAAUhM,EAAAA,GA/Ba,GAgC7CiM,GAhC6C,GAiC7CC,GAjC6C,IANrD,MA2CE,IAAA,YACE,IAAK,IAAIlkB,EAAJ,EAAWokB,EAAKrM,EAArBx9C,OAAgCylC,EAAhCokB,EAAwCpkB,IAAK,CAC3CoR,EAAAA,GAAiB2S,EAAUhM,EADgB/X,IAE3CoR,EAAO6S,EAAP7S,GAAqB2S,EAAUhM,EAAAA,GAFY,GAG3C9B,EAAAA,GAAiB+N,EAAUhM,EAHgBhY,IAI3CiW,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAAA,GAJY,GAK3C/B,EAAOiO,EAAPjO,GAAqB+N,EAAUhM,EAAAA,GALY,GAM3CiM,GAN2C,EAO3CC,GAP2C,IAcnD3L,EACE8I,EAAAA,WACE9I,EAAAA,GADF8I,IAEE9I,EAAAA,GAFF8I,IAGE9I,EAAAA,GAHF8I,IADmB,GAQnBA,EAAAA,WAAAA,EAAAA,EAAAA,EADK,GAGPA,EAAAA,MAASA,EA1G4DuC,kBA4GrE,MAAMS,EAAehD,EA5GgD6B,eA6GrE7B,EAAAA,WAAcA,EAAdA,aA7GqEgD,GA8GrEhD,EAAAA,WAAcA,EAAdA,aAAAA,EAAuCA,EA9G8B+B,aA+GrE/B,EAAAA,wBAA2BtlB,EA/G0C0nB,kBAgHrEpC,EAAAA,oBAAuBtlB,EAAvBslB,iBAAAA,EAAkDA,EAAlDA,OAAAA,EAAAA,EAhHqE,GAkHrE,MAAMiD,EAAejD,EAlHgD6B,eAmHrE7B,EAAAA,WAAcA,EAAdA,aAnHqEiD,GAoHrEjD,EAAAA,WAAcA,EAAdA,aAAAA,EAAuCA,EApH8B+B,aAqHrE/B,EAAAA,wBAA2BtlB,EArH0CwoB,eAsHrElD,EAAAA,oBACEtlB,EADFslB,cAAAA,EAGEA,EAHFA,eAAAA,EAAAA,EAtHqE,GA+HrEA,EAAAA,UAAatlB,EAAbslB,cAAkC/jD,EAAlC+jD,OAAkD/jD,EA/HmBwpC,QAgIrEua,EAAAA,UAAatlB,EAAbslB,eAAmC/jD,EAAnC+jD,QAAoD/jD,EAhIiBuC,SAkIrEwhD,EAAAA,WAAcA,EAAdA,UAAAA,EAlIqErQ,GAoIrEqQ,EApIqEwC,QAsIrExC,EAAAA,aAtIqEgD,GAuIrEhD,EAAAA,aAvIqEiD,GAyIrE,OAzIqE1nD,GAyJrEknB,UACE,GAAI6+B,GAAJ/lD,OAAwB,CACtB+lD,EAAAA,OAAAA,MADsB,EAEtBA,EAAAA,OAAAA,OAFsB,EAIxB,GAAIC,GAAJhmD,OAA0B,CACxBgmD,EAAAA,OAAAA,MADwB,EAExBA,EAAAA,OAAAA,OAFwB,EAI1BD,EATQ,KAURC,EAVQ,OA7aM,wFCnCpB,IAAAxnC,EAAAhf,EAAA,GAOAD,EAAAC,EAAA,GAtBAmf,EAAAnf,EAAA,GAAAooD,EAAApoD,EAAA,IAoDA,MAAAqoD,yBAKE/mD,cAAAgnD,GAGE,OAFgBA,EAAAA,KADQC,gBAItB,KAAKC,EAAAA,eAALx6C,KACE,OAAO,IAAAy6C,sBAFXH,GAIE,KAAKE,EAAAA,eAALz6C,KACE,OAAO,IAAA26C,sBALXJ,GAOE,KAAKE,EAAAA,eAALt5C,OAGE,OAFkBo5C,EAAAA,KADpBK,WAII,IAAA,KACE,OAAO,IAAAC,4BAFXN,GAGE,IAAA,MACE,OAAIA,EAAAA,KAAJO,YACS,IAAAC,mCADwBR,GAEtBA,EAAAA,KAAJS,SACE,IAAAC,gCAD4BV,GAG9B,IAAAW,kCATXX,GAUE,IAAA,KACE,OAAO,IAAAY,8BAXXZ,GAaA,OAAO,IAAAa,wBAvBXb,GAyBE,KAAKE,EAAAA,eAAL15C,MACE,OAAO,IAAAs6C,uBA1BXd,GA4BE,KAAKE,EAAAA,eAALv6C,SACE,OAAO,IAAAo7C,0BA7BXf,GA+BE,KAAKE,EAAAA,eAALt6C,KACE,OAAO,IAAAo7C,sBAhCXhB,GAkCE,KAAKE,EAAAA,eAALr6C,OACE,OAAO,IAAAo7C,wBAnCXjB,GAqCE,KAAKE,EAAAA,eAALp6C,OACE,OAAO,IAAAo7C,wBAtCXlB,GAwCE,KAAKE,EAAAA,eAALl6C,SACE,OAAO,IAAAm7C,0BAzCXnB,GA2CE,KAAKE,EAAAA,eAAL55C,MACE,OAAO,IAAA86C,uBA5CXpB,GA8CE,KAAKE,EAAAA,eAAL35C,IACE,OAAO,IAAA86C,qBA/CXrB,GAiDE,KAAKE,EAAAA,eAALn6C,QACE,OAAO,IAAAu7C,yBAlDXtB,GAoDE,KAAKE,EAAAA,eAALj6C,UACE,OAAO,IAAAs7C,2BArDXvB,GAuDE,KAAKE,EAAAA,eAALh6C,UACE,OAAO,IAAAs7C,2BAxDXxB,GA0DE,KAAKE,EAAAA,eAAL/5C,SACE,OAAO,IAAAs7C,0BA3DXzB,GA6DE,KAAKE,EAAAA,eAAL95C,UACE,OAAO,IAAAs7C,2BA9DX1B,GAgEE,KAAKE,EAAAA,eAAL75C,MACE,OAAO,IAAAs7C,uBAjEX3B,GAmEE,KAAKE,EAAAA,eAALz5C,eACE,OAAO,IAAAm7C,gCApEX5B,GAsEE,QACE,OAAO,IAAA6B,kBAvEX7B,KA4EJ,MAAA6B,kBACEhqD,YAAAA,GAEEiqD,aACEA,GADF,EAAAC,aAEEA,GAFF,EAAAC,qBAGEA,GAHF,GAFFnqD,IAQE1D,KAAA2tD,aADAA,EAEA3tD,KAAAqL,KAAYwgD,EAFZxgD,KAGArL,KAAA2qC,MAAakhB,EAHblhB,MAIA3qC,KAAAw2B,KAAYq1B,EAJZr1B,KAKAx2B,KAAAytB,SAAgBo+B,EALhBp+B,SAMAztB,KAAA8tD,YAAmBjC,EANnBiC,YAOA9tD,KAAA+tD,gBAAuBlC,EAPvBkC,gBAQA/tD,KAAAguD,mBAA0BnC,EAR1BmC,mBASAhuD,KAAA2tB,uBAA8Bk+B,EAT9Bl+B,uBAUA3tB,KAAAiuD,WAAkBpC,EAVlBoC,WAWAjuD,KAAAmpB,kBAAyB0iC,EAXzB1iC,kBAYAnpB,KAAAkuD,gBAAuBrC,EAZvBqC,gBAaAluD,KAAAwrB,aAAoBqgC,EAbpBrgC,aAcAxrB,KAAAmuD,YAAmBtC,EAdnBuC,WAgBAT,IACE3tD,KAAAquD,UAAiBruD,KAAAsuD,iBADDV,IAGlBC,IACE7tD,KAAAuuD,eAAsBvuD,KAAAwuD,sBADEZ,IAa5BU,iBAAiBV,GAAjBU,GACE,MAAMjjD,EAAOrL,KAAbqL,KACEmrB,EAAOx2B,KADTw2B,KAEE/I,EAAWztB,KAHwBytB,SAI/B4gC,EAAYtrD,SAAAA,cAJmB,WAKrC,IAAIiB,EAAQqH,EAAAA,KAAAA,GAAeA,EAAAA,KALU,GAMjCpH,EAASoH,EAAAA,KAAAA,GAAeA,EAAAA,KANS,GAQrCgjD,EAAAA,aAAAA,qBAA6ChjD,EARRye,IAYrC,MAAM1hB,EAAO9E,EAAAwE,KAAA2mD,cAAmB,CAC9BpjD,EAAAA,KAD8B,GAE9BmrB,EAAAA,KAAAA,GAAenrB,EAAAA,KAAfmrB,GAA8BA,EAAAA,KAFA,GAG9BnrB,EAAAA,KAH8B,GAI9BmrB,EAAAA,KAAAA,GAAenrB,EAAAA,KAAfmrB,GAA8BA,EAAAA,KAJA,KAOhC63B,EAAAA,MAAAA,UAA4B,UAAU5gC,EAAAA,UAAAA,KAAV,QAC5B4gC,EAAAA,MAAAA,gBAAkC,IAAIjmD,EAAJ,SAAkBA,EAAlB,OAElC,IAAIwlD,GAAiBviD,EAAAA,YAAAA,MAArB,EAAiD,CAC/CgjD,EAAAA,MAAAA,YAA8B,GAAGhjD,EAAAA,YAAHrH,UAC9B,GAAIqH,EAAAA,YAAAA,QAA2BqjD,EAAAA,0BAA/B38C,UAAoE,CAIlE/N,GAAgB,EAAIqH,EAAAA,YAJ8CrH,MAKlEC,GAAkB,EAAIoH,EAAAA,YAL4CrH,MAQpE,MAAM2qD,EAAmBtjD,EAAAA,YAVsBujD,uBAWzCC,EAAiBxjD,EAAAA,YAXwByjD,qBAY/C,GAAIH,EAAAA,GAAwBE,EAA5B,EAAgD,CAC9C,MAAME,EAAS,GAAAJ,SAAAE,MACfR,EAAAA,MAAAA,aAF8CU,EAKhD,OAAQ1jD,EAAAA,YAARkhC,OACE,KAAKmiB,EAAAA,0BAALv5C,MACEk5C,EAAAA,MAAAA,YADF,QADF,MAKE,KAAKK,EAAAA,0BAALt5C,OACEi5C,EAAAA,MAAAA,YADF,SALF,MASE,KAAKK,EAAAA,0BAALr5C,SACEvT,EAAAA,EAAAA,MADF,uCATF,MAaE,KAAK4sD,EAAAA,0BAALp5C,OACExT,EAAAA,EAAAA,MADF,qCAbF,MAiBE,KAAK4sD,EAAAA,0BAAL38C,UACEs8C,EAAAA,MAAAA,kBADF,QAQEhjD,EAAJwpC,MACEwZ,EAAAA,MAAAA,YAA8BvmD,EAAAA,KAAAA,aAAAA,EAC5BuD,EAAAA,MAAAA,GAD4BvD,EAE5BuD,EAAAA,MAAAA,GAHY,EAIZA,EAAAA,MAAAA,IAIFgjD,EAAAA,MAAAA,YAFK,EAMTA,EAAAA,MAAAA,KAAuB,GAAGjmD,EAAH,OACvBimD,EAAAA,MAAAA,IAAsB,GAAGjmD,EAAH,OACtBimD,EAAAA,MAAAA,MAAwB,GAAArqD,MACxBqqD,EAAAA,MAAAA,OAAyB,GAAApqD,MACzB,OAhFqCoqD,EA2FvCG,sBAAsBZ,GAAtBY,GACE,IAAKxuD,KAAAqL,KAAL2jD,WACE,OADyB,KAI3B,MAAMT,EALoC,GAMpCU,EAAYjvD,KAAAqL,KANwBjD,KAO1C,IAAA,MAAA8mD,KAAwBlvD,KAAAqL,KAAxB2jD,WAA8C,CAC5ChvD,KAAAqL,KAAAjD,KAAiB,CACf8mD,EAAAA,GADelnD,EAEfknD,EAAAA,GAFejnD,EAGfinD,EAAAA,GAHelnD,EAIfknD,EAAAA,GAJejnD,GAMjBsmD,EAAAA,KAAoBvuD,KAAAsuD,iBAPwBV,IAS9C5tD,KAAAqL,KAAAjD,KAhB0C6mD,EAiB1C,OAjB0CV,EA8B5CY,aAAAA,EAAAA,GACE,IAAId,EAAYruD,KADUquD,UAE1B,GAAIruD,KAAJuuD,eAAyB,CACvBa,EAAUA,GAAWpvD,KADEuuD,eAEvBF,EAAYruD,KAAAuuD,eAFW,GAMzB,IAAAa,EAAc,EACZA,EAAUrsD,SAAAA,cADE,QAEZqsD,MAAAA,OAAuBf,EAAAA,MAFXpqD,OAGZmrD,EAAAA,MAAAA,MAAsBf,EAAAA,MAHVrqD,MAIZqqD,EAAAA,YAJYe,GAOd,MASMC,EATe,IAAAC,aAAiB,CAAAjB,UAAAA,EAAAe,QAAAA,EAGpCva,MAAOxpC,EAH6BwpC,MAIpC0a,MAAOlkD,EAJ6BkkD,MAKpCC,iBAAkBnkD,EALkBmkD,iBAMpCC,SAAUpkD,EAN0BokD,SAOpCC,aAPoC,IAfZniC,SA2B1B8hC,EAAAA,MAAAA,KAAmBhB,EAAAA,MA3BOrqD,MA6B1BqqD,EAAAA,YA7B0BgB,GAwC5BM,sBAAAA,GAQE3vD,KAAAuuD,eAAAh4B,SAA4Bq5B,IAC1BA,EAAAA,UAD2CC,KAG7C,OAAO7vD,KAXwBuuD,eAqBjChhC,UACE5pB,EAAAA,EAAAA,aADO,sDAKX,MAAAqoD,8BAAA0B,kBACEhqD,YAAAA,GAWEY,MAAAunD,EAAkB,CAAA8B,gBAThB9B,EAAAxgD,KAAAlL,KACA0rD,EAAAA,KADA3kB,MAEA2kB,EAAAA,KAFA/I,QAGA+I,EAAAA,KAHAiE,eAICjE,EAAAA,KAAAA,UACEA,EAAAxgD,KAAA0kD,QAAAC,QACCnE,EAAAA,KAAAA,QADD,aAECA,EAAAA,KAAAA,QATgB,gBAWYgC,sBAAhB,IAGpBtgC,SACE,MAAMliB,KAAAA,EAAAyiD,YAAAA,GADC9tD,KAEDE,EAAO6C,SAAAA,cAFN,KAIHsI,EAAJlL,KACEF,EAAAA,EAAAA,mBAAAA,EAAwB,CACtBE,IAAKkL,EADiBlL,IAEtBC,OAAQiL,EAAAA,UACJ1K,EAAAA,WADI0K,MAEJyiD,EAJkBmC,mBAKtB5vD,IAAKytD,EALiBoC,gBAMtB5vD,QAASwtD,EANaqC,sBAQf9kD,EAAJy3C,OACL9iD,KAAAowD,iBAAAlwD,EAA4BmL,EADNy3C,QAEbz3C,EAAJ67B,KACLlnC,KAAAqwD,UAAAnwD,EAAqBmL,EADD67B,MAGpB77B,EAAAA,UACCA,EAAA0kD,QAAAC,QACC3kD,EAAAA,QADD,aAECA,EAAAA,QAHFA,gBAIArL,KAJAqL,iBAKArL,KANKwrB,aAQLxrB,KAAAswD,cAAApwD,EADAmL,GAGArL,KAAAqwD,UAAAnwD,EADK,IAIP,GAAIF,KAAJuuD,eACE,OAAOvuD,KAAA2vD,sBAAA,kBAAA9gD,KACL,CAAA+gD,EAAAW,KACE,MAAMC,EAAcD,IAAAA,EAAAA,EAAqBrwD,EADjBuwD,YAExBb,EAAAA,YAFwBY,GAGxB,OAHwBZ,KAQ9B5vD,KAAAquD,UAAAwB,UAxCO,iBAyCP7vD,KAAAquD,UAAAhrD,YAzCOnD,GA0CP,OAAOF,KA1CAquD,UAqDTgC,UAAAA,EAAAA,GACEnwD,EAAAA,KAAYF,KAAA8tD,YAAA4C,mBADeC,GAE3BzwD,EAAAA,QAAe,KACbywD,GACE3wD,KAAA8tD,YAAA8C,gBADeD,GAGjB,OAJmB,IAMjBA,GAAJ,KAAmBA,KACjBzwD,EAAAA,UAD2D,gBAa/DkwD,iBAAAA,EAAAA,GACElwD,EAAAA,KAAYF,KAAA8tD,YAAA+C,aADiB,IAE7B3wD,EAAAA,QAAe,KACbF,KAAA8tD,YAAAgD,mBADmBhO,GAEnB,OAFmB,GAIrB5iD,EAAAA,UAN6B,eAiB/BowD,cAAAA,EAAAA,GACEpwD,EAAAA,KAAYF,KAAA8tD,YAAA+C,aADY,IAExB,MAAMhiD,EAAM,IAAA4d,IAAQ,CAClB,CAAA,SAAA,WACA,CAAA,WAAA,aACA,CAAA,aAAA,iBAEF,IAAA,MAAA3nB,KAAmBiE,OAAAA,KAAYsC,EAA/B0kD,SAA8C,CAC5C,MAAMgB,EAASliD,EAAAA,IAD6B/J,GAE5CisD,IAGA7wD,EAAAA,GAAe,KACbF,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CACNpnC,GAAIze,EADEye,GAAAhlB,KAAAA,KAKV,OARmB,IAWvB5E,EAAAA,UAvBwB,gBA2B5B,MAAA+rD,8BAAAyB,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CANI8B,gBAEpB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,YASxBliC,SACEvtB,KAAAquD,UAAAwB,UADO,iBAGP,MAAMvW,EAAQv2C,SAAAA,cAHP,OAIPu2C,EAAAA,MAAAA,OAAqBt5C,KAAAquD,UAAA9hB,MAJdtoC,OAKPq1C,EAAAA,MAAAA,MAAoBt5C,KAAAquD,UAAA9hB,MALbvoC,MAMPs1C,EAAAA,IACEt5C,KAAAguD,mBAAA,cAEAhuD,KAAAqL,KAAAvG,KAFAssD,cAPK,OAWP9X,EAAAA,IAXO,wBAYPA,EAAAA,QAAAA,OAZO,uBAaPA,EAAAA,QAAAA,SAAyB+X,KAAAA,UAAe,CAAE3qD,KAAM1G,KAAAqL,KAbzCvG,OAeF9E,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA7V,EAAyBt5C,KADFqL,MAIzBrL,KAAAquD,UAAAhrD,YAnBOi2C,GAoBP,OAAOt5C,KApBAquD,WAwBX,MAAA3B,gCAAAgB,kBACEngC,SAEMvtB,KAAAqL,KAAJimD,kBACEtxD,KAAAquD,UAAAkB,MAAuBvvD,KAAAqL,KADMimD,iBAI/B,OAAOtxD,KANAquD,UASTkD,gBAAAA,GACE,OACGv0B,UAAAA,SAAAA,SAAAA,QAAsCrK,EAAvC6+B,SACCx0B,UAAAA,SAAAA,SAAAA,QAAsCrK,EAHpB8+B,QAOvBC,kBAAAA,EAAAA,EAAAA,EAAAA,GACMC,EAAAA,SAAJ,SAEEC,EAAAA,iBAAAA,GAAmCj/B,IACjC3yB,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CACNpnC,GAAI9pB,KAAAqL,KADEye,GAENhlB,KAFM+sD,EAGN7iD,MAAO8iD,EAHDn/B,GAIN0K,MAAO1K,EAJDo/B,SAKNC,SAAUhyD,KAAAuxD,gBALJ5+B,SAWZi/B,EAAAA,iBAAAA,GAAmCj/B,IACjC3yB,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CACNpnC,GAAI9pB,KAAAqL,KADEye,GAENhlB,KAFM+sD,EAGN7iD,MAAO2jB,EAAAA,OAHDs/B,cAUhBC,mBAAAA,EAAAA,EAAAA,GACE,IAAA,MAAWP,EAAXE,KAAA3zB,GACM2zB,WAAAA,GAA0B7xD,KAAAqL,KAAA0kD,UAA9B8B,KACE7xD,KAAA0xD,kBAAAE,EAAAD,EAAAE,EAD4DM,GAMlEC,UAAAA,GACE,MAAMlB,OAAAA,EAAA9wD,OAAAA,GADSuyB,GAET4Z,MAAAA,GAFSnsC,EAGf,IAAA,MAAA0E,IAAmB,CAAA,UAAA,YAAA,UAAA,YAAA,cAAA,eAOhB,CACD,IAAI+vC,EAAQqc,EADXpsD,GAED,GAAA+vC,EAAA,CAGAA,EAAQwd,EAAAA,gBAAgB,GAAGxd,EAAH,WAAoBA,EAAAA,MAL3C,IAMD,OAAA/vC,GACE,IADF,UAEE,IAAA,YACEynC,EAAAA,gBADFsI,EAFF,MAKE,IALF,UAME,IAAA,YACEtI,EAAAA,MADFsI,EANF,MASE,IATF,cAUE,IAAA,cACEtI,EAAAA,YADFsI,MAQR,MAAAsX,oCAAAO,wBACEhpD,YAAAA,GAIEY,MAAAunD,EAAkB,CAJI8B,aAEpB9B,EAAAA,yBACEA,EAAAA,KAADyG,iBAAoCzG,EAAAA,KAHjB0G,aAOxBhlC,SACE,MAAMilC,EAAUxyD,KADTmpB,kBAEDW,EAAK9pB,KAAAqL,KAFJye,GAIP9pB,KAAAquD,UAAAwB,UAJO,uBAMP,IAAI+B,EANG,KAOP,GAAI5xD,KAAJ2tB,uBAAiC,CAI/B,MAAM8kC,EAAaD,EAAA1yB,SAAAhW,EAAqB,CACtC9a,MAAOhP,KAAAqL,KAD+BknD,WAEtCG,cAAe1yD,KAAAqL,KAFuBknD,aAIlC7hC,EAAc+hC,EAAAA,eAA4BA,EAA5BA,OARW,GASzBE,EAAc,CAClBC,UADkB,KAElBC,eAFkB,KAGlBC,0BAHkB,KAIlBC,iBAJkB,MAOpB,GAAI/yD,KAAAqL,KAAJ2nD,UAAyB,CACvBpB,EAAU7uD,SAAAA,cADa,YAEvB6uD,EAAAA,YAFuBlhC,MAGlB,CACLkhC,EAAU7uD,SAAAA,cADL,SAEL6uD,EAAAA,KAFK,OAGLA,EAAAA,aAAAA,QAHKlhC,GAMPiiC,EAAAA,UAzB+BjiC,EA0B/BkhC,EAAAA,aAAAA,KA1B+B9nC,GA4B/B8nC,EAAAA,iBAAAA,SAAkC,SAAAj/B,GAChC6/B,EAAAA,SAAAA,EAAqB,CAAExjD,MAAO2jB,EAAAA,OADmB3jB,WAInD,IAAIikD,aAAetgC,IACbggC,EAAJE,iBACElgC,EAAAA,OAAAA,MAAqBggC,EADSE,gBAGhClgC,EAAAA,OAAAA,kBAAAA,EAJ0B,GAK1BggC,EAAAA,0BAL0B,MAQ5B,GAAI3yD,KAAAkuD,iBAAwBluD,KAA5BwrB,aAA+C,CAC7ComC,EAAAA,iBAAAA,SAAkCj/B,IAC5BggC,EAAJC,YACEjgC,EAAAA,OAAAA,MAAqBggC,EADIC,cAK7BhB,EAAAA,iBAAAA,qBAA8Cj/B,IAC5C,MAAMu+B,OAAAA,GAD+Cv+B,EAE/Co9B,EAAU,CACd/gD,QACE2jD,EAAAA,UAAwBzB,EAAAA,OADlB,GAENsB,EAAAA,SAAAA,EAAqB,CAAExjD,MAAO2jD,EAAAA,UAFxBppD,aAGDopD,EAALE,iBACElgC,EAAAA,OAAAA,MAAqBggC,EADUC,YAInCF,gBACEC,EAAAA,eAA6BzB,EAAAA,eADf,GAEVv+B,EAAAA,SAAiB5vB,SAArBmwD,gBAEEvgC,EAAAA,OAAAA,MAAqBggC,EAFsBE,gBAI7CL,EAAAA,SAAAA,EAAqB,CACnBK,eAAgBF,EAPJE,kBAUhBM,QACElhC,YAAW,IAAMU,EAAAA,OAAAA,MAAmB,CAAEygC,eAAtCnhC,KADM,IAGRohC,WAEE1gC,EAAAA,OAAAA,MAAqBu+B,EAFZmC,UAIXC,SACE3gC,EAAAA,OAAAA,MAAAA,WAAgCu+B,EAAAA,OAAAA,SADzB,UAIPsB,EAAAA,SAAAA,EAAqB,CAAEc,OAAQpC,EAJxBoC,UAMTC,WACE5gC,EAAAA,OAAAA,UAAyBu+B,EADhBqC,UAGXC,WACE,MAAMC,EAAAC,GAAqBxC,EADlBsC,SAELC,GAAAA,GAAiBC,EAAS/gC,EAAAA,OAAAA,MAA9BjxB,QACEixB,EAAAA,OAAAA,kBAAAA,EADuD+gC,KAK7D3qD,OAAAA,KAAAA,GAAAA,QACUjE,GAAQA,KADlBiE,IAAAA,SAEWjE,GAAQirD,EA7CkCjrD,OA8CrD9E,KAAAoyD,UA9CqDz/B,MAmDvDi/B,EAAAA,iBAAAA,WAAoCj/B,IAClCggC,EAAAA,iBAA+BhgC,EAAAA,OADY3jB,MAI3C,IAAI2kD,GAJuC,EAK3C,WAAIhhC,EAAAA,IACFghC,EAD0B,EAErB,UAAIhhC,EAAAA,IACTghC,EADgC,EAE3B,QAAIhhC,EAAAA,MACTghC,EAD8B,GAGhC,IAAA,IAAIA,EAAJ,CAIAhB,EAAAA,UAAwBhgC,EAAAA,OAhBmB3jB,MAiB3ChP,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CAAApnC,GAAAA,EAENhlB,KAFM,YAGNkK,MAAO2jB,EAAAA,OAHD3jB,MAIN4kD,YAJM,EAAAD,UAAAA,EAMNF,SAAU9gC,EAAAA,OANJkhC,eAONH,OAAQ/gC,EAAAA,OAPFmhC,oBAWZ,MAAMC,EAxFuCd,aAyF7CA,aAzF6C,KA0F7CrB,EAAAA,iBAAAA,QAAiCj/B,IAC/B,GAAI3yB,KAAAmuD,YAAJ6F,OAA6B,CAE3BrB,EAAAA,UAAwBhgC,EAAAA,OAFG3jB,MAG3BhP,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CAAApnC,GAAAA,EAENhlB,KAFM,YAGNkK,MAAO2jB,EAAAA,OAHD3jB,MAIN4kD,YAJM,EAKND,UALM,EAMNF,SAAU9gC,EAAAA,OANJkhC,eAONH,OAAQ/gC,EAAAA,OAPFmhC,gBAWZC,EAjBwCphC,MAmB1Ci/B,EAAAA,iBAAAA,aAAsCj/B,IACpCggC,EAAAA,iBAA+BhgC,EAAAA,OADc3jB,MAE7C2jD,EAAAA,0BAF6C,QAI/Cf,EAAAA,iBAAAA,SAAkCj/B,IAE5BA,EAAAA,OAAAA,iBAAgCA,EAAAA,OAApCmhC,eACEnB,EAAAA,0BAD6D,SAIjEf,EAAAA,iBAAAA,UAAmCj/B,IACjCggC,EAAAA,0BAAwC,CACtChgC,EAAAA,OADsCkhC,eAEtClhC,EAAAA,OAFsCmhC,iBAMtC9zD,KAAAqL,KAAA0kD,SAAJkE,WAGErC,EAAAA,iBAAAA,SAAkCj/B,IAChC,IAAI8gC,GADqC,EAErCC,GAFqC,EAGrCf,EAAJG,6BACEW,EAAAC,GAAqBf,EADoBG,2BAG3C9yD,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CAAApnC,GAAAA,EAENhlB,KAFM,YAGNkK,MAAO2jD,EAHDI,iBAINmB,OAAQvhC,EAJFtnB,KAKNuoD,YALM,EAAAH,SAAAA,EAAAC,OAAAA,QAad1zD,KAAAkyD,mBAAAN,EAEE,CACE,CAAA,QAAA,SACA,CAAA,OAAA,QACA,CAAA,YAAA,cACA,CAAA,aAAA,eACA,CAAA,aAAA,cACA,CAAA,UAAA,cAEFj/B,GAASA,EAAAA,OAhKkC3jB,QAoK/CikD,cACErB,EAAAA,iBAAAA,OADgBqB,cAIlBrB,EAAAA,SAAmB5xD,KAAAqL,KAhNY8oD,SAiN/BvC,EAAAA,KAAe5xD,KAAAqL,KAjNgB+oD,UAmN/B,OAAIp0D,KAAAqL,KAAAgpD,SACFzC,EAAAA,UAAoB5xD,KAAAqL,KADSgpD,QAI/B,GAAIr0D,KAAAqL,KAAJipD,KAAoB,CAClB,MACMC,GADav0D,KAAAqL,KAAAjD,KAAA,GAAoBpI,KAAAqL,KAAAjD,KADrB,IAEapI,KAAAqL,KAFbgpD,OAIlBzC,EAAAA,UAAAA,IAJkB,QAKlBA,EAAAA,MAAAA,cAA8B,QAAA2C,kBAE3B,CACL3C,EAAU7uD,SAAAA,cADL,OAEL6uD,EAAAA,YAAsB5xD,KAAAqL,KAFjBknD,WAGLX,EAAAA,MAAAA,cAHK,SAILA,EAAAA,MAAAA,QAJK,aAOP5xD,KAAAw0D,cA5OO5C,GA8OP5xD,KAAAquD,UAAAhrD,YA9OOuuD,GA+OP,OAAO5xD,KA/OAquD,UAyPTmG,cAAAA,GACE,MAAMC,EAAiB,CAAA,OAAA,SAAA,UACjB/wB,SAAAA,EAAAgxB,UAAAA,GAA0B10D,KAAAqL,KAFXspD,sBAGfpoB,EAAQqlB,EAHOrlB,MAQrB7I,IACE6I,EAAAA,SAAiB,GAAA7I,OAGnB6I,EAAAA,MAAczkC,EAAAA,KAAAA,aAAkB4sD,EAAlB5sD,GAAgC4sD,EAAhC5sD,GAA8C4sD,EAZvC,IAcrB,OAAI10D,KAAAqL,KAAAupD,gBACFroB,EAAAA,UAAkBkoB,EAAez0D,KAAAqL,KADGupD,iBAM1C,MAAArI,wCAAAG,wBACEhpD,YAAAA,GACEY,MAAAunD,EAAkB,CAAE8B,aAAc9B,EADZl+B,yBAIxBJ,SACE,MAAMilC,EAAUxyD,KADTmpB,kBAED9d,EAAOrL,KAFNqL,KAGDye,EAAKze,EAHJye,GAID9a,EAAQwjD,EAAAA,SAAAA,EAAqB,CACjCxjD,MACE3D,EAAAA,aACEA,EAAAA,aAAoBA,EAAAA,cAAqBA,EAA1CknD,aACGlnD,EAADwpD,aAJOrC,QAIcnnD,EAAAA,cARrB2D,MAWPhP,KAAAquD,UAAAwB,UAXO,kCAaP,MAAM+B,EAAU7uD,SAAAA,cAbT,SAcP6uD,EAAAA,SAAmBvmD,EAdZ8oD,SAePvC,EAAAA,KAfO,WAgBPA,EAAAA,KAAe5xD,KAAAqL,KAhBR+oD,UAiBPplD,GACE4iD,EAAAA,aAAAA,WADS,GAGXA,EAAAA,aAAAA,KApBO9nC,GAsBP8nC,EAAAA,iBAAAA,UAAmC,SAAAj/B,GACjC,MAAM7tB,EAAO6tB,EAAAA,OADqC7tB,KAElD,IAAA,MAAAgwD,KAAuB/xD,SAAAA,kBAAvB+B,GACE,GAAIgwD,IAAaniC,EAAjBvyB,OAA+B,CAC7B00D,EAAAA,SAD6B,EAE7BtC,EAAAA,SACEsC,EAAAA,WAAAA,aADFtC,sBAEE,CAAExjD,OAJyB,IAQjCwjD,EAAAA,SAAAA,EAAqB,CAAExjD,MAAO2jB,EAAAA,OAXoBs/B,aAcpD,GAAIjyD,KAAAkuD,iBAAwBluD,KAA5BwrB,aAA+C,CAC7ComC,EAAAA,iBAAAA,qBAA8Cj/B,IAC5C,MAAMu+B,OAAAA,GAD+Cv+B,EAE/Co9B,EAAU,CACd/gD,QACE2jB,EAAAA,OAAAA,QADM,QACiBu+B,EAAAA,MACvBsB,EAAAA,SAAAA,EAAqB,CAAExjD,MAAO2jB,EAAAA,OAFxBs/B,WAIRkB,QACElhC,YAAW,IAAMU,EAAAA,OAAAA,MAAmB,CAAEygC,eAAtCnhC,KADM,IAGRqhC,SACE3gC,EAAAA,OAAAA,MAAAA,WAAgCu+B,EAAAA,OAAAA,SADzB,UAIPsB,EAAAA,SAAAA,EAAqB,CAAEc,OAAQpC,EAJxBoC,UAMTC,WACE5gC,EAAAA,OAAAA,UAAyBu+B,EADhBqC,WAIbxqD,OAAAA,KAAAA,GAAAA,QACUjE,GAAQA,KADlBiE,IAAAA,SAEWjE,GAAQirD,EAtBkCjrD,OAuBrD9E,KAAAoyD,UAvBqDz/B,MA0BvD3yB,KAAAkyD,mBAAAN,EAEE,CACE,CAAA,SAAA,YACA,CAAA,SAAA,UACA,CAAA,QAAA,SACA,CAAA,OAAA,QACA,CAAA,YAAA,cACA,CAAA,aAAA,eACA,CAAA,aAAA,cACA,CAAA,UAAA,cAEFj/B,GAASA,EAAAA,OAvCkCs/B,UA2C/CjyD,KAAAquD,UAAAhrD,YA/EOuuD,GAgFP,OAAO5xD,KAhFAquD,WAoFX,MAAAhC,2CAAAK,wBACEhpD,YAAAA,GACEY,MAAAunD,EAAkB,CAAE8B,aAAc9B,EADZl+B,yBAIxBJ,SACEvtB,KAAAquD,UAAAwB,UADO,qCAEP,MAAM2C,EAAUxyD,KAFTmpB,kBAGD9d,EAAOrL,KAHNqL,KAIDye,EAAKze,EAJJye,GAKD9a,EAAQwjD,EAAAA,SAAAA,EAAqB,CACjCxjD,MAAO3D,EAAAA,aAAoBA,EADfmnD,cALPxjD,MASD4iD,EAAU7uD,SAAAA,cATT,SAUP6uD,EAAAA,SAAmBvmD,EAVZ8oD,SAWPvC,EAAAA,KAXO,QAYPA,EAAAA,KAAevmD,EAZR+oD,UAaPplD,GACE4iD,EAAAA,aAAAA,WADS,GAGXA,EAAAA,aAAAA,KAhBO9nC,GAkBP8nC,EAAAA,iBAAAA,UAAmC,SAAAj/B,GACjC,MAAMvyB,OAAAA,GAD4CuyB,EAElD,IAAA,MAAAoiC,KAAoBhyD,SAAAA,kBAA2B3C,EAA/C0E,MACMiwD,IAAJ30D,GACEoyD,EAAAA,SAAiBuC,EAAAA,aAAjBvC,MAA2C,CAAExjD,OADzB,IAIxBwjD,EAAAA,SAAAA,EAAqB,CAAExjD,MAAO5O,EAPoB6xD,aAUpD,GAAIjyD,KAAAkuD,iBAAwBluD,KAA5BwrB,aAA+C,CAC7C,MAAMwpC,EAAiB3pD,EADsB4pD,YAE7CrD,EAAAA,iBAAAA,qBAA8Cj/B,IAC5C,MAAMu+B,OAAAA,GAD+Cv+B,EAE/Co9B,EAAU,CACd/gD,QACE,MAAMijD,EAAU+C,IAAmB9D,EAD7BliD,MAEN,IAAA,MAAA+lD,KAAoBhyD,SAAAA,kBAA2B4vB,EAAAA,OAA/C7tB,MAAmE,CACjE,MAAMowD,EAAUH,EAAAA,aADiD,MAEjEA,EAAAA,QAAgBG,IAAAA,GAFiDjD,EAGjEO,EAAAA,SAAAA,EAA0B,CAAExjD,MAAO+lD,EAH8B9C,YAMrEkB,QACElhC,YAAW,IAAMU,EAAAA,OAAAA,MAAmB,CAAEygC,eAAtCnhC,KADM,IAGRqhC,SACE3gC,EAAAA,OAAAA,MAAAA,WAAgCu+B,EAAAA,OAAAA,SADzB,UAIPsB,EAAAA,SAAAA,EAAqB,CAAEc,OAAQpC,EAJxBoC,UAMTC,WACE5gC,EAAAA,OAAAA,UAAyBu+B,EADhBqC,WAIbxqD,OAAAA,KAAAA,GAAAA,QACUjE,GAAQA,KADlBiE,IAAAA,SAEWjE,GAAQirD,EA1BkCjrD,OA2BrD9E,KAAAoyD,UA3BqDz/B,MA8BvD3yB,KAAAkyD,mBAAAN,EAEE,CACE,CAAA,SAAA,YACA,CAAA,SAAA,UACA,CAAA,QAAA,SACA,CAAA,OAAA,QACA,CAAA,YAAA,cACA,CAAA,aAAA,eACA,CAAA,aAAA,cACA,CAAA,UAAA,cAEFj/B,GAASA,EAAAA,OA5CkCs/B,UAgD/CjyD,KAAAquD,UAAAhrD,YA5EOuuD,GA6EP,OAAO5xD,KA7EAquD,WAiFX,MAAA7B,0CAAAR,sBACEz+B,SAIE,MAAM8gC,EAAY/pD,MAJXipB,SAKP8gC,EAAAA,UALO,oCAOHruD,KAAAqL,KAAJimD,kBACEjD,EAAAA,MAAkBruD,KAAAqL,KADWimD,iBAI/B,OAXOjD,GAeX,MAAA5B,sCAAAC,wBACEhpD,YAAAA,GACEY,MAAAunD,EAAkB,CAAE8B,aAAc9B,EADZl+B,yBAIxBJ,SACEvtB,KAAAquD,UAAAwB,UADO,yBAEP,MAAM2C,EAAUxyD,KAFTmpB,kBAGDW,EAAK9pB,KAAAqL,KAHJye,GAYP0oC,EAAAA,SAAAA,EAAqB,CACnBxjD,MACEhP,KAAAqL,KAAAknD,WAAA7wD,OAAA,EAAkC1B,KAAAqL,KAAAknD,WAAlC,QAdGxkD,IAiBP,MAAMonD,EAAgBpyD,SAAAA,cAjBf,UAkBPoyD,EAAAA,SAAyBn1D,KAAAqL,KAlBlB8oD,SAmBPgB,EAAAA,KAAqBn1D,KAAAqL,KAnBd+oD,UAoBPe,EAAAA,aAAAA,KApBOrrC,GAsBP,IAAK9pB,KAAAqL,KAAL+pD,MAAsB,CAEpBD,EAAAA,KAAqBn1D,KAAAqL,KAAAgqD,QAFD3zD,OAGhB1B,KAAAqL,KAAJiqD,cACEH,EAAAA,UADyB,GAM7B,IAAA,MAAAI,KAAqBv1D,KAAAqL,KAArBgqD,QAAwC,CACtC,MAAMG,EAAgBzyD,SAAAA,cADgB,UAEtCyyD,EAAAA,YAA4BD,EAFUE,aAGtCD,EAAAA,MAAsBD,EAHgBV,YAIlC70D,KAAAqL,KAAAknD,WAAAmD,SAA8BH,EAAlCV,cACEW,EAAAA,aAAAA,YADqD,GAGvDL,EAAAA,YAPsCK,GAUxC,MAAM11B,SAAW,CAAAnN,EAAAgjC,KACf,MAAM7wD,EAAO6wD,EAAAA,QADuB,cAE9BN,EAAU1iC,EAAAA,OAFoB0iC,QAGpC,OAAK1iC,EAAAA,OAALijC,SAKOj1C,MAAAA,UAAAA,OAAAA,KAAAA,GACU40C,GAAUA,EADpB50C,WAAAA,KAEA40C,GAAUA,EAVmBzwD,MAI3BuwD,IAAAA,EAAAA,cAAAA,KAEHA,EAAQA,EAARA,eAHsBvwD,IAUxB+wD,SAAWljC,IACf,MAAM0iC,EAAU1iC,EAAAA,OADQ0iC,QAExB,OAAO10C,MAAA/W,UAAAiF,IAAAinD,KAAAT,GAAkCE,IAChC,CAAEE,aAAcF,EAAhB7kC,YAAoCmkC,YAAaU,EAAjDvmD,WAIX,GAAIhP,KAAAkuD,iBAAwBluD,KAA5BwrB,aAA+C,CAC7C2pC,EAAAA,iBAAAA,qBAAoDxiC,IAClD,MAAMu+B,OAAAA,GADqDv+B,EAErDo9B,EAAU,CACd/gD,QACE,MAAMqmD,EAAUF,EADVE,QAEArmD,EAAQkiD,EAFRliD,MAGA2iB,EAAS,IAAAlC,IAAQ9O,MAAAA,QAAAA,GAAAA,EAA+B,CAHhD3R,IAIN2R,MAAAA,UAAAA,QAAAA,KAAAA,GAAsC40C,IACpCA,EAAAA,SAAkB5jC,EAAAA,IAAW4jC,EADiBvmD,UAGhDwjD,EAAAA,SAAAA,EAAqB,CACnBxjD,MAAO8wB,SAAAA,GARH,MAWRi2B,oBACEZ,EAAAA,UADkB,GAGpBlyD,SACE,MAAMoyD,EAAUF,EADTE,QAED9E,EAAQW,EAFPjuD,OAGPoyD,EAAAA,GAAAA,UAHO,EAIPF,EAAAA,OAJO5E,GAKP,GAAI8E,EAAAA,OAAJ,EAAwB,EAKtB,IAJU10C,MAAAA,UAAAA,UAAAA,KAAAA,GAER40C,GAAUA,EAHUS,aAMpBX,EAAAA,GAAAA,UADY,GAIhB7C,EAAAA,SAAAA,EAAqB,CACnBxjD,MAAO8wB,SAAAA,GADY,GAEnB/O,MAAO8kC,SAFYljC,MAKvBlB,QACE,KAAA,IAAO0jC,EAAAA,QACLA,EAAAA,OADiC,GAGnC3C,EAAAA,SAAAA,EAAqB,CAAExjD,MAAF,KAAe+hB,MAAf,MAEvB4M,SACE,MAAM4yB,MAAAA,EAAAkF,aAAAA,EAAAZ,YAAAA,GAAuC3D,EADtCvzB,OAED63B,EAAgBzyD,SAAAA,cAFf,UAGPyyD,EAAAA,YAHOC,EAIPD,EAAAA,MAJOX,EAKPM,EAAAA,aAAAA,EAEEA,EAAAA,SAPK5E,IASPiC,EAAAA,SAAAA,EAAqB,CACnBxjD,MAAO8wB,SAAAA,GADY,GAEnB/O,MAAO8kC,SAFYljC,MAKvB5B,QACE,MAAMA,MAAAA,GADAmgC,EAEN,KAAA,IAAOiE,EAAAA,QACLA,EAAAA,OADiC,GAGnC,IAAA,MAAA7pD,KAAAylB,EAA0B,CACxB,MAAM0kC,aAAAA,EAAAZ,YAAAA,GADkBvpD,EAElBkqD,EAAgBzyD,SAAAA,cAFE,UAGxByyD,EAAAA,YAHwBC,EAIxBD,EAAAA,MAJwBX,EAKxBM,EAAAA,YALwBK,GAOtBL,EAAAA,QAAAA,OAAJ,IACEA,EAAAA,QAAAA,GAAAA,UADoC,GAGtC3C,EAAAA,SAAAA,EAAqB,CACnBxjD,MAAO8wB,SAAAA,GADY,GAEnB/O,MAAO8kC,SAFYljC,MAKvBsjC,UACE,MAAMA,EAAU,IAAAxmC,IAAQyhC,EADhB+E,SAEFZ,EAAU1iC,EAAAA,OAFR0iC,QAGR10C,MAAAA,UAAAA,QAAAA,KAAAA,GAAsC,CAAA40C,EAAA3sD,KACpC2sD,EAAAA,SAAkBU,EAAAA,IADiCrtD,MAGrD4pD,EAAAA,SAAAA,EAAqB,CACnBxjD,MAAO8wB,SAAAA,GAPD,MAUVqzB,QACElhC,YAAW,IAAMU,EAAAA,OAAAA,MAAmB,CAAEygC,eAAtCnhC,KADM,IAGRqhC,SACE3gC,EAAAA,OAAAA,MAAAA,WAAgCu+B,EAAAA,OAAAA,SADzB,UAIPsB,EAAAA,SAAAA,EAAqB,CAAEc,OAAQpC,EAJxBoC,UAMTC,WACE5gC,EAAAA,OAAAA,UAAyBu+B,EADhBqC,WAIbxqD,OAAAA,KAAAA,GAAAA,QACUjE,GAAQA,KADlBiE,IAAAA,SAEWjE,GAAQirD,EArGwCjrD,OAsG3D9E,KAAAoyD,UAtG2Dz/B,MAyG7DwiC,EAAAA,iBAAAA,SAAwCxiC,IACtC,MAAMkiC,EAAc/0B,SAAAA,GAD2B,GAEzC9wB,EAAQ8wB,SAAAA,GAFiC,GAG/C0yB,EAAAA,SAAAA,EAAqB,CAAExjD,MAHwB6lD,IAK/C70D,KAAA8tD,YAAAkD,UAAAC,SAAA,yBAA8D,CAC5D7sC,OAD4DpkB,KAE5DkxD,OAAQ,CAAApnC,GAAAA,EAENhlB,KAFM,YAAAkK,MAAAA,EAINknD,SAJMrB,EAKNjB,YALM,EAMND,UANM,EAONwC,SAPM,QAYZn2D,KAAAkyD,mBAAAiD,EAEE,CACE,CAAA,QAAA,SACA,CAAA,OAAA,QACA,CAAA,YAAA,cACA,CAAA,aAAA,eACA,CAAA,aAAA,cACA,CAAA,UAAA,YACA,CAAA,QAAA,YAEFxiC,GAASA,EAAAA,OAxIkCs/B,eA2I7CkD,EAAAA,iBAAAA,SAAwC,SAAAxiC,GACtC6/B,EAAAA,SAAAA,EAAqB,CAAExjD,MAAO8wB,SADyBnN,QAK3D3yB,KAAAquD,UAAAhrD,YA7MO8xD,GA8MP,OAAOn1D,KA9MAquD,WAkNX,MAAA1B,+BAAAe,kBACEhqD,YAAAA,GAEEY,MAAAunD,EAAkB,CAFI8B,gBACE9B,EAAAxgD,KAAAkkD,QAAyB1D,EAAAA,KAD3B4D,YAKxBliC,SAYEvtB,KAAAquD,UAAAwB,UAZO,kBAcP,GAXqB,CAAA,OAAA,SAAA,SAAA,WAAA,UAAA,OAWjBuG,SAAsBp2D,KAAAqL,KAA1BgrD,YACE,OAAOr2D,KADwCquD,UAIjD,MAAMiI,EAAW,wBAAwBt2D,KAAAqL,KAAxBkrD,aACXC,EAAiBx2D,KAAA2qC,MAAA8rB,iBAnBhBH,GAoBP,GAAA,IAAIE,EAAAA,OACF,OAAOx2D,KADwBquD,UAIjC,MAAMgB,EAAQ,IAAAC,aAAiB,CAC7BjB,UAAWruD,KADkBquD,UAE7Be,QAASzuC,MAAAA,KAFoB61C,GAG7B3hB,MAAO70C,KAAAqL,KAHsBwpC,MAI7B0a,MAAOvvD,KAAAqL,KAJsBkkD,MAK7BC,iBAAkBxvD,KAAAqL,KALWmkD,iBAM7BC,SAAUzvD,KAAAqL,KANmBokD,WAWzBj5B,EAAOx2B,KAnCNw2B,KAoCDpuB,EAAO9E,EAAAwE,KAAA2mD,cAAmB,CAC9BzuD,KAAAqL,KAAAqrD,WAD8B,GAE9BlgC,EAAAA,KAAAA,GAAex2B,KAAAqL,KAAAqrD,WAAflgC,GAAyCA,EAAAA,KAFX,GAG9Bx2B,KAAAqL,KAAAqrD,WAH8B,GAI9BlgC,EAAAA,KAAAA,GAAex2B,KAAAqL,KAAAqrD,WAAflgC,GAAyCA,EAAAA,KAJX,KAM1BmgC,EACJvuD,EAAAA,GAAUpI,KAAAqL,KAAAqrD,WAAVtuD,GAAoCpI,KAAAqL,KAAAqrD,WA3C/B,GA4CDE,EAAWxuD,EA5CV,GA8CPpI,KAAAquD,UAAA9hB,MAAAsqB,gBAAuC,IAAAF,QAAAC,MACvC52D,KAAAquD,UAAA9hB,MAAAmO,KAA4B,GAAAic,MAC5B32D,KAAAquD,UAAA9hB,MAAAoO,IAA2B,GAAAic,MAE3B52D,KAAAquD,UAAAhrD,YAA2BgsD,EAlDpB9hC,UAmDP,OAAOvtB,KAnDAquD,WAuDX,MAAAiB,aACE5rD,YAAAA,GACE1D,KAAAquD,UAAiBxC,EADKwC,UAEtBruD,KAAAovD,QAAevD,EAFOuD,QAGtBpvD,KAAA60C,MAAagX,EAHShX,MAItB70C,KAAAuvD,MAAa1D,EAJS0D,MAKtBvvD,KAAAwvD,iBAAwB3D,EALF2D,iBAMtBxvD,KAAAyvD,SAAgB5D,EANM4D,SAOtBzvD,KAAA0vD,YAAmB7D,EAAAA,cAPG,EAStB7rD,KAAA82D,QATsB,EAYxBvpC,SACE,MAEMgH,EAAUxxB,SAAAA,cAHT,OAIPwxB,EAAAA,UAJO,eAUPv0B,KAAA+2D,YAAmB/2D,KAAA0vD,YAAAn7B,EAA6Bv0B,KAVzCquD,UAWPruD,KAAA+2D,YAAAzD,QAXO,EAaP,MAAMjE,EAAQtsD,SAAAA,cAbP,OAcPssD,EAAAA,UAdO,QAgBP,MAAMxa,EAAQ70C,KAhBP60C,MAiBP,GAAAA,EAAW,CAET,MAAM/zB,EAnBD,IAmB2B,IAAM+zB,EAA5BmiB,IAAwCniB,EAFzC,GAGH9zB,EApBD,IAoB2B,IAAM8zB,EAA5BmiB,IAAwCniB,EAHzC,GAIH7zB,EArBD,IAqB2B,IAAM6zB,EAA5BmiB,IAAwCniB,EAJzC,GAKTwa,EAAAA,MAAAA,gBAA8BvnD,EAAAA,KAAAA,aAAAA,EAAkBgZ,EAAlBhZ,EAAyBiZ,EAL9C,EAKqDC,GAGhE,MAAMuuC,EAAQxsD,SAAAA,cAzBP,MA0BPwsD,EAAAA,YAAoBvvD,KA1BbuvD,MA2BPF,EAAAA,YA3BOE,GAgCP,MAAM0H,EAAahtD,EAAAA,cAAAA,aAA2BjK,KAhCvCwvD,kBAiCP,GAAAyH,EAAgB,CACd,MAAMzH,EAAmBzsD,SAAAA,cADX,QAEdysD,EAAAA,YAFc,qBAGdA,EAAAA,QAAAA,OAHc,yBAIdA,EAAAA,QAAAA,SAAoC6B,KAAA6F,UAAe,CACjD7pD,KAAM4pD,EAD2CE,qBAEjDluD,KAAMguD,EAF2CG,uBAInD/H,EAAAA,YARcG,GAWhB,MAAMC,EAAWzvD,KAAAq3D,gBAAqBr3D,KA5C/ByvD,UA6CPJ,EAAAA,YA7COI,GA+CF9uC,MAAAA,QAAc3gB,KAAnBovD,WACEpvD,KAAAovD,QAAe,CAACpvD,KADgBovD,UAKlCpvD,KAAAovD,QAAA74B,SAAqBq7B,IACnBA,EAAAA,iBAAAA,QAAkC5xD,KAAAs3D,QAAA7hC,KADJz1B,OAE9B4xD,EAAAA,iBAAAA,YAAsC5xD,KAAAu3D,MAAA9hC,KAAAz1B,MAFR,IAG9B4xD,EAAAA,iBAAAA,WAAqC5xD,KAAAw3D,MAAA/hC,KAAAz1B,MAHP,OAKhCqvD,EAAAA,iBAAAA,QAAgCrvD,KAAAw3D,MAAA/hC,KAAAz1B,MAzDzB,IA2DPu0B,EAAAA,YA3DO86B,GA4DP,OA5DO96B,EAuET8iC,gBAAAA,GACE,MAAMl2C,EAAIpe,SAAAA,cADc,KAElB00D,EAAQhI,EAAAA,MAFU,gBAGxB,IAAK,IAAI7mD,EAAJ,EAAWD,EAAK8uD,EAArB/1D,OAAmCkH,EAAnCD,IAAAC,EAAgD,CAC9C,MAAM8uD,EAAOD,EADiC7uD,GAE9CuY,EAAAA,YAAcpe,SAAAA,eAFgC20D,IAG1C9uD,EAAID,EAAR,GACEwY,EAAAA,YAAcpe,SAAAA,cADA,OAIlB,OAVwBoe,EAmB1Bm2C,UACMt3D,KAAJ82D,OACE92D,KAAAw3D,OADe,GAGfx3D,KAAAu3D,OADK,GAYTA,MAAMI,GAANJ,GACEI,IACE33D,KAAA82D,QADO,GAGT,GAAI92D,KAAA+2D,YAAJzD,OAA6B,CAC3BtzD,KAAA+2D,YAAAzD,QAD2B,EAE3BtzD,KAAAquD,UAAA9hB,MAAAqrB,QAF2B,GAa/BJ,MAAMK,GAANL,GACEK,IACE73D,KAAA82D,QADS,GAGX,IAAK92D,KAAA+2D,YAADzD,SAA6BtzD,KAAjC82D,OAA8C,CAC5C92D,KAAA+2D,YAAAzD,QAD4C,EAE5CtzD,KAAAquD,UAAA9hB,MAAAqrB,QAF4C,IAOlD,MAAAhL,kCAAAc,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAGpBrgC,SACEvtB,KAAAquD,UAAAwB,UADO,qBAGF7vD,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAGzB,OAAOrL,KANAquD,WAUX,MAAAxB,8BAAAa,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAGpBrgC,SACEvtB,KAAAquD,UAAAwB,UADO,iBAMP,MAAMxkD,EAAOrL,KANNqL,KAODrH,EAAQqH,EAAAA,KAAAA,GAAeA,EAAAA,KAPtB,GAQDpH,EAASoH,EAAAA,KAAAA,GAAeA,EAAAA,KARvB,GASD5E,EAAMzG,KAAAiuD,WAAArqD,OAAAI,EATLC,GAaDyzD,EAAO13D,KAAAiuD,WAAAzpD,cAbN,YAcPkzD,EAAAA,aAAAA,KAAwBrsD,EAAAA,KAAAA,GAAeA,EAAAA,gBAdhC,IAePqsD,EAAAA,aAAAA,KAAwBrsD,EAAAA,KAAAA,GAAeA,EAAAA,gBAfhC,IAgBPqsD,EAAAA,aAAAA,KAAwBrsD,EAAAA,KAAAA,GAAeA,EAAAA,gBAhBhC,IAiBPqsD,EAAAA,aAAAA,KAAwBrsD,EAAAA,KAAAA,GAAeA,EAAAA,gBAjBhC,IAoBPqsD,EAAAA,aAAAA,eAAkCrsD,EAAAA,YAAAA,OApB3B,GAqBPqsD,EAAAA,aAAAA,SArBO,eAuBPjxD,EAAAA,YAvBOixD,GAwBP13D,KAAAquD,UAAAyJ,OAxBOrxD,GA4BPzG,KAAAmvD,aAAAuI,EA5BOrsD,GA8BP,OAAOrL,KA9BAquD,WAkCX,MAAAvB,gCAAAY,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAGpBrgC,SACEvtB,KAAAquD,UAAAwB,UADO,mBAMP,MAAMxkD,EAAOrL,KANNqL,KAODrH,EAAQqH,EAAAA,KAAAA,GAAeA,EAAAA,KAPtB,GAQDpH,EAASoH,EAAAA,KAAAA,GAAeA,EAAAA,KARvB,GASD5E,EAAMzG,KAAAiuD,WAAArqD,OAAAI,EATLC,GAcD8zD,EAAc1sD,EAAAA,YAdbrH,MAeDg0D,EAASh4D,KAAAiuD,WAAAzpD,cAfR,YAgBPwzD,EAAAA,aAAAA,IAAyBD,EAhBlB,GAiBPC,EAAAA,aAAAA,IAAyBD,EAjBlB,GAkBPC,EAAAA,aAAAA,QAA6Bh0D,EAlBtB+zD,GAmBPC,EAAAA,aAAAA,SAA8B/zD,EAnBvB8zD,GAsBPC,EAAAA,aAAAA,eAAoCD,GAtB7B,GAuBPC,EAAAA,aAAAA,SAvBO,eAwBPA,EAAAA,aAAAA,OAxBO,QA0BPvxD,EAAAA,YA1BOuxD,GA2BPh4D,KAAAquD,UAAAyJ,OA3BOrxD,GA+BPzG,KAAAmvD,aAAA6I,EA/BO3sD,GAiCP,OAAOrL,KAjCAquD,WAqCX,MAAAtB,gCAAAW,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAGpBrgC,SACEvtB,KAAAquD,UAAAwB,UADO,mBAMP,MAAMxkD,EAAOrL,KANNqL,KAODrH,EAAQqH,EAAAA,KAAAA,GAAeA,EAAAA,KAPtB,GAQDpH,EAASoH,EAAAA,KAAAA,GAAeA,EAAAA,KARvB,GASD5E,EAAMzG,KAAAiuD,WAAArqD,OAAAI,EATLC,GAcD8zD,EAAc1sD,EAAAA,YAdbrH,MAeDi0D,EAASj4D,KAAAiuD,WAAAzpD,cAfR,eAgBPyzD,EAAAA,aAAAA,KAA0Bj0D,EAhBnB,GAiBPi0D,EAAAA,aAAAA,KAA0Bh0D,EAjBnB,GAkBPg0D,EAAAA,aAAAA,KAA0Bj0D,EAAAA,EAAY+zD,EAlB/B,GAmBPE,EAAAA,aAAAA,KAA0Bh0D,EAAAA,EAAa8zD,EAnBhC,GAsBPE,EAAAA,aAAAA,eAAoCF,GAtB7B,GAuBPE,EAAAA,aAAAA,SAvBO,eAwBPA,EAAAA,aAAAA,OAxBO,QA0BPxxD,EAAAA,YA1BOwxD,GA2BPj4D,KAAAquD,UAAAyJ,OA3BOrxD,GA+BPzG,KAAAmvD,aAAA8I,EA/BO5sD,GAiCP,OAAOrL,KAjCAquD,WAqCX,MAAArB,kCAAAU,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAElB5tD,KAAAk4D,mBARsB,qBAStBl4D,KAAAm4D,eATsB,eAYxB5qC,SACEvtB,KAAAquD,UAAAwB,UAA2B7vD,KADpBk4D,mBAMP,MAAM7sD,EAAOrL,KANNqL,KAODrH,EAAQqH,EAAAA,KAAAA,GAAeA,EAAAA,KAPtB,GAQDpH,EAASoH,EAAAA,KAAAA,GAAeA,EAAAA,KARvB,GASD5E,EAAMzG,KAAAiuD,WAAArqD,OAAAI,EATLC,GAeP,IAAI8zC,EAfG,GAgBP,IAAA,MAAAqgB,KAAyB/sD,EAAzBgtD,SAAwC,CACtC,MAAMrwD,EAAIowD,EAAAA,EAAe/sD,EAAAA,KADa,GAEhCpD,EAAIoD,EAAAA,KAAAA,GAAe+sD,EAFanwD,EAGtC8vC,EAAAA,KAAY/vC,EAAAA,IAH0BC,GAKxC8vC,EAASA,EAAAA,KArBF,KAuBP,MAAMugB,EAAWt4D,KAAAiuD,WAAAzpD,cAA8BxE,KAvBxCm4D,gBAwBPG,EAAAA,aAAAA,SAxBOvgB,GA2BPugB,EAAAA,aAAAA,eAAsCjtD,EAAAA,YAAAA,OA3B/B,GA4BPitD,EAAAA,aAAAA,SA5BO,eA6BPA,EAAAA,aAAAA,OA7BO,QA+BP7xD,EAAAA,YA/BO6xD,GAgCPt4D,KAAAquD,UAAAyJ,OAhCOrxD,GAoCPzG,KAAAmvD,aAAAmJ,EApCOjtD,GAsCP,OAAOrL,KAtCAquD,WA0CX,MAAAlB,iCAAAH,0BACEtpD,YAAAA,GAEEY,MAFsBunD,GAItB7rD,KAAAk4D,mBAJsB,oBAKtBl4D,KAAAm4D,eALsB,eAS1B,MAAAlL,+BAAAS,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAGpBrgC,SACEvtB,KAAAquD,UAAAwB,UADO,kBAGF7vD,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAGzB,OAAOrL,KANAquD,WAUX,MAAAnB,6BAAAQ,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAElB5tD,KAAAk4D,mBARsB,gBAYtBl4D,KAAAm4D,eAZsB,eAexB5qC,SACEvtB,KAAAquD,UAAAwB,UAA2B7vD,KADpBk4D,mBAKP,MAAM7sD,EAAOrL,KALNqL,KAMDrH,EAAQqH,EAAAA,KAAAA,GAAeA,EAAAA,KANtB,GAODpH,EAASoH,EAAAA,KAAAA,GAAeA,EAAAA,KAPvB,GAQD5E,EAAMzG,KAAAiuD,WAAArqD,OAAAI,EARLC,GAUP,IAAA,MAAAs0D,KAAsBltD,EAAtBmtD,SAAqC,CAKnC,IAAIzgB,EAL+B,GAMnC,IAAA,MAAAqgB,KAAAG,EAAkC,CAChC,MAAMvwD,EAAIowD,EAAAA,EAAe/sD,EAAAA,KADO,GAE1BpD,EAAIoD,EAAAA,KAAAA,GAAe+sD,EAFOnwD,EAGhC8vC,EAAAA,KAAY,GAAA/vC,KAAAC,KAEd8vC,EAASA,EAAAA,KAX0B,KAanC,MAAMugB,EAAWt4D,KAAAiuD,WAAAzpD,cAA8BxE,KAbZm4D,gBAcnCG,EAAAA,aAAAA,SAdmCvgB,GAiBnCugB,EAAAA,aAAAA,eAAsCjtD,EAAAA,YAAAA,OAjBH,GAkBnCitD,EAAAA,aAAAA,SAlBmC,eAmBnCA,EAAAA,aAAAA,OAnBmC,QAuBnCt4D,KAAAmvD,aAAAmJ,EAvBmCjtD,GAyBnC5E,EAAAA,YAzBmC6xD,GA4BrCt4D,KAAAquD,UAAAyJ,OAtCOrxD,GAuCP,OAAOzG,KAvCAquD,WA2CX,MAAAjB,mCAAAM,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAQpB7B,cAFgB,EAGhBC,sBAHgB,IAOpBtgC,SACOvtB,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAIzB,GAAIrL,KAAJuuD,eACE,OAAOvuD,KAAA2vD,sBADgB,uBAIzB3vD,KAAAquD,UAAAwB,UATO,sBAUP,OAAO7vD,KAVAquD,WAcX,MAAAhB,mCAAAK,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAQpB7B,cAFgB,EAGhBC,sBAHgB,IAOpBtgC,SACOvtB,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAIzB,GAAIrL,KAAJuuD,eACE,OAAOvuD,KAAA2vD,sBADgB,uBAIzB3vD,KAAAquD,UAAAwB,UATO,sBAUP,OAAO7vD,KAVAquD,WAcX,MAAAf,kCAAAI,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAQpB7B,cAFgB,EAGhBC,sBAHgB,IAOpBtgC,SACOvtB,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAIzB,GAAIrL,KAAJuuD,eACE,OAAOvuD,KAAA2vD,sBADgB,sBAIzB3vD,KAAAquD,UAAAwB,UATO,qBAUP,OAAO7vD,KAVAquD,WAcX,MAAAd,mCAAAG,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAQpB7B,cAFgB,EAGhBC,sBAHgB,IAOpBtgC,SACOvtB,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAIzB,GAAIrL,KAAJuuD,eACE,OAAOvuD,KAAA2vD,sBADgB,uBAIzB3vD,KAAAquD,UAAAwB,UATO,sBAUP,OAAO7vD,KAVAquD,WAcX,MAAAb,+BAAAE,kBACEhqD,YAAAA,GAMEY,MAAAunD,EAAkB,CAAA8B,gBAJhB9B,EAAAxgD,KAAA8lD,UACAtF,EAAAA,KADA0D,OAEA1D,EAAAA,KAJoB4D,UAMY7B,cAAhB,IAGpBrgC,SACEvtB,KAAAquD,UAAAwB,UADO,kBAGF7vD,KAAAqL,KAAL8lD,UACEnxD,KAAAmvD,aAAA,KAAwBnvD,KADDqL,MAGzB,OAAOrL,KANAquD,WAUX,MAAAZ,wCAAAC,kBACEhqD,YAAAA,GACEY,MAAAunD,EAAkB,CAAE8B,cADE,IAGtB,MAAMrrD,SAAAA,EAAAm2D,QAAAA,GAAwBz4D,KAAAqL,KAHRqtD,KAItB14D,KAAAsC,UAAgBjB,EAAAA,EAAAA,oBAJMiB,GAKtBtC,KAAAy4D,QALsBA,EAOtBz4D,KAAA8tD,YAAAkD,UAAAC,SAAA,2BAAgE,CAC9D7sC,OAD8DpkB,KAE9D8pB,IAAIxa,EAAAA,EAAAA,mBAF0DhN,GAAAA,SAAAA,EAAAm2D,QAAAA,IAQlElrC,SACEvtB,KAAAquD,UAAAwB,UADO,2BAGP,MAAMT,EAAUrsD,SAAAA,cAHT,OAIPqsD,EAAAA,MAAAA,OAAuBpvD,KAAAquD,UAAA9hB,MAJhBtoC,OAKPmrD,EAAAA,MAAAA,MAAsBpvD,KAAAquD,UAAA9hB,MALfvoC,MAMPorD,EAAAA,iBAAAA,WAAqCpvD,KAAA24D,UAAAljC,KAN9Bz1B,OAQFA,KAAAqL,KAAD8lD,WAAwBnxD,KAAAqL,KAAAkkD,QAAmBvvD,KAAAqL,KAA/CokD,UACEzvD,KAAAmvD,aAAAC,EAA2BpvD,KADuCqL,MAIpErL,KAAAquD,UAAAhrD,YAZO+rD,GAaP,OAAOpvD,KAbAquD,UAsBTsK,YACE34D,KAAA+tD,iBAAA6K,mBACE54D,KADFquD,UAEEruD,KAFFy4D,QAGEz4D,KAJQsC,6BAyBd,MAAAu2D,gBAQEh0D,cAAAgnD,GACE,MAAMiN,EAAN,GACEC,EAFsB,GAMxB,IAAA,MAAA1tD,KAAmBwgD,EAAnBmN,YACE3tD,IAGIA,EAAAA,iBAAwB0gD,EAAAA,eAA5B15C,MAIAymD,EAAAA,KARyCztD,GAKvC0tD,EAAAA,KADgD1tD,IAMhD0tD,EAAJr3D,QACEo3D,EAAAA,QAD2BC,GAI7B,IAAA,MAAA1tD,KAAAytD,EAAsC,CACpC,MAAMlH,EAAUhG,yBAAAhoD,OAAgC,CAAAyH,KAAAA,EAE9Cs/B,MAAOkhB,EAFuCztB,IAG9C5H,KAAMq1B,EAHwCr1B,KAI9C/I,SAAUo+B,EAJoCp+B,SAK9CqgC,YAAajC,EALiCiC,YAM9CC,gBAAiBlC,EAN6BkC,gBAO9CC,mBAAoBnC,EAAAA,oBAP0B,GAQ9Cl+B,wBAR8C,IAQtBk+B,EAAAA,uBACxBoC,WAAY,IATkC1rC,EAAA/b,cAU9C2iB,kBACE0iC,EAAAA,mBAAgC,IAXYnpC,EAAA0G,kBAY9C8kC,gBAAiBrC,EAZ6BqC,gBAa9C1iC,aAAcqgC,EAbgCrgC,aAc9C4iC,WAAYvC,EAAAA,YAAyB,CAAEmI,QAdO,KAgBhD,GAAIpC,EAAJjE,aAA0B,CACxB,MAAMsL,EAAWrH,EADOrkC,SAEpBliB,EAAJioD,SACE2F,EAAAA,MAAAA,WADe,UAGjB,GAAIt4C,MAAAA,QAAJs4C,GACE,IAAA,MAAAC,KAAAD,EACEpN,EAAAA,IAAAA,YADsCqN,QAIpCtH,aAAJjF,uBAGEd,EAAAA,IAAAA,QAH6CoN,GAK7CpN,EAAAA,IAAAA,YADKoN,KAefp0D,cAAAgnD,GACE,MAAMnkD,EAAY,UAAUmkD,EAAAA,SAAAA,UAAAA,KAAV,QAClB,IAAA,MAAAxgD,KAAmBwgD,EAAnBmN,YAA2C,CACzC,MAAMG,EAAWtN,EAAAA,IAAAA,iBACf,wBAAwBxgD,EAAxBye,QAEFqvC,GACEA,EAAAA,SAAiBvH,IACfA,EAAAA,MAAAA,UAD0BlqD,KAKhCmkD,EAAAA,IAAAA,QAZwB,uFC1gE5B,SAAAuN,cAAAv4C,GACE,OAAOpf,KAAAA,MAAAA,IAAWA,KAAAA,IAAAA,EAAYA,KAAAA,IAAAA,EAAZA,KAAXA,SAAAA,IAAAA,SAAAA,EADiB,uBAO1B,MAAA4wD,gBACExtD,eAAc+c,EAAA3Z,EAAAmZ,EAAd8mB,IACE,MAAO,CAAA,IAAM,EAAIzmC,KAAAA,IAAAA,EAAY,GAAAmgB,EAAU,IAAVR,EAAqB,IAArBnZ,EAAtBigC,IAGTrjC,eAAAkc,IACE,MAAO,CAAA,OAAA,EAAA,EAAA,EAAkB,EAAlBA,GAGTlc,cAAAkc,IACE,MAAO,CAAA,MAAAA,EAAAA,EAAAA,GAGTlc,eAAAkc,IACE,MAAMs4C,EAAID,cADOr4C,GAEjB,MAAO,IAAAs4C,IAAAA,IAAAA,IAGTx0D,cAAaic,EAAAC,EAAbC,IACE,MAAO,CAAA,IAAM,GAAAF,EAAU,IAAVC,EAAqB,IAA3BC,GAGTnc,iBAAgBic,EAAAC,EAAhBC,IAIE,MAAO,IAHGo4C,cADet4C,KAEfs4C,cAFer4C,KAGfq4C,cAHep4C,KAO3Bnc,gBACE,MADc,YAIhBA,iBAAgB+c,EAAA3Z,EAAAmZ,EAAhB8mB,IACE,MAAO,CAAA,MAEL,EAAIzmC,KAAAA,IAAAA,EAAYmgB,EAFXsmB,GAGL,EAAIzmC,KAAAA,IAAAA,EAAY2f,EAHX8mB,GAIL,EAAIzmC,KAAAA,IAAAA,EAAYwG,EAJXigC,IAQTrjC,iBAAAy0D,GACE,OAAOt5D,KAAAu5D,SAAcv5D,KAAAw5D,SADMF,IAI7Bz0D,iBAAgBic,EAAAC,EAAhBC,IACE,MAAMY,EAAI,EADed,EAEnBM,EAAI,EAFeL,EAGnB9Y,EAAI,EAHe+Y,EAKzB,MAAO,CAAA,OAAAY,EAAAR,EAAAnZ,EADGxG,KAAAA,IAAAA,EAAAA,EAJewG,2FC5D7B,IAAA3E,EAAAC,EAAA,GAuCA,MAAMk2D,EAAmB,SAAAC,yBACvB,MACMC,EAFmD,GAInDC,EAAc,IAJqCntC,IAMnDotC,EANmD,KA2EzD,SAAAC,WAAA51C,EAAA61C,EAAA/oC,EAAA6M,GAEE,MAAMm8B,EAAUj3D,SAAAA,cAF2B,QAGrCk3D,EAAoB,CACxBr3B,MADwB,EAExBs3B,YAFwB,EAGxBC,cAHwB,EAIxBC,kBAJwB,KAKxBC,cALwB,EAMxBC,YANwB,EAOxBC,aAPwB,EAQxBC,WARwB,EASxB3zD,MATwB,GAY1Bqd,EAAAA,UAAAA,KAf2C81C,GAgB3C,GAnFF,SAAAS,gBAAAxtD,GACE,OAAQ4sD,EAAAA,KADoB5sD,GAmFxBwtD,CAAgBV,EAApB9sD,KAA+B,CAC7BgtD,EAAAA,cAD6B,EAE7B/1C,EAAAA,mBAAAA,IAAAA,EAF6B+1C,GAAA,OAM/B,MAAMS,EAAK5yD,EAAAA,KAAAA,UAAeoc,EAAAA,UAAfpc,UAAyCiyD,EAtBTryD,WAuB3C,IAAIk7B,EAAQnhC,KAAAA,MAAWi5D,EAAXj5D,GAAkBi5D,EAvBa,IAwB3C,MAAMnuB,EAAQvb,EAAO+oC,EAxBsBY,UAyBvCpuB,EAAJgG,WACE3P,GAASnhC,KAAAA,GADS,GAGpB,MAAMm5D,EAAan5D,KAAAA,MAAWi5D,EAAXj5D,GAAkBi5D,EA5BM,IA6BrCG,EAAaD,EA5FrB,SAAAE,UAAAC,EAAAl9B,GACE,MAAMm9B,EAAepB,EAAAA,IADamB,GAElC,GAAAC,EACE,OADgBA,EAIlBn9B,EANkCllB,OAOlCklB,EAAAA,KAAW,QAAAk9B,IACX,MAAME,EAAUp9B,EAAAA,YARkB,IAWlC,IAAIq9B,EAASD,GAXqBE,sBAY9BC,EAAU35D,KAAAA,IAASw5D,GAZWI,wBAalC,GAAAH,EAAY,CACVr9B,EADUjlB,UAEV,MAAM0iD,EAAQJ,GAAUA,EAFdE,GAGVxB,EAAAA,IAAAA,EAHU0B,GAIV,OAJUA,EAWZz9B,EAAAA,YAxBkC,MAyBlCA,EAAAA,UAAAA,EAAAA,EAAAA,EAzBkC87B,GA0BlC97B,EAAAA,WAAAA,IAAAA,EA1BkC,GA2BlC,IAAI09B,EAAS19B,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,GA3BqBxyB,KA6BlC+vD,EA7BkC,EA8BlC,IAAK,IAAIxyD,EAAI2yD,EAAAA,OAAAA,EAAb,EAAoC3yD,GAApC,EAA4CA,GAA5C,EACE,GAAI2yD,EAAAA,GAAJ,EAAmB,CACjBH,EAAU35D,KAAAA,KAAUmH,EAAAA,EADH+wD,GAAA,MASrB97B,EAAAA,UAAAA,EAAAA,EAAAA,EAxCkC87B,GAyClC97B,EAAAA,WAAAA,IAAAA,EAzCkC87B,GA0ClC4B,EAAS19B,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,GA1CyBxyB,KA2ClC6vD,EA3CkC,EA4ClC,IAAK,IAAItyD,EAAJ,EAAWD,EAAK4yD,EAArB75D,OAAoCkH,EAApCD,EAA4CC,GAA5C,EACE,GAAI2yD,EAAAA,GAAJ,EAAmB,CACjBL,EAASvB,EAAoBl4D,KAAAA,MAAWmH,EAAAA,EADvB+wD,GAAA,MAMrB97B,EAnDkCjlB,UAqDlC,GAAAsiD,EAAY,CACV,MAAMI,EAAQJ,GAAUA,EADdE,GAEVxB,EAAAA,IAAAA,EAFU0B,GAGV,OAHUA,EAMZ1B,EAAAA,IAAAA,EAvEuD,IAwEvD,MAxEuD,GAwGvBkB,CAAUvuB,EAAVuuB,WA7BWj9B,GA+B3C,IAAA6c,EA/B2CC,EAgC3C,GAAA,IAAI/X,EAAa,CACf8X,EAAOggB,EADQ,GAEf/f,EAAM+f,EAAAA,GAFSG,MAGV,CACLngB,EAAOggB,EAAAA,GAAQG,EAAap5D,KAAAA,IADvBmhC,GAEL+X,EAAM+f,EAAAA,GAAQG,EAAap5D,KAAAA,IAFtBmhC,GAMPo3B,EAAAA,MAAAA,KAAqB,GAAAtf,MACrBsf,EAAAA,MAAAA,IAAoB,GAAArf,MACpBqf,EAAAA,MAAAA,SAAyB,GAAAY,MACzBZ,EAAAA,MAAAA,WAA2BztB,EA5CgBwuB,WA8C3Cf,EAAAA,YAAsBD,EA9CqB9sD,IAgD3C+sD,EAAAA,IAAcD,EAhD6ByB,IAoDvCt3C,EAAJu3C,wBACEzB,EAAAA,QAAAA,SAA2BD,EADGY,UAGhC,IAAI/3B,IACFq3B,EAAAA,MAA0Br3B,GAAS,IAAMnhC,KAD1BuU,KAMjB,IAAI0lD,GA7DuC,EA8D3C,GAAI3B,EAAAA,IAAAA,OAAJ,EACE2B,GADuB,OAElB,GAAI3B,EAAAA,UAAAA,KAAsBA,EAAAA,UAA1B,GAA6C,CAClD,MAAM4B,EAAYl6D,KAAAA,IAASs4D,EAAAA,UAA3B,IACE6B,EAAYn6D,KAAAA,IAASs4D,EAAAA,UAF2B,IAMhD4B,IAAAA,GACAl6D,KAAAA,IAAAA,EAAAA,GAAiCA,KAAAA,IAAAA,EAAjCA,GAFF,MAIEi6D,GADA,GAIJA,IACMnvB,EAAJgG,SACE0nB,EAAAA,YAAgCF,EAAAA,OAAc71C,EAAAA,UAD5Brd,MAGlBozD,EAAAA,YAAgCF,EAAAA,MAAa71C,EAAAA,UADxCrd,OAITqd,EAAAA,mBAAAA,IAAAA,EAnF2C+1C,GAoFvC/1C,EAAJ23C,oBACE33C,EAAAA,YAD2B81C,GAI7B,GAAI91C,EAAJ43C,sBAAgC,CAC9B,IAAIC,EAAJ,EACEC,EAF4B,EAG9B,GAAA,IAAIp5B,EAAa,CACfm5B,EAAWt6D,KAAAA,IADImhC,GAEfo5B,EAAWv6D,KAAAA,IAFImhC,GAIjB,MAAMq5B,GACH1vB,EAAAgG,SAAiBwnB,EAAjB91D,OAA+B81D,EAAhC/1D,OAA8CkgB,EAAAA,UARlBrd,MASxBq1D,EATwBtB,EAW9B,IAAAx5C,EAX8BJ,EAY9B,GAAA,IAAI4hB,EAAa,CACfxhB,EAAI,CAAA26C,EAAAC,GAAAA,EAAAD,EAAArhB,EAAAC,GACJ35B,EAAI1d,EAAAwE,KAAAq0D,2BAAgC,CAAA,EAAA,EAAAF,EAAAC,GAFrB96C,QAIfJ,EAAI,CAAA05B,EAAAC,EAAYD,EAAZuhB,EAA6BthB,EAA7BuhB,GAGNh4C,EAAAA,QAAAA,KAAkB,CAChBw2B,KAAM15B,EADU,GAEhB25B,IAAK35B,EAFW,GAGhBo7C,MAAOp7C,EAHS,GAIhBq7C,OAAQr7C,EAJQ,GAKhBod,IALgB47B,EAMhBvpC,KAAM,CAAAwrC,EAAAC,GANU96C,EAAAA,KAYtB,SAAAmM,OAAArJ,GACE,GAAIA,EAAJo4C,UAAoB,OAGpB,MAAMC,EAAWr4C,EAJGs4C,UAKd9vD,EAAawX,EALCqD,YAMdk1C,EAAiBF,EANH76D,OAUpB,GAAI+6D,EA5MmD,IA4MvD,CACEv4C,EAAAA,gBAD4C,EAE5CxX,EAF4C9J,cAA9C,CAMA,IAAKshB,EAAL23C,mBACE,IAAK,IAAIjzD,EAAT,EAAgBA,EAAhB6zD,EAAoC7zD,IAClCsb,EAAAA,YAAiBq4C,EADsB3zD,IAK3Csb,EAAAA,gBAtBoB,EAuBpBxX,EAvBoB9J,WA0BtB,SAAA85D,gBAAAC,EAAAn/B,EAAA2a,GACE,IAAI71B,EADsC,EAE1C,IAAK,IAAI1Z,EAAT,EAAgBA,EAAhBuvC,EAA2BvvC,IAAK,CAC9B,MAAMg0D,EAAID,EAAGn/B,KACTo/B,EAAJ,IACEt6C,EAASA,EAAS7gB,KAAAA,IAAAA,EAAT6gB,GADAs6C,GAIb,OAR0Ct6C,EAW5C,SAAAu6C,OAAA34C,GACE,MAAM2yB,EAAS3yB,EADK44C,QAEdrvC,EAAWvJ,EAFG64C,UAIdC,EAuDR,SAAAC,aAAAj5D,EAAAC,EAAAi5D,GACE,MAAMrmB,EAASqmB,EAAAruD,KAAU,SAAAsuD,EAAAv0D,GACvB,MAAO,CACLqtC,GAAIknB,EADCziB,KAELxE,GAAIinB,EAFCxiB,IAGL4C,GAAI4f,EAHCf,MAIL5e,GAAI2f,EAJCd,OAKL9L,MALK3nD,EAMLw0D,WANKrvD,EAOLsvD,WAPKtvD,MAUTuvD,gBAAAA,EAZ0CzmB,GAa1C,MAAMmmB,EAAW,IAAAr8C,MAAUu8C,EAbex7D,QAc1Cm1C,EAAAA,SAAe,SAAA71B,GACb,MAAMpY,EAAIoY,EADgBuvC,MAE1ByM,EAAAA,GAAc,CACZtiB,KAAM15B,EADMo8C,MAEZziB,IAFY,EAGZyhB,MAAOp7C,EAHKq8C,MAIZhB,OAJY,MAUhBa,EAAAA,KAAU,SAAAC,EAAAv0D,GACR,MAAM8F,EAAIsuD,EAAVp0D,GACEoY,EAAI61B,EAFoBjuC,GAG1BoY,EAAAA,GAAOm8C,EAHmBxiB,IAI1B35B,EAAAA,GAAOhd,EAAQ0K,EAJW0tD,MAK1Bp7C,EAAAA,GAAOm8C,EALmBd,OAM1Br7C,EAAAA,GAAOhd,EAAQ0K,EANWgsC,KAO1B15B,EAAAA,MAP0BpY,EAQ1BoY,EAAAA,WAR0BjT,EAS1BiT,EAAAA,WAT0BjT,KAW5BuvD,gBAAAA,EArC0CzmB,GAuC1CA,EAAAA,SAAe,SAAA71B,GACb,MAAMpY,EAAIoY,EADgBuvC,MAE1ByM,EAAAA,GAAAA,IAAkBh8C,EAFQo8C,MAG1BJ,EAAAA,GAAAA,OAAqBh8C,EAHKq8C,SAK5B,OA5C0CL,EAvDzBC,CAAaxvC,EAAbwvC,MAA6BxvC,EAA7BwvC,OAJGpmB,GAKpB,IAAK,IAAIjuC,EAAT,EAAgBA,EAAIo0D,EAApBt7D,OAAqCkH,IAAK,CACxC,MAAMw1B,EAAMyY,EAAAA,GAD4BzY,IAElCm/B,EAAgBr5C,EAAAA,mBAAAA,IAFkBka,GAGxC,GAAA,IAAIm/B,EAAAA,MAA2B,CAC7BA,EAAAA,YAA4B1mB,EAAAA,GAAAA,KAAiBmmB,EAAAA,GADhBtiB,KAE7B6iB,EAAAA,WAA2B1mB,EAAAA,GAAAA,IAAgBmmB,EAAAA,GAFdriB,IAG7B4iB,EAAAA,aAA6BP,EAAAA,GAAAA,MAAoBnmB,EAAAA,GAHpBulB,MAI7BmB,EAAAA,cAA8BP,EAAAA,GAAAA,OAAqBnmB,EAAAA,GAJtBwlB,OAK7Bn4C,EAAAA,mBAAAA,IAAAA,EAL6Bq5C,GAAA,SAU/B,MAAM7uD,EAAIsuD,EAAVp0D,GACEoY,EAAI61B,EAdkCjuC,GAelCwY,EAAIJ,EAAVI,EACEQ,EAAIR,EADN,GAEEsc,EAAItc,EAjBkC,GAmBlC22B,EAAS,CAAC,CAAA,EAAA,GAAQ,CAAA,EAAI/2B,EAAAA,KAAJ,IAAgB,CAACA,EAAAA,KAAD,GAAA,GAAgBA,EAAzCyP,MACTksC,EAAK,IAAAa,aApB6B,IAqBxCzlB,EAAAA,SAAe,SAAA52B,EAAAgmB,GACb,MAAMy1B,EAAI90D,EAAAA,KAAAA,eAAAA,EADmBsZ,GAE7Bu7C,EAAGx1B,EAAHw1B,GAAY/6C,IAAMlT,EAAAgsC,KAASkiB,EAAV,IAFYh7C,EAG7B+6C,EAAGx1B,EAAHw1B,GAAYj/B,IAAMhvB,EAAAisC,IAAQiiB,EAAT,IAHYl/B,EAI7Bi/B,EAAGx1B,EAAHw1B,GAAY/6C,IAAMlT,EAAA0tD,MAAUQ,EAAX,IAJYh7C,EAK7B+6C,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAA2tD,OAAWO,EAAZ,IALWl/B,EAO7Bi/B,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAAgsC,KAASkiB,EAAV,KAPWl/B,EAQ7Bi/B,EAAGx1B,EAAHw1B,IAAa/6C,IAAMlT,EAAAisC,IAAQiiB,EAAT,IARWh7C,EAS7B+6C,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAA0tD,MAAUQ,EAAX,KATWl/B,EAU7Bi/B,EAAGx1B,EAAHw1B,IAAa/6C,IAAMlT,EAAA2tD,OAAWO,EAAZ,IAVWh7C,EAY7B+6C,EAAGx1B,EAAHw1B,IAAa/6C,IAAMlT,EAAAgsC,KAASkiB,EAAV,KAZWh7C,EAa7B+6C,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAAisC,IAAQiiB,EAAT,KAbWl/B,EAc7Bi/B,EAAGx1B,EAAHw1B,IAAa/6C,IAAMlT,EAAA0tD,MAAUQ,EAAX,KAdWh7C,EAe7B+6C,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAA2tD,OAAWO,EAAZ,KAfWl/B,EAiB7Bi/B,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAAgsC,KAASkiB,EAAV,IAjBWl/B,EAkB7Bi/B,EAAGx1B,EAAHw1B,IAAa/6C,IAAMlT,EAAAisC,IAAQiiB,EAAT,KAlBWh7C,EAmB7B+6C,EAAGx1B,EAAHw1B,IAAaj/B,IAAMhvB,EAAA0tD,MAAUQ,EAAX,IAnBWl/B,EAoB7Bi/B,EAAGx1B,EAAHw1B,IAAa/6C,IAAMlT,EAAA2tD,OAAWO,EAAZ,KApBWh7C,KAwB/B,MAAM67C,EAAW,EAAIh8D,KAAAA,IAASA,KAAAA,IAATA,GAAsBA,KAAAA,IA7CHi8B,IA8CxC6/B,EAAAA,YAA4Bb,gBAAAA,EAAAA,GAAAA,IA9CYe,EA+CxCF,EAAAA,WAA2Bb,gBAAAA,EAAAA,GAAAA,IA/Cae,EAgDxCF,EAAAA,aAA6Bb,gBAAAA,EAAAA,EAAAA,IAhDWe,EAiDxCF,EAAAA,cAA8Bb,gBAAAA,EAAAA,GAAAA,IAjDUe,EAkDxCv5C,EAAAA,mBAAAA,IAAAA,EAlDwCq5C,IAqG5C,SAAAD,gBAAAt5D,EAAA6yC,GAEEA,EAAAA,MAAY,SAAAl1B,EAAAX,GACV,OAAOW,EAAAA,GAAOX,EAAPW,IAAeA,EAAAA,MAAUX,EADNuvC,SAK5B,MASMmN,EAAU,CACd,CACEp0D,OADFq0D,EAAAA,EAEEn8D,IAFFm8D,EAAAA,EAGEC,SAbiB,CACnB3nB,IADmB0nB,EAAAA,EAEnBznB,IAFmBynB,EAAAA,EAGnBpgB,GAHmB,EAInBC,GAJmBmgB,EAAAA,EAKnBpN,OALmB,EAMnB6M,MANmB,EAOnBC,MAPmB,KAiBrBxmB,EAAAA,SAAe,SAAA+mB,GAGb,IAAIh1D,EAH6B,EAIjC,KAAOA,EAAI80D,EAAJ90D,QAAsB80D,EAAAA,GAAAA,KAAkBE,EAA/C1nB,IACEttC,IAEF,IAKAi1D,EAZiCC,EAO7B32B,EAAIu2B,EAAAA,OAPyB,EAQjC,KAAOv2B,GAAAA,GAAUu2B,EAAAA,GAAAA,OAAoBE,EAArCpgB,IACErW,IAIF,IAAAoY,EAAArX,EAEE61B,GAf+BJ,EAAAA,EAgBjC,IAAKpe,EAAL32C,EAAY22C,GAAZpY,EAAoBoY,IAAK,CACvBse,EAAcH,EADSne,GAEvBue,EAAmBD,EAFID,SAGvB,IAHuBI,EAQrBA,EAJEF,EAAAA,GAAsBF,EAA1B3nB,GAKI6nB,EAAAA,MAAyBF,EAAzBE,MACIA,EADJA,MAEIF,EAP+B3nB,QAQhCloC,IAAI+vD,EAAAA,OAGDA,EAAAvgB,GAAsBqgB,EAAvB3nB,IAHwC,EAMxC6nB,EAFFT,MAIHW,EAAJD,IACEA,EADkBC,GAMtBJ,EAAAA,MA1CiCG,EA6CjC,IAAKxe,EAAL32C,EAAY22C,GAAZpY,EAAoBoY,IAAK,CACvBse,EAAcH,EADSne,GAEvBue,EAAmBD,EAFID,cAGvB7vD,IAAI+vD,EAAAA,MAEEA,EAAAA,GAAsBF,EAA1B3nB,GAGM6nB,EAAAA,MAAyBF,EAA7BrN,QACEuN,EAAAA,MAAyBA,EADkBvgB,IAI7CugB,EAAAA,MADKC,EAGED,EAAAA,MAAJC,IAELD,EAAAA,MAAyBr8D,KAAAA,IAAAA,EAAkBq8D,EAFAvgB,KAO/C,MAAM0gB,EAlE2B,GAmEjC,IAAIC,EAnE6B,KAoEjC,IAAK3e,EAAL32C,EAAY22C,GAAZpY,EAAoBoY,IAAK,CACvBse,EAAcH,EADSne,GAEvBue,EAAmBD,EAFID,SAIvB,MAAMO,EACJL,EAAAA,GAAsBF,EAAtBE,GAAAA,EALqBF,EAMvB,GAAIM,IAAJC,EAEEF,EAAeA,EAAAA,OAAfA,GAAAA,IAAgDJ,EAFhBr8D,QAG3B,CACLy8D,EAAAA,KAAoB,CAClB30D,MAAOu0D,EADWv0D,MAElB9H,IAAKq8D,EAFar8D,IAGlBo8D,SAHkBO,IAKpBD,EANKC,GAST,GAAIT,EAAAA,GAAAA,MAAmBE,EAAvB1nB,GAAoC,CAClC+nB,EAAAA,GAAAA,MAA0BL,EADQ1nB,GAElC+nB,EAAAA,QAAuB,CACrB30D,MAAOo0D,EAAAA,GADcp0D,MAErB9H,IAAKo8D,EAFgB1nB,GAGrB0nB,SAAUF,EAAAA,GAHWE,WAMzB,GAAIA,EAAAA,GAAcF,EAAAA,GAAlBl8D,IAAkC,CAChCy8D,EAAeA,EAAAA,OAAfA,GAAAA,IAAgDL,EADhBpgB,GAEhCygB,EAAAA,KAAoB,CAClB30D,MAAOs0D,EADWpgB,GAElBh8C,IAAKk8D,EAAAA,GAFal8D,IAGlBo8D,SAAUF,EAAAA,GAHQE,WAUtB,IAAKre,EAAL32C,EAAY22C,GAAZpY,EAAoBoY,IAAK,CACvBse,EAAcH,EADSne,GAEvBue,EAAmBD,EAFID,SAGvB,QAAA7vD,IAAI+vD,EAAAA,MAAsC,SAG1C,IAAIM,GANmB,EAOvB,IACEl2B,EAAIt/B,EADN,GAEEw1D,GAASl2B,GAAT,GAAmBw1B,EAAAA,GAAAA,OAAoBI,EAFzC5nB,GAGEhO,IAEAk2B,EAAOV,EAAAA,GAAAA,WADPI,EAGF,IACE51B,EAAIf,EADN,GAEEi3B,GAASl2B,EAAIw1B,EAAbh8D,QAA+Bg8D,EAAAA,GAAAA,KAAkBI,EAFnDtgB,GAGEtV,IAEAk2B,EAAOV,EAAAA,GAAAA,WADPI,EAGF,IAAK51B,EAAL,GAAYk2B,GAASl2B,EAAI+1B,EAAzBv8D,OAAgDwmC,IAC9Ck2B,EAAOH,EAAAA,GAAAA,WAD4CH,EAGrDM,IACEN,EAAAA,MADSC,GAKbp9C,MAAAA,UAAAA,OAAAA,MAAAA,EAEE,CAAA/X,EAAIu+B,EAAAA,EAAJ,GAAAk3B,OAzI+BJ,OA8InCP,EAAAA,SAAgB,SAAAG,GACd,MAAMC,EAAmBD,EADYD,cAErC7vD,IAAI+vD,EAAAA,QACFA,EAAAA,MAAyBr8D,KAAAA,IAAAA,EAAgBq8D,EADDvgB,QAgB9C,SAAA+gB,qBAA6B5tC,YAAAA,EAAA6tC,kBAAAA,EAAAlQ,UAAAA,EAAA5gC,SAAAA,EAAA8uC,SAAAA,EAAAiC,oBAAAA,EAAAC,qBAA7BA,IASEz+D,KAAA0+D,aADChuC,EAED1wB,KAAA67D,mBAFC0C,EAGDv+D,KAAA2+D,WAHCtQ,EAIDruD,KAAAuE,UAAiB8pD,EAJhBjqD,cAKDpE,KAAA+8D,UALCtvC,EAMDztB,KAAAw8D,UAAiBD,GANhB,GAODv8D,KAAA4+D,qBAA4BJ,GAP3B,GAQDx+D,KAAA87D,wBARC2C,EASDz+D,KAAAy7D,wBAA+Bp3D,WAAAA,eAT9B/D,QAWDN,KAAA6+D,QAXC,KAYD7+D,KAAA8+D,wBAZC,KAaD9+D,KAAA++D,0BAbC,KAcD/+D,KAAAg/D,eAdC,KAeDh/D,KAAAi/D,mBAA0B,IAfzBvsC,QAgBD1yB,KAAAk/D,gBAhBC,EAiBDl/D,KAAAs8D,WAjBC,EAkBDt8D,KAAAunB,aAlBC,EAAAjkB,EAAAmJ,2BAmBDzM,KAAAm/D,aAnBC,KAoBDn/D,KAAA88D,QApBC,GAuBD98D,KAAAunB,YAAAM,QAAAyQ,SACW,KACP,GAAIt4B,KAAJg/D,eAAyB,CAGvBh/D,KAAAg/D,eAAAj7D,OAAAC,MAHuB,EAIvBhE,KAAAg/D,eAAAj7D,OAAAE,OAJuB,EAKvBjE,KAAAg/D,eALuB,SAF7B75D,OAUS,SAIXm5D,oBAAAA,UAAgC,CAC9Bz2C,cACE,OAAO7nB,KAAAunB,YADKM,SAId2J,OAAQ,SAAA4tC,mBACNp/D,KAAAs8D,WADkC,EAElC,GAAIt8D,KAAJ6+D,QAAkB,CAChB7+D,KAAA6+D,QAAArtC,OAAoB,IAAAluB,EAAA0c,eADJ,8BAEhBhgB,KAAA6+D,QAFgB,KAIlB,GAAA,OAAI7+D,KAAAm/D,aAA4B,CAC9B9wC,aAAaruB,KADiBm/D,cAE9Bn/D,KAAAm/D,aAF8B,KAIhCn/D,KAAAunB,YAAA1kB,OAAwB,IAAAK,MAVU,+BAapCm8D,cAAAA,EAAAA,GACE,IAAK,IAAIz2D,EAAJ,EAAW02D,EAAMvuC,EAAtBrvB,OAAoCkH,EAApC02D,EAA6C12D,IAAK,CAChD5I,KAAA4+D,qBAAAv1D,KAA+B0nB,EAAAA,GADiB9jB,KAEhD6sD,WAAAA,KAAiB/oC,EAAjB+oC,GAAAA,EAAuC95D,KAFSg/D,kBAMpDO,YAAAA,GACE,MAAMtF,EAAoBj6D,KAAAi/D,mBAAAryD,IADPotD,GAEnB,GAAIC,EAAJE,aAAoC,OAIpC,IAAIzyD,EANe,GAOnB,GAAA,IAAIuyD,EAAAA,YAAqC,CACvC,MAAMv2B,SAAAA,EAAAq3B,WAAAA,GAA2Bf,EADMztB,MAIvC,GACE7I,IAAa1jC,KAAb0jC,yBACAq3B,IAAe/6D,KAFjB++D,0BAGE,CACA/+D,KAAAg/D,eAAA/gD,KAA2B,GAAAylB,KAAAq3B,IAC3B/6D,KAAA8+D,wBAFAp7B,EAGA1jC,KAAA++D,0BAHAhE,EAMF,IACE,MAAM/2D,MAAAA,GAAYhE,KAAAg/D,eAAAQ,YAAgCxF,EADhDtpC,aAGF,GAAI1sB,EAAJ,EAAe,CACbi2D,EAAAA,MAA0BA,EAAAA,YADbj2D,EAEb0D,EAAY,UAAUuyD,EAAVpzD,UAEd,MAAA44D,KAEJ,IAAIxF,EAAAA,QACFvyD,EAAY,UAAUuyD,EAAVr3B,aAAAl7B,KAEd,GAAIA,EAAAA,OAAJ,EAA0B,CACpB1H,KAAJ87D,wBACE7B,EAAAA,kBAD8BvyD,GAGhCsyD,EAAAA,MAAAA,UAJwBtyD,EAM1B1H,KAAAi/D,mBAAA9wC,IAAA6rC,EAtCmBC,GAuCnBj6D,KAAA2+D,WAAAt7D,YAvCmB22D,IA0CrB0F,QAAS,SAAAC,iBAAAC,GACP,MAAMlzD,GADoC,EAAApJ,EAAAmJ,2BAE1C,IAAIozD,EAAa92D,OAAAA,OAFyB,MAK1C,MAAMhF,EAAS/D,KAAAuE,UAAAC,cAL2B,UAM1CT,EAAAA,OAAgBA,EAAAA,MAN0B41D,EAYxC51D,EAAAA,WAZwC,EAc1C/D,KAAAg/D,eAAsBj7D,EAAAA,WAAAA,KAAwB,CAAEwlC,OAdN,IAgB1C,GAAIvpC,KAAJ0+D,aAAuB,CACrB,MAAMoB,EAAY9/D,KAAA0+D,aADG3tC,MAEfgvC,EAAa//D,KAAA0+D,aAFE1tC,OAGrBhxB,KAAAq/D,cAAAS,EAHqBC,GAIrBrzD,EAJqB9J,cAKhB,CAAA,IAAI5C,KAAJ67D,mBAiBL,MAAM,IAAA34D,MACJ,uEAlBgC,CAClC,MAAM+tB,KAAO,KACXjxB,KAAA6+D,QAAA3nC,OAAAxxB,MAAyB,EAACsJ,MAAAA,EAADkiB,KAAAA,MACvB,GAAAA,EACExkB,EADQ9J,cAAV,CAKAmG,OAAAA,OAAAA,EAA0BiG,EANkBgiB,QAO5ChxB,KAAAq/D,cAAmBrwD,EAAnB+hB,MAP4C8uC,GAQ5C5uC,UACCvkB,EAVc7J,SAanB7C,KAAA6+D,QAAe7+D,KAAA67D,mBAdmB/qC,YAelCG,QAQFvkB,EAAAA,QAAAA,MAAwB,KACtBmzD,EAD4B,KAE5BD,EAKE5/D,KAAAm/D,aAAoBltC,YAAW,KAC7B1E,OADmCvtB,MAEnCA,KAAAm/D,aAFmC,OAFhCS,GADLryC,OAFYvtB,QAUbA,KAAAunB,YAxDuC1kB,SA2D5Cm9D,eAAgB,SAAAC,yBAAAC,GACd,IAAKlgE,KAAD87D,wBAAgC97D,KAApCk/D,eAAyD,OAGzD,GAAA,OAAIl/D,KAAA88D,QAAuB,CACzBD,OADyB78D,MAEzBA,KAAA88D,QAFyB,KAI3B,MAAMqD,EAAN,GACEC,EAT0D,GAW5D,IAAK,IAAIx3D,EAAJ,EAAWD,EAAK3I,KAAAw8D,UAArB96D,OAA4CkH,EAA5CD,EAAoDC,IAAK,CACvD,MAAMw1B,EAAMp+B,KAAAw8D,UAD2C5zD,GAEjDy3D,EAAWrgE,KAAAi/D,mBAAAryD,IAFsCwxB,GAIvD,IAAIiiC,EAAJlG,aAGA,GAAA+F,EAAgB,CACdC,EAAAA,OADc,EAEdC,EAAAA,OAFc,EAIVC,EAAJjG,mBACE+F,EAAAA,KAAkBE,EADYjG,mBAGhC,GAAIiG,EAAAA,WAAJ,EAA6B,CAC3BD,EAAAA,KAAgB,GAAGC,EAAH7F,gBAChB2F,EAAAA,KAAkB,eAAeE,EAAf7F,sBAElB4F,EAAAA,KADK,GAGHC,EAAAA,aAAJ,EACED,EAAAA,KAAmBC,EAAAA,aAAwBA,EAA3Bx5D,MAAA,MAEhBu5D,EAAAA,KADK,GAGHC,EAAAA,cAAJ,EACED,EAAAA,KAAgB,GAAGC,EAAHhG,mBAEhB+F,EAAAA,KADK,GAGP,GAAIC,EAAAA,YAAJ,EAA8B,CAC5BD,EAAAA,KAAmBC,EAAAA,YAAuBA,EAA1Bx5D,MAAA,MAChBs5D,EAAAA,KACE,eAAeE,EAAD/F,YAAwB+F,EAAtCx5D,iBAGFu5D,EAAAA,KADK,GAIPhiC,EAAAA,MAAAA,QAAoBgiC,EAAAA,KAhCN,KAiCVD,EAAJz+D,SACE08B,EAAAA,MAAAA,UAAsB+hC,EAAAA,KADC,UAGpB,CACL/hC,EAAAA,MAAAA,QADK,KAELA,EAAAA,MAAAA,UAAsBiiC,EAFjBjG,sBAuBb,OAdA,SAAAX,gBAAA6G,GACE,MAAMp8C,EAAO,IAAAo6C,oBAAwB,CACnC5tC,YAAa4vC,EADsB5vC,YAEnC6tC,kBAAmB+B,EAFgB/B,kBAGnClQ,UAAWiS,EAHwBjS,UAInC5gC,SAAU6yC,EAJyB7yC,SAKnC8uC,SAAU+D,EALyB/D,SAMnCiC,oBAAqB8B,EANc9B,oBAOnCC,qBAAsB6B,EAPa7B,uBASrCv6C,EAAAA,QAAao8C,EAV4BV,SAWzC,OAXyC17C,GAnvBpB,wGCtCzB,IAAA5gB,EAAAC,EAAA,GAhBAgf,EAAAhf,EAAA,GAiCA,IAAIg9D,YAAc,WAChB,MAAM,IAAAr9D,MADsB,2DAImC,CAC/D,MAAMs9D,EAAe,CACnBC,UADmB,SAEnBC,WAFmB,SAGnBh8B,UAHmB,WAKfi8B,EANyD,uCAOzDC,EAPyD,+BAQzDh2B,EAAkB,CAAA,OAAA,QAAA,UAClBC,EAAmB,CAAA,QAAA,QAAA,SAEnBg2B,EAAuB,WAC3B,MAAMC,EAAa,IAAA96D,WAAe,CAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAY5B+6D,EAAW,IAAA1oB,WAbsB,KAcvC,IAAK,IAAIzvC,EAAT,EAAgBA,EAAhB,IAAyBA,IAAK,CAC5B,IAAIgZ,EADwBhZ,EAE5B,IAAK,IAAI8wC,EAAT,EAAgBA,EAAhB,EAAuBA,IAEnB93B,EADF,EAAIA,EACE,WAAeA,GAAD,EADT,WAGJA,GAAD,EADC,WAITm/C,EAAAA,GAT4Bn/C,EAsB9B,SAAAo/C,cAAAt6D,EAAA43B,EAAAjzB,EAAAmyB,GACE,IAAIrc,EAD2Cqc,EAE/C,MAAM8hC,EAAMhhC,EAFmC58B,OAI/C2J,EAAAA,GAAWi0D,GAAD,GAJqC,IAK/Cj0D,EAAK8V,EAAL9V,GAAei0D,GAAD,GALiC,IAM/Cj0D,EAAK8V,EAAL9V,GAAei0D,GAAD,EANiC,IAO/Cj0D,EAAK8V,EAAL9V,GAP+C,IAOjCi0D,EACdn+C,GAR+C,EAU/C9V,EAAAA,GAV+C,IAUrC3E,EAAAA,WAAAA,GACV2E,EAAK8V,EAAL9V,GAX+C,IAWjC3E,EAAAA,WAAAA,GACd2E,EAAK8V,EAAL9V,GAZ+C,IAYjC3E,EAAAA,WAAAA,GACd2E,EAAK8V,EAAL9V,GAb+C,IAajC3E,EAAAA,WAAAA,GACdya,GAd+C,EAgB/C9V,EAAAA,IAAAA,EAhB+C8V,GAiB/CA,GAAKmd,EAjB0C58B,OAmB/C,MAAMu/D,EA7BR,SAAAC,MAAA71D,EAAA/B,EAAA9H,GACE,IAAIy/D,GAD2B,EAE/B,IAAK,IAAIr4D,EAATU,EAAoBV,EAApBpH,EAA6BoH,IAAK,CAChC,MAAM+Y,EAD0B,KACrBs/C,EAAM51D,EAAPzC,IAEVq4D,EAAOA,IAAD,EADIF,EAFsBp/C,GAKlC,OAP+B,EAOxBs/C,EAsBKC,CAAAA,EAAY1jC,EAAZ0jC,EAnBmC//C,GAoB/C9V,EAAAA,GAAW41D,GAAD,GApBqC,IAqB/C51D,EAAK8V,EAAL9V,GAAe41D,GAAD,GArBiC,IAsB/C51D,EAAK8V,EAAL9V,GAAe41D,GAAD,EAtBiC,IAuB/C51D,EAAK8V,EAAL9V,GAvB+C,IAuBjC41D,EAoBhB,SAAAE,YAAAC,GAII,OAKJ,SAAAC,wBAAAD,GACE,IAAI9B,EAAM8B,EAD+B1/D,OAEzC,MAAM4/D,EAFmC,MAInCC,EAAgB9/D,KAAAA,KAAU69D,EAJSgC,GAKnCE,EAAO,IAAAx7D,WAAe,EAAAs5D,EAAA,EAAUiC,EALG,GAMzC,IAAIE,EANqC,EAOzCD,EAAKC,KAPoC,IAQzCD,EAAKC,KARoC,IAUzC,IAAIr2D,EAVqC,EAWzC,KAAOk0D,EAAPgC,GAA6B,CAE3BE,EAAKC,KAFsB,EAG3BD,EAAKC,KAHsB,IAI3BD,EAAKC,KAJsB,IAK3BD,EAAKC,KALsB,EAM3BD,EAAKC,KANsB,EAO3BD,EAAAA,IAASJ,EAAAA,SAAAA,EAAuBh2D,EAAhCo2D,GAP2BC,GAQ3BA,GAR2BH,EAS3Bl2D,GAT2Bk2D,EAU3BhC,GAV2BgC,EAc7BE,EAAKC,KAzBoC,EA0BzCD,EAAKC,KA1BoC,IA0B5BnC,EACbkC,EAAKC,KAASnC,GAAD,EA3B4B,IA4BzCkC,EAAKC,KAAQ,KAAAnC,EACbkC,EAAKC,MAAS,OAACnC,IAAF,EA7B4B,IA8BzCkC,EAAAA,IAASJ,EAAAA,SAATI,GA9ByCC,GA+BzCA,GAAML,EAAAA,OA/BmCh2D,EAiCzC,MAAMs2D,EA3DR,SAAAC,QAAAt2D,EAAA/B,EAAA9H,GACE,IAAImgB,EAD6B,EAE7BX,EAF6B,EAGjC,IAAK,IAAIpY,EAATU,EAAoBV,EAApBpH,IAAAoH,EAAkC,CAChC+Y,GAAKA,GAAD,IAAMtW,EAAAzC,KADsB,MAEhCoY,GAAKA,EAADW,GAF4B,MAIlC,OAAQX,GAAD,GAP0BW,EA2DnBggD,CAAAA,EAAAA,EAAqBP,EAjCM1/D,QAkCzC8/D,EAAKC,KAASC,GAAD,GAlC4B,IAmCzCF,EAAKC,KAASC,GAAD,GAnC4B,IAoCzCF,EAAKC,KAASC,GAAD,EApC4B,IAqCzCF,EAAKC,KArCoC,IAqC5BC,EACb,OAtCyCF,EALhCH,CAJoBD,GAuI/B,OAAO,SAAAP,oBAAAn6B,EAAAx6B,EAAA01D,GAGL,OAxFF,SAAAC,OAAAn7B,EAAA8B,EAAAt8B,EAAA01D,GACE,MAAM59D,EAAQ0iC,EADwC1iC,MAEhDC,EAASyiC,EAFuCziC,OAGtD,IAAA69D,EAAAC,EAHsD9pB,EAItD,MAAMvsC,EAAQg7B,EAJwCr7B,KAMtD,OAAAm9B,GACE,KAAKd,EAAAA,UAALv2B,eACE4wD,EADF,EAEED,EAFF,EAGE7pB,EAAYj0C,EAAD,GAHb,EADF,MAME,KAAK0jC,EAAAA,UAALt2B,UACE2wD,EADF,EAEED,EAFF,EAGE7pB,EAHF,EAGaj0C,EATf,MAWE,KAAK0jC,EAAAA,UAALr2B,WACE0wD,EADF,EAEED,EAFF,EAGE7pB,EAHF,EAGaj0C,EAdf,MAgBE,QACE,MAAM,IAAAd,MAjBV,kBAqBA,MAAMk+D,EAAW,IAAAp7D,YAAgB,EAADiyC,GA3BsBh0C,GA4BtD,IAAI+9D,EAAJ,EACEC,EA7BoD,EA8BtD,IAAK,IAAIh6D,EAAT,EAAgBA,EAAhBhE,IAAAgE,EAAiC,CAC/Bm5D,EAASY,KADsB,EAE/BZ,EAAAA,IACE11D,EAAAA,SAAAA,EAA4Bu2D,EAD9Bb,GAF+BY,GAM/BC,GAN+BhqB,EAO/B+pB,GAP+B/pB,EAUjC,GAAIzP,IAASd,EAAAA,UAATc,gBAAJo5B,EAAiD,CAE/CI,EAF+C,EAG/C,IAAK,IAAI/5D,EAAT,EAAgBA,EAAhBhE,EAA4BgE,IAAK,CAC/B+5D,IACA,IAAK,IAAIp5D,EAAT,EAAgBA,EAAhBqvC,EAA8BrvC,IAC5Bw4D,EAASY,MADwB,KAMvC,MAAME,EAAO,IAAAl8D,WAAe,CACzBhC,GAAD,GAD0B,IAEzBA,GAAD,GAF0B,IAGzBA,GAAD,EAH0B,IAAA,IAI1BA,EACCC,GAAD,GAL0B,IAMzBA,GAAD,GAN0B,IAOzBA,GAAD,EAP0B,IAAA,IAQ1BA,EAR0B69D,EAAAC,EAAA,EAAA,EAAA,IAetBP,EAAOL,YAlEyCC,GAqEhDe,EACJrB,EAAAA,OAAoBsB,GAAyBF,EAA7CpB,OAA2DU,EAtEP9/D,OAuEhD2J,EAAO,IAAArF,WAvEyCm8D,GAwEtD,IAAI3kC,EAxEkD,EAyEtDnyB,EAAAA,IAAAA,EAzEsDmyB,GA0EtDA,GAAUsjC,EA1E4Cp/D,OA2EtDs/D,cAAAA,OAAAA,EAAAA,EA3EsDxjC,GA4EtDA,GA7MqC,GA6MN0kC,EA5EuBxgE,OA6EtDs/D,cAAAA,QAAAA,EAAAA,EA7EsDxjC,GA8EtDA,GA/MqC,GA+MNgkC,EA9EuB9/D,OA+EtDs/D,cAAAA,OAAsB,IAAAh7D,WAAtBg7D,GAAAA,EA/EsDxjC,GAiFtD,OAAOxxB,EAAAA,EAAAA,iBAAAA,EAAAA,YAjF+CE,GAwF/C21D,CAAAA,OADLn7B,IAAAA,EAAAA,KAA6BgB,EAAAA,UAA7BhB,eAAwDA,EAFU8B,KAG7Dq5B,EAH6DD,IAtN3C,GA6N7B,MAAAS,cACE3+D,cACE1D,KAAA2jC,cADY,EAEZ3jC,KAAA0gE,WAAkBF,EAFNE,WAGZ1gE,KAAA0jC,SAHY,EAKZ1jC,KAAA4jC,WALYtgC,EAAAugC,gBAMZ7jC,KAAA+jC,WANYzgC,EAAA0gC,qBAOZhkC,KAAAikC,QAPY,EAQZjkC,KAAAukC,kBAAyBC,EAAAA,kBARb/zB,KASZzQ,KAAA8jC,gBATY,EAYZ9jC,KAAAgI,EAZY,EAaZhI,KAAAiI,EAbY,EAgBZjI,KAAAkkC,MAhBY,EAiBZlkC,KAAAmkC,MAjBY,EAoBZnkC,KAAAokC,YApBY,EAqBZpkC,KAAAqkC,YArBY,EAsBZrkC,KAAAskC,WAtBY,EAuBZtkC,KAAAykC,SAvBY,EA0BZzkC,KAAA0kC,UAAiB87B,EA1BL97B,UA2BZ1kC,KAAA2kC,YA3BY,UA6BZ3kC,KAAA6kC,UA7BY,EA8BZ7kC,KAAA8kC,YA9BY,EA+BZ9kC,KAAA+kC,UA/BY,EAgCZ/kC,KAAA0sC,SAhCY,GAiCZ1sC,KAAAwsC,QAjCY,GAkCZxsC,KAAA6sC,WAlCY,EAoCZ7sC,KAAA+sC,UApCY,GAqCZ/sC,KAAAgtC,UArCY,EAuCZhtC,KAAAsiE,aAvCY,GA0CZtiE,KAAAuiE,cA1CY,KA2CZviE,KAAAwiE,UA3CY,KA6CZxiE,KAAAyiE,OA7CY,GAgDd96D,QACE,OAAOoB,OAAAA,OADD/I,MAIRolC,gBAAAA,EAAAA,GACEplC,KAAAgI,EADoBA,EAEpBhI,KAAAiI,EAFoBA,GAmCxB,SAAAy6D,GAAA1zD,GACE,GAAII,OAAAA,UAAJJ,GACE,OAAOA,EADoBzF,WAG7B,MAAMm0B,EAAI1uB,EAAAA,QAJO,IAKjB,IAAIpG,EAAI80B,EAAAA,OALS,EAMjB,GAAA,MAAIA,EAAAA,GACF,OADgBA,EAKlB,GACE90B,UAZe,MAaR80B,EAAAA,IACT,OAAOA,EAAAA,UAAAA,EAAeA,MAAAA,EAAAA,GAAAA,EAAmB90B,EAdxB,GA0BnB,SAAA+5D,GAAAvhD,GACE,GAAIA,IAAAA,EAAAA,IAAJ,IAAkBA,EAAAA,GAAY,CAC5B,GAAIA,IAAAA,EAAAA,IAAJ,IAAkBA,EAAAA,GAChB,OAAIA,IAAAA,EAAAA,IAAJ,IAAkBA,EAAAA,GAAY,GAGvB,SAASshD,GAAGthD,EAAZ,OAAqBshD,GAAGthD,EAAxB,OAET,GAAIA,EAAAA,KAASA,EAATA,IAAiBA,EAAAA,MAAUA,EAA/B,GAAqC,CAEnC,MAAO,UAAUshD,GADP,IAACjhE,KAAAA,KAAU2f,EAAV3f,IAAyBA,KADDuU,aAKrC,GAAIoL,IAAAA,EAAAA,IAAAA,IAAcA,EAAAA,IAAdA,IAA4BA,EAAAA,IAAhC,IAA8CA,EAAAA,GAC5C,MAAO,aAAashD,GAAGthD,EAAhB,OAAyBshD,GAAGthD,EAA5B,OAGX,MACE,UAAUshD,GAAGthD,EAAb,OAAsBshD,GAAGthD,EAAzB,OAAkCshD,GAAGthD,EAArC,OAA8CshD,GAAGthD,EAAjD,OAA0DshD,GAAGthD,EAA7D,OACGshD,GAAGthD,EAAN,OAOJ,IAAIwhD,EApX2D,EAqX3DC,EArX2D,EAsX3DC,EAtX2D,EAyX/DvC,EAAAA,YAAAA,YAAc,MAAAA,YACZ78D,YAAAA,EAAAA,EAA8BwI,GAA9BxI,GACE1D,KAAAiuD,WAAkB,IADmC1rC,EAAA/b,cAGrDxG,KAAAg/B,QAAe,IAHsCqjC,cAIrDriE,KAAA+iE,gBAJqDz/D,EAAAugC,gBAKrD7jC,KAAAgjE,eALqD,GAMrDhjE,KAAAijE,WANqD,GAOrDjjE,KAAAmsB,WAPqDA,EAQrDnsB,KAAAosB,KARqDA,EASrDpsB,KAAAylC,YATqD,KAUrDzlC,KAAA0lC,eAVqD,EAYrD1lC,KAAAkjE,YAZqD,EAarDljE,KAAAmjE,cAAqBp6D,OAAAA,OAbgC,MAcrD/I,KAAAojE,SAdqD,KAerDpjE,KAAAkM,kBAfqDA,EAoBrDlM,KAAAqjE,mBApBqD,GAqBrD,IAAA,MAAApnB,KAAA34C,EAAAyoC,IACE/rC,KAAAqjE,mBAAwBt3B,EAAAA,IAAxBkQ,IADoBA,EAKxBtjC,OACE3Y,KAAAgjE,eAAA35D,KAAyBrJ,KADpB+iE,iBAEL,MAAMnhC,EAAM5hC,KAFPg/B,QAGLh/B,KAAAijE,WAAA55D,KAHKu4B,GAIL5hC,KAAAg/B,QAAe4C,EAJVj6B,QAOPiR,UACE5Y,KAAA+iE,gBAAuB/iE,KAAAgjE,eADf/gC,MAERjiC,KAAAg/B,QAAeh/B,KAAAijE,WAFPhhC,MAGRjiC,KAAAylC,YAHQ,KAIRzlC,KAAAsjE,KAJQ,KAOV5sB,MAAAA,GACE12C,KADW2Y,OAEX3Y,KAAAujE,cAFWxyC,GAGX/wB,KAHW4Y,UAMb4qD,iBAAAA,GACE,MAAM70C,EAAUW,EADaX,QAEvBC,EAAYU,EAFWV,UAI7B,IAAK,IAAIhmB,EAAJ,EAAWD,EAAKgmB,EAArBjtB,OAAqCkH,EAArCD,EAA6CC,IAC3C,GAAI+lB,EAAAA,KAAeod,EAAAA,IAAnB7zB,WAIA,IAAA,MAAApJ,KAAkB8f,EAAlBhmB,GAAgC,CAC9B,MAAMqjC,EAAWn9B,EAAAA,WAAAA,MAAuB9O,KAAvB8O,WAAyC9O,KAD5BosB,KAExBvE,EAAU,IAAAllB,SAAYC,IAC1BqpC,EAAAA,IAAAA,EADqCrpC,MAGvC5C,KAAAg/B,QAAAsjC,aAAAj5D,KAL8Bwe,GAQlC,OAAOllB,QAAAA,IAAY3C,KAAAg/B,QAjBUsjC,cAoB/B56D,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACE,MAAMq7D,EAAkB,CAAAphD,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GACxBxhC,KAAA+iE,gBAAuBj7D,EAAAA,KAAAA,UACrB9H,KADqB8H,gBAFGi7D,GAM1B/iE,KAAAsjE,KAN0B,KAS5BG,OAAAA,EAAAA,GACEzjE,KAAAytB,SAD6BA,EAG7B,MAAMi2C,EAAa1jE,KAAA40B,YAHUnH,GAI7B,OAAOztB,KAAAwjE,iBAAAl0C,GAAA5pB,MAAyC,KAC9C1F,KAAA+iE,gBADoDz/D,EAAAugC,gBAEpD7jC,KAAAujE,cAAmBvjE,KAAA2jE,cAFiCr0C,IAGpD,OAHoDo0C,KAOxDC,cAAAA,GACE,MAAMC,EAAoB5jE,KADAqjE,mBAEpBz0C,EAAYU,EAFQV,UAGpBD,EAAUW,EAHUX,QAIpBk1C,EAJoB,GAK1B,IAAK,IAAIj7D,EAAJ,EAAWD,EAAKgmB,EAArBjtB,OAAqCkH,EAArCD,EAA6CC,IAAK,CAChD,MAAMkjC,EAAOnd,EADmC/lB,GAEhDi7D,EAAAA,KAAY,CAAA/3B,KAAAA,EAEVg4B,GAAIF,EAFM93B,GAGV/Z,KAAMnD,EAHIhmB,KAMd,OAzLJ,SAAAm7D,aAAAF,GACE,IAAIG,EADwB,GAE5B,MAAM1mB,EAFsB,GAI5B,IAAA,MAAA2mB,KAAAJ,EACE,GAAA,SAAII,EAAAA,GAOJ,YAAIA,EAAAA,GACFD,EAAS1mB,EADyBrb,MAGlC+hC,EAAAA,KADKC,OATP,CACED,EAAAA,KAAY,CAAEl4B,KAAF,GAAYg4B,GAAZ,QAAyB/yC,MAAzB,KACZusB,EAAAA,KAF+B0mB,GAG/BA,EAASA,EAAOA,EAAAA,OAAPA,GAHsBjzC,MAanC,OAlB4BizC,EAyLnBD,CAbmBF,GAgB5BN,cAAAA,GACE,IAAA,MAAAW,KAAAF,EAAoC,CAClC,MAAMF,EAAKI,EADuBJ,GAE5Bh4B,EAAOo4B,EAFqBp4B,KAG5B/Z,EAAOmyC,EAHqBnyC,KAKlC,OAAA,EAAQ+Z,GACN,KAAKC,EAAAA,IAALhyB,UACE/Z,KADF+Z,YADF,MAIE,KAAKgyB,EAAAA,IAAL7zB,WAJF,MAOE,KAAK6zB,EAAAA,IAAL3xB,WACEpa,KAAAoa,WADF2X,GAPF,MAUE,KAAKga,EAAAA,IAALtxB,mBACEza,KAAAya,mBAAwBsX,EAAxB,GAAiCA,EADnC,IAVF,MAaE,KAAKga,EAAAA,IAAL1xB,QACEra,KAAAqa,QADF0X,GAbF,MAgBE,KAAKga,EAAAA,IAALnxB,SAGA,KAAKmxB,EAAAA,IAALlxB,eACE7a,KAAA4a,SAAcmX,EADhB,IAnBF,MAsBE,KAAKga,EAAAA,IAAL/xB,QACEha,KADFga,UAtBF,MAyBE,KAAK+xB,EAAAA,IAALvxB,SACExa,KAAAwa,SAAcuX,EAAd,GAAuBA,EADzB,IAzBF,MA4BE,KAAKga,EAAAA,IAAL9xB,eACEja,KAAAia,eAAoB8X,EADtB,IA5BF,MA+BE,KAAKga,EAAAA,IAAL7xB,eACEla,KAAAka,eAAoB6X,EADtB,IA/BF,MAkCE,KAAKga,EAAAA,IAAL5xB,UACEna,KAAAma,UAAe4X,EADjB,IAlCF,MAqCE,KAAKga,EAAAA,IAALrxB,cACE1a,KAAA0a,cACEqX,EADF,GAEEA,EAFF,GAGEA,EAHF,GAIEA,EAJF,GAKEA,EALF,GAMEA,EAPJ,IArCF,MA+CE,KAAKga,EAAAA,IAALxxB,YACEva,KAAAua,YAAiBwX,EADnB,IA/CF,MAkDE,KAAKga,EAAAA,IAALzxB,qBACEta,KAAAsa,qBAA0ByX,EAD5B,IAlDF,MAqDE,KAAKga,EAAAA,IAAL5zB,aACEnY,KAAAmY,aAAkB4Z,EADpB,IArDF,MAwDE,KAAKga,EAAAA,IAAL1zB,YACErY,KAAAqY,YAAiB0Z,EADnB,IAxDF,MA2DE,KAAKga,EAAAA,IAAL3zB,WACEpY,KAAAoY,WAAgB2Z,EADlB,IA3DF,MA8DE,KAAKga,EAAAA,IAALzzB,cACEtY,KAAAsY,cAAmByZ,EADrB,IA9DF,MAiEE,KAAKga,EAAAA,IAALpwB,gBACE3b,KAAA2b,gBAAqBoW,EAArB,GAA8BA,EAA9B,GAAuCA,EADzC,IAjEF,MAoEE,KAAKga,EAAAA,IAALrwB,kBACE1b,KAAA0b,kBAAuBqW,EAAvB,GAAgCA,EAAhC,GAAyCA,EAD3C,IApEF,MAuEE,KAAKga,EAAAA,IAAL1wB,gBACErb,KAAAqb,gBADF0W,GAvEF,MA0EE,KAAKga,EAAAA,IAALxwB,cACEvb,KAAAub,cADFwW,GA1EF,MA6EE,KAAKga,EAAAA,IAALjwB,YACE9b,KAAA8b,YAAiBiW,EADnB,IA7EF,MAgFE,KAAKga,EAAAA,IAALxzB,QACEvY,KAAAuY,QAAawZ,EAAb,GAAsBA,EADxB,IAhFF,MAmFE,KAAKga,EAAAA,IAALvzB,mBACExY,KAAAwY,mBAAwBuZ,EAD1B,IAnFF,MAsFE,KAAKga,EAAAA,IAALtzB,YACEzY,KAAAyY,YAAiBsZ,EADnB,IAtFF,MAyFE,KAAKga,EAAAA,IAALrzB,UACE1Y,KAAA0Y,UAAeqZ,EADjB,IAzFF,MA4FE,KAAKga,EAAAA,IAALzyB,KACEtZ,KADFsZ,OA5FF,MA+FE,KAAKyyB,EAAAA,IAALxyB,OACEvZ,KADFuZ,SA/FF,MAkGE,KAAKwyB,EAAAA,IAAL3yB,OACEpZ,KADFoZ,SAlGF,MAqGE,KAAK2yB,EAAAA,IAALvyB,WACExZ,KADFwZ,aArGF,MAwGE,KAAKuyB,EAAAA,IAALtyB,aACEzZ,KADFyZ,eAxGF,MA2GE,KAAKsyB,EAAAA,IAALlyB,KACE7Z,KAAA6Z,KADF,WA3GF,MA8GE,KAAKkyB,EAAAA,IAALjyB,OACE9Z,KAAA6Z,KADF,WA9GF,MAiHE,KAAKkyB,EAAAA,IAALruB,yBACE1d,KADF0d,2BAjHF,MAoHE,KAAKquB,EAAAA,IAAL1uB,kBACErd,KAAAqd,kBAAuB0U,EADzB,IApHF,MAuHE,KAAKga,EAAAA,IAALzuB,wBACEtd,KAAAsd,wBAA6ByU,EAD/B,IAvHF,MA0HE,KAAKga,EAAAA,IAAL5uB,sBACEnd,KAAAmd,sBAA2B4U,EAD7B,IA1HF,MA6HE,KAAKga,EAAAA,IAALrvB,sBACE1c,KAAA0c,sBAA2BqV,EAA3B,GAAoCA,EADtC,IA7HF,MAgIE,KAAKga,EAAAA,IAALpvB,oBACE3c,KADF2c,sBAhIF,MAmIE,KAAKovB,EAAAA,IAAL7yB,UACElZ,KADFkZ,YAnIF,MAsIE,KAAK6yB,EAAAA,IAAL1yB,YACErZ,KADFqZ,cAtIF,MAyIE,KAAK0yB,EAAAA,IAALryB,gBACE1Z,KADF0Z,kBAzIF,MA4IE,KAAKqyB,EAAAA,IAALpyB,kBACE3Z,KADF2Z,oBA5IF,MA+IE,KAAKoyB,EAAAA,IAALpxB,SACE3a,KADF2a,WA/IF,MAkJE,KAAKoxB,EAAAA,IAALrkC,UACE1H,KAAA0H,UACEqqB,EADF,GAEEA,EAFF,GAGEA,EAHF,GAIEA,EAJF,GAKEA,EALF,GAMEA,EAPJ,IAlJF,MA4JE,KAAKga,EAAAA,IAALpuB,cACE3d,KAAA2d,cAAmBoU,EAAnB,GAA4BA,EAD9B,IA5JF,MA+JE,KAAKga,EAAAA,IAALnyB,QACE5Z,KADF4Z,UA/JF,MAkKE,KAAA,GACE5Z,KAAA02C,MAAWwtB,EADbnzC,OAlKF,MAqKE,SACEjvB,EAAAA,EAAAA,MAAK,0BAAAgiE,OAMb5pD,eAAAA,GACEla,KAAAg/B,QAAAqF,YAD0BA,EAI5BpqB,eAAAA,GACEja,KAAAg/B,QAAAoF,YAD0BA,EAI5BzpB,WACE3a,KAAAwa,SAAA,EAAiBxa,KAAAg/B,QADRiF,SAIXvpB,cAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACE,MAAMskB,EAAUh/B,KADcg/B,QAE9BA,EAAAA,WAAqBA,EAAAA,WAAqB,CAAArd,EAAAX,EAAAY,EAAAP,EAAA3S,EAAA8yB,GAC1CxC,EAAAA,gBAA0Bv9B,KAAAA,MAAAA,EAHIuf,GAK9Bge,EAAAA,EAAYA,EAAAA,MALkB,EAM9BA,EAAAA,EAAYA,EAAAA,MANkB,EAQ9BA,EAAAA,QAR8B,GAS9BA,EAAAA,QAT8B,GAU9BA,EAAAA,MAAgBh/B,KAAAiuD,WAAAzpD,cAVc,aAW9Bw6B,EAAAA,MAAAA,eAAAA,KAAAA,cAAkDA,EAXpB+7B,YAY9B/7B,EAAAA,MAAAA,eAAAA,KAAAA,YAGE,GAAG0jC,GAAG1jC,EAAN0E,eAEF1E,EAAAA,MAAAA,eAAAA,KAAAA,IAAwC0jC,IAAI1jC,EAjBd/2B,IAmB9B+2B,EAAAA,WAAqBh/B,KAAAiuD,WAAAzpD,cAnBS,YAoB9Bw6B,EAAAA,WAAAA,YAA+BA,EApBDmlC,OAuBhCpqD,YACE,MAAMilB,EAAUh/B,KADNg/B,QAEVA,EAAAA,EAAYA,EAAAA,MAFF,EAGVA,EAAAA,EAAYA,EAAAA,MAHF,EAIVA,EAAAA,WAJU17B,EAAAugC,gBAKV7E,EAAAA,WALU17B,EAAAugC,gBAMV7E,EAAAA,gBANU,EAOVA,EAAAA,MAAgBh/B,KAAAiuD,WAAAzpD,cAPN,aAQVw6B,EAAAA,WAAqBh/B,KAAAiuD,WAAAzpD,cARX,YASVw6B,EAAAA,OAAiBh/B,KAAAiuD,WAAAzpD,cATP,SAUVw6B,EAAAA,QAVU,GAWVA,EAAAA,QAXU,GAcZxkB,SAAAA,EAAAA,GACE,MAAMwkB,EAAUh/B,KADHg/B,QAEbA,EAAAA,EAAYA,EAAAA,OAFCh3B,EAGbg3B,EAAAA,EAAYA,EAAAA,OAHC/2B,EAKb+2B,EAAAA,QALa,GAMbA,EAAAA,QANa,GAObA,EAAAA,MAAgBh/B,KAAAiuD,WAAAzpD,cAPH,aAQbw6B,EAAAA,MAAAA,eAAAA,KAAAA,cAAkDA,EARrC+7B,YASb/7B,EAAAA,MAAAA,eAAAA,KAAAA,YAGE,GAAG0jC,GAAG1jC,EAAN0E,eAEF1E,EAAAA,MAAAA,eAAAA,KAAAA,IAAwC0jC,IAAI1jC,EAd/B/2B,IAiBf2S,SAAAA,GACE,MAAMokB,EAAUh/B,KADDg/B,QAET/gB,EAAO+gB,EAFE/gB,KAGTylB,EAAW1E,EAHF0E,SAIf,GAAA,IAAIA,EAAgB,OAIpB,MAAMC,EAAgB3E,EARP2E,cASTS,EAAcpF,EATLoF,YAUTC,EAAcrF,EAVLqF,YAWTgO,EAAgBrT,EAXPqT,cAYT/N,EAAatF,EAAAA,WAZJqT,EAaTE,EAAWt0B,EAbFs0B,SAcTC,EAAaD,EAAAA,GAdJ,EAeTE,EAAkBx0B,EAfTw0B,gBAgBTC,EAAoBhP,EAAW1E,EAAAA,WAhBtB,GAkBf,IAAIh3B,EAlBW,EAmBf,IAAA,MAAA6qC,KAAAV,EAA4B,CAC1B,GAAA,OAAIU,EAAgB,CAElB7qC,GAAKqqC,EAFahO,EAAA,SAIb,IAAIh2B,EAAAA,EAAAA,OAAJwkC,GAAkB,CACvB7qC,GAAMwqC,EAAAA,EAAD9O,EADkB,IAAA,SAKzB,MAAM4M,GAAWuC,EAAAE,QAAA1O,EAAD,GAVUD,EAWpBtF,EAAY+T,EAXQG,SAY1B,IAAAE,EAZ0BC,EAAAC,EAatBpvC,EAAQ6uC,EAbc7uC,MAc1B,GAAAuuC,EAAc,CACZ,IADYe,EAEZ,MAAMD,EAAUR,EAAAA,SAFJJ,EAGZa,EAAKT,EAAAA,QAAgBQ,EAAhBR,GAHO,GAGsB7uC,EAClCsvC,GAAKA,EAJOZ,EAKZ,MAAMa,EAAKF,EAAAA,GALCX,EAOZ1uC,EAAQqvC,GAAWA,EAAXA,GAPIrvC,EAQZkvC,EAAUI,EARE3P,EASZwP,GAAWnrC,EAADurC,GATE5P,MAUP,CACLuP,EAAUlrC,EADL27B,EAELwP,EAFK,EAKP,GAAIN,EAAAA,UAAkB50B,EAAtB8d,YAAwC,CACtCiD,EAAAA,QAAAA,KAAqBA,EAAAA,EADiBkU,GAEtCX,GACEvT,EAAAA,QAAAA,MAAsBA,EAAD/2B,EADTkrC,GAGdnU,EAAAA,MAAAA,aALsCF,EAetCsU,EADFb,EACcvuC,EAAAA,EAA4BssC,EAD5B+B,EAGAruC,EAAAA,EAA4BssC,EADnC+B,EAIPrqC,GAjD0BorC,EAmD5BpU,EAAAA,MAAAA,eAAAA,KAAAA,IAGEA,EAAAA,QAAAA,IAAAA,IAAAA,KAzEa,MA2EfuT,EACEvT,EAAAA,MAAAA,eAAAA,KAAAA,IAGEA,EAAAA,QAAAA,IAAAA,IAAAA,KAJU,MAOZA,EAAAA,MAAAA,eAAAA,KAAAA,IAAwC0jC,IAAI1jC,EADvC/2B,IAIPsqC,EACEvT,EAAAA,GADYh3B,EAGZg3B,EAAAA,GAAah3B,EADRs8B,EAIPtF,EAAAA,MAAAA,eAAAA,KAAAA,cAAkDA,EA3FnC+7B,YA4Ff/7B,EAAAA,MAAAA,eAAAA,KAAAA,YAGE,GAAG0jC,GAAG1jC,EAAN0E,eAEE1E,EAAAA,YAAsBwhC,EAA1BC,WACEzhC,EAAAA,MAAAA,eAAAA,KAAAA,aAAiDA,EADDyhC,WAG9CzhC,EAAAA,aAAuBwhC,EAA3BE,YACE1hC,EAAAA,MAAAA,eAAAA,KAAAA,cAAkDA,EADA0hC,YAIpD,MAAM9uB,EACJ5S,EAAAA,kBAA4BwF,EAAAA,kBAzGfvzB,iBA0Gf,GACE2gC,IAAmBpN,EAAAA,kBAAnBoN,MACAA,IAAmBpN,EAAAA,kBAFrB7zB,YAGE,CACIquB,EAAAA,YAAsBwhC,EAA1B97B,WACE1F,EAAAA,MAAAA,eAAAA,KAAAA,OAA2CA,EADK0F,WAG9C1F,EAAAA,UAAJ,GACEA,EAAAA,MAAAA,eAAAA,KAAAA,eAAmDA,EAD1B6F,gBAGlB7F,EAAAA,oBAA8BwF,EAAAA,kBAAlCxzB,YAGLguB,EAAAA,MAAAA,eAAAA,KAAAA,OAHsE,eAKtEA,EAAAA,MAAAA,eAAAA,KAAAA,OADK,QAIP,GACE4S,IAAmBpN,EAAAA,kBAAnBoN,QACAA,IAAmBpN,EAAAA,kBAFrB7zB,YAGE,CACA,MAAMyzD,EAAiB,GAAKplC,EAAA8E,iBAD5B,GAEA9jC,KAAAqkE,qBAA0BrlC,EAA1BmlC,MAFAC,GAQF,IAAIxgC,EAAa5E,EAvIF4E,WAwIf,GAAA,IAAI5E,EAAAA,SAAwB,CAC1B4E,EAAaA,EADah8B,QAE1Bg8B,EAAAA,IAAiB5E,EAFSyF,SAK5BzF,EAAAA,WAAAA,eAAAA,KAAAA,YAGE,GAAG2jC,GAAH/+B,YAA2B8+B,GAA3Bp+B,WAEFtF,EAAAA,WAAAA,eAAAA,EAAAA,YAlJe,YAmJfA,EAAAA,WAAAA,YAA+BA,EAnJhBmlC,OAoJfnlC,EAAAA,OAAAA,YAA2BA,EApJZslC,YAsJftkE,KAAAukE,wBAAAlhE,YAAyC27B,EAtJ1BslC,YAyJjB7pD,mBAAAA,EAAAA,GACEza,KAAAoa,YADuBnS,GAEvBjI,KAAAwa,SAAAxS,EAFuBC,GAKzBu8D,aAAAA,GACE,IAAK5zB,EAALvlC,KACE,MAAM,IAAAnI,MACJ,qGAIJ,IAAKlD,KAALojE,SAAoB,CAClBpjE,KAAAojE,SAAgBpjE,KAAAiuD,WAAAzpD,cADE,aAElBxE,KAAAojE,SAAAqB,eAAA,KAAA,OAFkB,YAGlBzkE,KAAA0kE,KAAArhE,YAAsBrD,KAHJojE,UAMpB,MAAMjjE,GAAM6L,EAAAA,EAAAA,iBACV4kC,EADU5kC,KAEV4kC,EAFU5kC,SAGVhM,KAhBkBkM,iBAkBpBlM,KAAAojE,SAAA1yC,aACE,8BAA8BkgB,EAA9BzS,yBACAh+B,UAGJka,QAAAA,GACE,MAAM2kB,EAAUh/B,KADDg/B,QAET4R,EAAU5wC,KAAAmsB,WAAAvf,IAAoBzL,EAFrB,IAGf,IAAIsvB,EAAOtvB,EAHI,GAIf69B,EAAAA,KAJe4R,EAMf,GACE5wC,KAAAkjE,aACCtyB,EADD7U,cAEC/7B,KAAAmjE,cAAmBvyB,EAHtBzS,YAIE,CACAn+B,KAAAwkE,aADA5zB,GAEA5wC,KAAAmjE,cAAmBvyB,EAAnBzS,YAFAyS,EAIF5R,EAAAA,WAAqB4R,EAAAA,YAdNttC,EAAA0gC,qBAgBf,IAAI8M,EAhBW,SAiBXF,EAAJ5I,MACE8I,EADiB,MAERF,EAAJE,OACLA,EADuB,QAGzB,MAAMC,EAASH,EAAAA,OAAAA,SAtBA,SAwBf,GAAIngB,EAAJ,EAAc,CACZA,GADYA,EAEZuO,EAAAA,eAFY,OAIZA,EAAAA,cADK,EAGPA,EAAAA,SA9BevO,EA+BfuO,EAAAA,WAAqB4R,EA/BNzS,WAgCfa,EAAAA,WAhCe8R,EAiCf9R,EAAAA,UAjCe+R,EAmCf/R,EAAAA,MAAgBh/B,KAAAiuD,WAAAzpD,cAnCD,aAoCfw6B,EAAAA,MAAAA,eAAAA,KAAAA,IAAwC0jC,IAAI1jC,EApC7B/2B,IAqCf+2B,EAAAA,QArCe,GAsCfA,EAAAA,QAtCe,GAyCjBhlB,UACE,MAAMglB,EAAUh/B,KADRg/B,QAER,GACEA,EAAAA,kBAA4BwF,EAAAA,kBAA5BxF,kBACAA,EAAAA,YAFF2lC,gBAGE,CAEA3lC,EAAAA,QAAkBA,EAFlBslC,WAGAtkE,KAAA6Z,KAHA,WAIA7Z,KAJA4Z,WASJzB,aAAAA,GACMnU,EAAJ,IACEhE,KAAAg/B,QAAA+F,UADa/gC,GAKjBoU,WAAAA,GACEpY,KAAAg/B,QAAAwN,QAAuB5B,EADP2B,GAIlBl0B,YAAAA,GACErY,KAAAg/B,QAAA0N,SAAwB7B,EADP0B,GAInBj0B,cAAAA,GACEtY,KAAAg/B,QAAA6N,WADmBD,EAIrBg4B,eAAAA,GACE5kE,KAAAg/B,QAAA8F,YAD0BA,EAI5BppB,kBAAAA,EAAAA,EAAAA,GACE1b,KAAAg/B,QAAA2F,YAA2B78B,EAAAA,KAAAA,aAAAA,EAAAA,EADFkZ,GAI3B6jD,aAAAA,GACE7kE,KAAAg/B,QAAA6F,UADsBA,EAIxBlpB,gBAAAA,EAAAA,EAAAA,GACE3b,KAAAg/B,QAAA0F,UAAyB58B,EAAAA,KAAAA,aAAAA,EAAAA,EADFkZ,GAEvBhhB,KAAAg/B,QAAAmlC,MAAqBnkE,KAAAiuD,WAAAzpD,cAFE,aAGvBxE,KAAAg/B,QAAA8lC,QAHuB,GAIvB9kE,KAAAg/B,QAAA+lC,QAJuB,GAOzB1pD,gBAAAA,GACErb,KAAAg/B,QAAA2F,YAA2B3kC,KAAAglE,oBADPjzC,GAItBxW,cAAAA,GACEvb,KAAAg/B,QAAA0F,UAAyB1kC,KAAAglE,oBADPjzC,GAIpBjW,YAAAA,GACE,MAAM9X,EAAQhE,KAAAytB,SADEzpB,MAEVC,EAASjE,KAAAytB,SAFCxpB,OAGVyxC,EAAM5tC,EAAAA,KAAAA,iBAAsB9H,KAHlB+iE,iBAIVptB,EAAKryC,EAAAwE,KAAAC,eAAoB,CAAA,EAAA,GAJf2tC,GAKVE,EAAKtyC,EAAAwE,KAAAC,eAAoB,CAAA,EAAA9D,GALfyxC,GAMVG,EAAKvyC,EAAAwE,KAAAC,eAAoB,CAAA/D,EAAA,GANf0xC,GAOVI,EAAKxyC,EAAAwE,KAAAC,eAAoB,CAAA/D,EAAAC,GAPfyxC,GAQVK,EAAKt0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EARzB,IASVE,EAAKv0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EATzB,IAUVG,EAAKx0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EAVzB,IAWVI,EAAKz0C,KAAAA,IAASk0C,EAATl0C,GAAgBm0C,EAAhBn0C,GAAuBo0C,EAAvBp0C,GAA8Bq0C,EAXzB,IAaV1tC,EAAOpI,KAAAiuD,WAAAzpD,cAbG,YAchB4D,EAAAA,eAAAA,KAAAA,IAdgB2tC,GAehB3tC,EAAAA,eAAAA,KAAAA,IAfgB4tC,GAgBhB5tC,EAAAA,eAAAA,KAAAA,QAAmC6tC,EAhBnBF,GAiBhB3tC,EAAAA,eAAAA,KAAAA,SAAoC8tC,EAjBpBF,GAkBhB5tC,EAAAA,eAAAA,KAAAA,OAAkCpI,KAAAilE,oBAlBlBlzC,IAmBZ/xB,KAAAg/B,QAAA6F,UAAJ,GACEz8B,EAAAA,eAAAA,KAAAA,eAA0CpI,KAAAg/B,QADZ6F,WAGhC7kC,KAAAukE,wBAAAlhE,YAtBgB+E,GA4BlB48D,oBAAAA,GACE,MAAA,kBAAIjzC,EAAAA,GACK/xB,KAAAklE,mBADwBnzC,GAG1B/xB,KAAAilE,oBAJiBlzC,GAU1BmzC,mBAAAA,GACE,MAAMrwB,EAAQ9iB,EADS,GAEjBzC,EAAeyC,EAFE,GAGjBukB,EAASvkB,EAAAA,IAHQzuB,EAAAugC,iBAIjBkS,EAAAC,EAAAC,EAAAC,GAAmBnkB,EAJF,GAKjB2uB,EAAQ3uB,EALS,GAMjB4uB,EAAQ5uB,EANS,GAOjB6uB,EAAY7uB,EAPK,GASjBozC,EAAW,UAAUrC,KACrBsC,EAAAC,GAAa/hE,EAAAwE,KAAAC,eAAoB,CAAAguC,EAAAC,GAVhBM,IAWjBgvB,EAAAC,GAAajiE,EAAAwE,KAAAC,eAAoB,CAAAkuC,EAAAC,GAXhBI,IAYjBkvB,EAAAC,GAAmB39D,EAAAA,KAAAA,8BAZFwuC,GAajBovB,EAAShlB,EAbQ8kB,EAcjBG,EAAShlB,EAdQ8kB,EAgBjBG,EAAS5lE,KAAAiuD,WAAAzpD,cAhBQ,eAiBvBohE,EAAAA,eAAAA,KAAAA,KAjBuBT,GAkBvBS,EAAAA,eAAAA,KAAAA,eAlBuB,kBAmBvBA,EAAAA,eAAAA,KAAAA,QAnBuBF,GAoBvBE,EAAAA,eAAAA,KAAAA,SApBuBD,GAqBvBC,EAAAA,eAAAA,KAAAA,IAAiC,GAAAR,KACjCQ,EAAAA,eAAAA,KAAAA,IAAiC,GAAAP,KAGjC,MAAM5+D,EAAMzG,KAzBWyG,IA0BjBs8D,EAAkB/iE,KA1BD+iE,gBA2BjBr+B,EAAY1kC,KAAAg/B,QA3BK0F,UA4BjBC,EAAc3kC,KAAAg/B,QA5BG2F,YA8BjB4R,EAAOv2C,KAAAiuD,WAAArqD,OAAuB0hE,EAAvBF,EAAkCG,EA9BxBF,GA+BvBrlE,KAAAyG,IA/BuB8vC,EAgCvBv2C,KAAA+iE,gBAhCuBzsB,EAiCvB,GAAA,IAAIsK,EAAiB,CACnB,MAAMiB,EAAW/5C,EAAAA,KAAAA,gBADE+sC,GAEnB70C,KAAAg/B,QAAA0F,UAFmBmd,EAGnB7hD,KAAAg/B,QAAA2F,YAHmBkd,EAKrB7hD,KAAAujE,cAAmBvjE,KAAA2jE,cAtCIr0C,IAyCvBtvB,KAAAyG,IAzCuBA,EA0CvBzG,KAAA+iE,gBA1CuBA,EA2CvB/iE,KAAAg/B,QAAA0F,UA3CuBA,EA4CvB1kC,KAAAg/B,QAAA2F,YA5CuBA,EA8CvBihC,EAAAA,YAAmBrvB,EAAAA,WA9CI,IA+CvBv2C,KAAA0kE,KAAArhE,YA/CuBuiE,GAgDvB,MAAO,QAAAT,KAMTF,oBAAAA,GACE,OAAQlzC,EAAR,IACE,IAAA,cACE,MAAM8zC,EAAY,UAAU/C,IACtBpmB,EAAa3qB,EAFrB,GAGE,IAHF+zC,EAKE,OAAQ/zC,EAAR,IACE,IAAA,QACE,MAAMg0C,EAASh0C,EADjB,GAEQi0C,EAASj0C,EAFjB,GAGE+zC,EAAW9lE,KAAAiuD,WAAAzpD,cAHb,sBAIEshE,EAAAA,eAAAA,KAAAA,KAJFD,GAKEC,EAAAA,eAAAA,KAAAA,gBALF,kBAMEA,EAAAA,eAAAA,KAAAA,KAAoCC,EANtC,IAOED,EAAAA,eAAAA,KAAAA,KAAoCC,EAPtC,IAQED,EAAAA,eAAAA,KAAAA,KAAoCE,EARtC,IASEF,EAAAA,eAAAA,KAAAA,KAAoCE,EATtC,IADF,MAYE,IAAA,SACE,MAAMC,EAAal0C,EADrB,GAEQm0C,EAAcn0C,EAFtB,GAGQo0C,EAAcp0C,EAHtB,GAIQq0C,EAAer0C,EAJvB,GAKE+zC,EAAW9lE,KAAAiuD,WAAAzpD,cALb,sBAMEshE,EAAAA,eAAAA,KAAAA,KANFD,GAOEC,EAAAA,eAAAA,KAAAA,gBAPF,kBAQEA,EAAAA,eAAAA,KAAAA,KAAoCI,EARtC,IASEJ,EAAAA,eAAAA,KAAAA,KAAoCI,EATtC,IAUEJ,EAAAA,eAAAA,KAAAA,IAVFM,GAWEN,EAAAA,eAAAA,KAAAA,KAAoCG,EAXtC,IAYEH,EAAAA,eAAAA,KAAAA,KAAoCG,EAZtC,IAaEH,EAAAA,eAAAA,KAAAA,KAbFK,GAZF,MA2BE,QACE,MAAM,IAAAjjE,MAAU,6BAA6B6uB,EAA7B,MAEpB,IAAA,MAAAs0C,KAAA3pB,EAAoC,CAClC,MAAM4pB,EAAOtmE,KAAAiuD,WAAAzpD,cADqB,YAElC8hE,EAAAA,eAAAA,KAAAA,SAAoCD,EAFF,IAGlCC,EAAAA,eAAAA,KAAAA,aAAwCD,EAHN,IAIlCP,EAAAA,YAJkCQ,GAMpCtmE,KAAA0kE,KAAArhE,YAzCFyiE,GA0CE,MAAO,QAAAD,KACT,IAAA,QACE/jE,EAAAA,EAAAA,MADF,8BAEE,OA9CJ,KA+CE,IAAA,QACE,MAhDJ,UAiDE,QACE,MAAM,IAAAoB,MAAU,oBAAoB6uB,EAApB,OAItBxZ,QAAAA,EAAAA,GACEvY,KAAAg/B,QAAA+N,UAD4BA,EAE5B/sC,KAAAg/B,QAAAgO,UAF4BA,EAK9BrvB,cAAAA,EAAAA,GACE,MAAMqhB,EAAUh/B,KADOg/B,QAEvB,IAAIh3B,EAAIg3B,EAARh3B,EACEC,EAAI+2B,EAHiB/2B,EAInBoZ,EAJmB,GAKnB8lB,EALmB,EAOvB,IAAA,MAAA8U,KAAAtN,EACE,OAAA,EAAQsN,GACN,KAAKlQ,EAAAA,IAAL5yB,UACEnR,EAAI+pB,EAAKoV,KACTl/B,EAAI8pB,EAAKoV,KACT,MAEMyH,EAAK5mC,EAFG+pB,EAAKoV,KAGb0H,EAAK5mC,EAFI8pB,EAAKoV,KAGpB9lB,EAAAA,KAAAA,IAEEqhD,GAFFrhD,GAGEqhD,GAHFrhD,GAAAA,IAKEqhD,GALFrhD,GAMEqhD,GANFrhD,GAAAA,IAQEqhD,GARFrhD,GASEqhD,GATFrhD,GAAAA,IAWEqhD,GAXFrhD,GAYEqhD,GAZFrhD,GAPF,KADF,MAwBE,KAAK0qB,EAAAA,IAALlzB,OACE7Q,EAAI+pB,EAAKoV,KACTl/B,EAAI8pB,EAAKoV,KACT9lB,EAAAA,KAAAA,IAAYqhD,GAAZrhD,GAAmBqhD,GAHrBz6D,IAxBF,MA6BE,KAAK8jC,EAAAA,IAALjzB,OACE9Q,EAAI+pB,EAAKoV,KACTl/B,EAAI8pB,EAAKoV,KACT9lB,EAAAA,KAAAA,IAAYqhD,GAAZrhD,GAAmBqhD,GAHrBz6D,IA7BF,MAkCE,KAAK8jC,EAAAA,IAALhzB,QACE/Q,EAAI+pB,EAAKoV,EADX,GAEEl/B,EAAI8pB,EAAKoV,EAFX,GAGE9lB,EAAAA,KAAAA,IAEEqhD,GAAG3wC,EAFL1Q,IAGEqhD,GAAG3wC,EAAKoV,EAHV9lB,IAIEqhD,GAAG3wC,EAAKoV,EAJV9lB,IAKEqhD,GAAG3wC,EAAKoV,EALV9lB,IAMEqhD,GANFrhD,GAOEqhD,GAVJz6D,IAYEk/B,GAZF,EAlCF,MAgDE,KAAK4E,EAAAA,IAAL/yB,SACEqI,EAAAA,KAAAA,IAEEqhD,GAFFrhD,GAGEqhD,GAHFrhD,GAIEqhD,GAAG3wC,EAJL1Q,IAKEqhD,GAAG3wC,EAAKoV,EALV9lB,IAMEqhD,GAAG3wC,EAAKoV,EANV9lB,IAOEqhD,GAAG3wC,EAAKoV,EARZ,KAUEn/B,EAAI+pB,EAAKoV,EAVX,GAWEl/B,EAAI8pB,EAAKoV,EAXX,GAYEA,GAZF,EAhDF,MA8DE,KAAK4E,EAAAA,IAAL9yB,SACEjR,EAAI+pB,EAAKoV,EADX,GAEEl/B,EAAI8pB,EAAKoV,EAFX,GAGE9lB,EAAAA,KAAAA,IAEEqhD,GAAG3wC,EAFL1Q,IAGEqhD,GAAG3wC,EAAKoV,EAHV9lB,IAIEqhD,GAJFrhD,GAKEqhD,GALFrhD,GAMEqhD,GANFrhD,GAOEqhD,GAVJz6D,IAYEk/B,GAZF,EA9DF,MA4EE,KAAK4E,EAAAA,IAAL7yB,UACEmI,EAAAA,KADF,KAMJA,EAAIA,EAAAA,KA1FmB,KA4FvB,GACE2d,EAAAA,MACA2P,EAAAA,OADA3P,GAEA2P,EAAAA,KAAW5C,EAAAA,IAFX/M,WAGA2P,EAAAA,KAAW5C,EAAAA,IAJblzB,OASEwI,EAAI2d,EAAAA,KAAAA,eAAAA,KAAAA,KAJJ3d,MAKK,CACL2d,EAAAA,KAAeh/B,KAAAiuD,WAAAzpD,cADV,YAELxE,KAAAukE,wBAAAlhE,YAAyC27B,EAFpCoR,MAKPpR,EAAAA,KAAAA,eAAAA,KAAAA,IA3GuB3d,GA4GvB2d,EAAAA,KAAAA,eAAAA,KAAAA,OA5GuB,QAgHvBA,EAAAA,QAAkBA,EAhHKoR,KAiHvBpR,EAAAA,gBAAAA,EAjHuB/2B,GAoHzB2R,UACE,MAAMolB,EAAUh/B,KADRg/B,QAIRA,EAAAA,KAJQ,KAMR,IAAKh/B,KAALylC,YAAuB,OAGvB,IAAKzG,EAAL4yB,QAAsB,CACpB5xD,KAAAylC,YADoB,KAAA,OAMtB,MAAM8gC,EAAS,WAAW3D,IACpB4D,EAAWxmE,KAAAiuD,WAAAzpD,cAhBT,gBAiBRgiE,EAAAA,eAAAA,KAAAA,KAjBQD,GAkBRC,EAAAA,eAAAA,KAAAA,YAA2C7D,GAAG3iE,KAlBtC+iE,kBAqBR,MAAM0D,EAAcznC,EAAAA,QAAAA,WArBZ,GAsBR,YAAIh/B,KAAAylC,YACFghC,EAAAA,eAAAA,KAAAA,YADkC,WAGlCA,EAAAA,eAAAA,KAAAA,YADK,WAGPzmE,KAAAylC,YA3BQ,KA4BR+gC,EAAAA,YA5BQC,GA6BRzmE,KAAA0kE,KAAArhE,YA7BQmjE,GA+BR,GAAIxnC,EAAJujC,cAA2B,CAGzBvjC,EAAAA,UAHyB,KAIzBh/B,KAAAijE,WAAA1sC,SAAwB,SAAAyL,GACtBA,EAAAA,UADsC,QAIxCwkC,EAAAA,eAAAA,KAAAA,YAA2CxnC,EARlBujC,eAU3BvjC,EAAAA,cAAwB,QAAAunC,KAExBvmE,KAAAsjE,KA3CQ,KA8CVzpD,KAAAA,GACE7Z,KAAAylC,YADS/+B,EAIXwS,YACE,MAAM8lB,EAAUh/B,KADNg/B,QAEV,GAAIA,EAAJoR,KAAkB,CAChB,MAAM/uB,EAAI,GAAG2d,EAAAA,KAAAA,eAAAA,KAAH,QACVA,EAAAA,KAAAA,eAAAA,KAAAA,IAFgB3d,IAMpBjH,WAAAA,GACEpa,KAAAg/B,QAAAiF,SADkBA,EAIpB1pB,YAAAA,GACEva,KAAAg/B,QAAAyF,SADoBA,EAItBnqB,qBAAAA,GACEta,KAAAg/B,QAAAuF,kBADsCA,EAIxCpqB,UAAAA,GACEna,KAAAg/B,QAAAsF,WAA0Bz9B,EADX,IAIjB2R,mBAAAA,IAIAC,YAAAA,IAIAC,UAAAA,GACE,IAAA,MAAW3J,EAAXC,KAAAk+B,EACE,OAAAn+B,GACE,IAAA,KACE/O,KAAAmY,aADFnJ,GADF,MAIE,IAAA,KACEhP,KAAAoY,WADFpJ,GAJF,MAOE,IAAA,KACEhP,KAAAqY,YADFrJ,GAPF,MAUE,IAAA,KACEhP,KAAAsY,cADFtJ,GAVF,MAaE,IAAA,IACEhP,KAAAuY,QAAavJ,EAAb,GAAuBA,EADzB,IAbF,MAgBE,IAAA,KACEhP,KAAAwY,mBADFxJ,GAhBF,MAmBE,IAAA,KACEhP,KAAAyY,YADFzJ,GAnBF,MAsBE,IAAA,OACEhP,KAAAqa,QADFrL,GAtBF,MAyBE,IAAA,KACEhP,KAAA4kE,eADF51D,GAzBF,MA4BE,IAAA,KACEhP,KAAA6kE,aADF71D,GA5BF,MA+BE,SACElN,EAAAA,EAAAA,MAAK,wCAAAiN,MAMbuK,OACE,MAAM0lB,EAAUh/B,KADXg/B,QAEL,GAAIA,EAAJ4yB,QAAqB,CACnB5yB,EAAAA,QAAAA,eAAAA,KAAAA,OAA6CA,EAD1B0F,WAEnB1F,EAAAA,QAAAA,eAAAA,KAAAA,eAAqDA,EAFlC6F,WAGnB7kC,KAHmB4Z,WAOvBR,SACE,MAAM4lB,EAAUh/B,KADTg/B,QAEP,GAAIA,EAAJ4yB,QAAqB,CACnB5xD,KAAAqkE,qBAA0BrlC,EADP4yB,SAEnB5yB,EAAAA,QAAAA,eAAAA,KAAAA,OAFmB,QAGnBh/B,KAHmB4Z,WAUvByqD,qBAAAA,EAA8BD,EAA9BC,GACE,MAAMrlC,EAAUh/B,KADgCg/B,QAEhD,IAAI+N,EAAY/N,EAFgC+N,UAG5Cq3B,IAAAA,GAAwBr3B,EAAAA,OAA5B,IACEA,EAAYA,EAAAl+B,KAAc,SAAAG,GACxB,OAAOo1D,EADkCp1D,MAI7C4iD,EAAAA,eAAAA,KAAAA,SAAuC5yB,EARS2F,aAShDitB,EAAAA,eAAAA,KAAAA,iBAA+C5yB,EATC8F,aAUhD8sB,EAAAA,eAAAA,KAAAA,oBAAkD8Q,GAAG1jC,EAVL6N,aAWhD+kB,EAAAA,eAAAA,KAAAA,iBAA+C5yB,EAXCwN,SAYhDolB,EAAAA,eAAAA,KAAAA,kBAAgD5yB,EAZA0N,UAahDklB,EAAAA,eAAAA,KAAAA,eAGE8Q,GAAG0B,EAAiBplC,EAApB0jC,WAhB8C,MAkBhD9Q,EAAAA,eAAAA,KAAAA,mBAGE7kB,EAAAA,IAAAA,IAAAA,KArB8C,MAuBhD6kB,EAAAA,eAAAA,KAAAA,oBAGE8Q,GAAG0B,EAAiBplC,EAApB0jC,WA1B8C,MA8BlDnpD,SACMvZ,KAAAg/B,QAAJ4yB,SACE5xD,KAAAg/B,QAAA4yB,QAAA6S,eAAA,KAAA,YADwB,WAG1BzkE,KAJOsZ,OAOTE,aAGExZ,KAHWoZ,SAIXpZ,KAJWsZ,OAObG,eACMzZ,KAAAg/B,QAAJ4yB,SACE5xD,KAAAg/B,QAAA4yB,QAAA6S,eAAA,KAAA,YADwB,WAG1BzkE,KAJawZ,aAOfH,cACErZ,KADYkZ,YAEZlZ,KAFYoZ,SAKdM,kBACE1Z,KADgBkZ,YAEhBlZ,KAFgBwZ,aAKlBG,oBACE3Z,KADkBkZ,YAElBlZ,KAFkByZ,eAKpBiE,2BACE,MAAMtV,EAAOpI,KAAAiuD,WAAAzpD,cADY,YAEzB4D,EAAAA,eAAAA,KAAAA,IAFyB,KAGzBA,EAAAA,eAAAA,KAAAA,IAHyB,KAIzBA,EAAAA,eAAAA,KAAAA,QAJyB,OAKzBA,EAAAA,eAAAA,KAAAA,SALyB,OAMzBA,EAAAA,eAAAA,KAAAA,OAAkCpI,KAAAg/B,QANT0F,WAQzB1kC,KAAAukE,wBAAAlhE,YARyB+E,GAW3BiV,kBAAAA,GACE,MAAMqpB,EAAUvN,EAAAA,WAAAA,MACZn5B,KAAAmsB,WAAAvf,IADYusB,GAEZn5B,KAAAosB,KAAAxf,IAHmBusB,GAIvBuN,EAIA1mC,KAAAsd,wBARuBopB,IAKrB5kC,EAAAA,EAAAA,MAAK,kCAAAq3B,sBAMT7b,wBAAAA,EAAAA,GACE,MAAMtZ,EAAQ0iC,EADuB1iC,MAE/BC,EAASyiC,EAFsBziC,OAI/ByiE,EAAS7F,EAAAA,EAA6B7gE,KAA7B6gE,kBAJsBx4B,GAK/Bs+B,EAAW3mE,KAAAiuD,WAAAzpD,cALoB,YAMrCmiE,EAAAA,eAAAA,KAAAA,IANqC,KAOrCA,EAAAA,eAAAA,KAAAA,IAPqC,KAQrCA,EAAAA,eAAAA,KAAAA,QAAuCjE,GARF1+D,IASrC2iE,EAAAA,eAAAA,KAAAA,SAAwCjE,GATHz+D,IAUrCjE,KAAAg/B,QAAA4yB,QAVqC+U,EAWrC3mE,KAAA6Z,KAXqC,WAarC,MAAM+sD,EAAQ5mE,KAAAiuD,WAAAzpD,cAbuB,aAcrCoiE,EAAAA,eAAAA,EAAAA,aAdqCF,GAerCE,EAAAA,eAAAA,KAAAA,IAfqC,KAgBrCA,EAAAA,eAAAA,KAAAA,IAAgClE,IAhBKz+D,IAiBrC2iE,EAAAA,eAAAA,KAAAA,QAAoClE,GAAAA,GAjBC,MAkBrCkE,EAAAA,eAAAA,KAAAA,SAAqClE,GAAAA,GAlBA,MAmBrCkE,EAAAA,eAAAA,KAAAA,YAGE,SAASlE,GAAG,EAAZ1+D,MAA0B0+D,IAAG,EAA7Bz+D,OAEFokC,EACEA,EAAAA,YADQu+B,GAGR5mE,KAAAukE,wBAAAlhE,YADKujE,GAKTzpD,sBAAAA,GACE,MAAM6hB,EAAUh/B,KADag/B,QAEvBh7B,EAAQ0iC,EAFe1iC,MAGvBC,EAASyiC,EAHcziC,OAIvBygC,EAAY1F,EAJW0F,UAM7B1F,EAAAA,OAAiB,OAAO6jC,IACxB,MAAMx6B,EAAOroC,KAAAiuD,WAAAzpD,cAPgB,YAQ7B6jC,EAAAA,eAAAA,KAAAA,KAAgCrJ,EARHyjC,QAU7B,MAAMr6D,EAAOpI,KAAAiuD,WAAAzpD,cAVgB,YAW7B4D,EAAAA,eAAAA,KAAAA,IAX6B,KAY7BA,EAAAA,eAAAA,KAAAA,IAZ6B,KAa7BA,EAAAA,eAAAA,KAAAA,QAAmCs6D,GAbN1+D,IAc7BoE,EAAAA,eAAAA,KAAAA,SAAoCs6D,GAdPz+D,IAe7BmE,EAAAA,eAAAA,KAAAA,OAf6Bs8B,GAgB7Bt8B,EAAAA,eAAAA,KAAAA,OAAkC,QAAQ42B,EAARyjC,WAElCziE,KAAA0kE,KAAArhE,YAlB6BglC,GAmB7BroC,KAAAukE,wBAAAlhE,YAnB6B+E,GAqB7BpI,KAAAsd,wBAAAopB,EArB6B2B,GAwB/B3rB,sBAAAA,EAAAA,GACMiE,MAAAA,QAAAA,IAAJ,IAA6B21B,EAAAA,QAC3Bt2C,KAAA0H,UACE4uC,EADF,GAEEA,EAFF,GAGEA,EAHF,GAIEA,EAJF,GAKEA,EALF,GAMEA,EAP8C,IAWlD,GAAAC,EAAU,CACR,MAAMvyC,EAAQuyC,EAAAA,GAAUA,EADhB,GAEFtyC,EAASsyC,EAAAA,GAAUA,EAFjB,GAIFowB,EAAW3mE,KAAAiuD,WAAAzpD,cAJT,YAKRmiE,EAAAA,eAAAA,KAAAA,IAAmCpwB,EAL3B,IAMRowB,EAAAA,eAAAA,KAAAA,IAAmCpwB,EAN3B,IAORowB,EAAAA,eAAAA,KAAAA,QAAuCjE,GAP/B1+D,IAQR2iE,EAAAA,eAAAA,KAAAA,SAAwCjE,GARhCz+D,IASRjE,KAAAg/B,QAAA4yB,QATQ+U,EAUR3mE,KAAA6Z,KAVQ,WAWR7Z,KAXQ4Z,WAeZ+C,uBAKAiY,YAAAA,GACE,MAAMnuB,EAAMzG,KAAAiuD,WAAArqD,OAAuB6pB,EAAvBzpB,MAAuCypB,EAD/BxpB,QAId4iE,EAAc7mE,KAAAiuD,WAAAzpD,cAJA,YAKpBiC,EAAAA,YALoBogE,GAMpB7mE,KAAA0kE,KANoBmC,EAUpB,MAAMC,EAAY9mE,KAAAiuD,WAAAzpD,cAVE,SAWpBsiE,EAAAA,eAAAA,KAAAA,YAA4CnE,GAAGl1C,EAX3B/lB,YAYpBjB,EAAAA,YAZoBqgE,GAiBpB9mE,KAAAyG,IAjBoBqgE,EAmBpB,OAnBoBrgE,EAyBtBsgE,mBACE,IAAK/mE,KAAAg/B,QAALwjC,UAA6B,CAC3B,MAAMA,EAAYxiE,KAAAiuD,WAAAzpD,cADS,SAE3Bg+D,EAAAA,eAAAA,KAAAA,YAA4CxiE,KAAAg/B,QAFjBujC,eAG3BviE,KAAAyG,IAAApD,YAH2Bm/D,GAI3BxiE,KAAAg/B,QAAAwjC,UAJ2BA,EAM7B,OAAOxiE,KAAAg/B,QAPUwjC,UAanB+B,wBACE,IAAKvkE,KAALsjE,KAAgB,CACdtjE,KAAAsjE,KAAYtjE,KAAAiuD,WAAAzpD,cADE,SAEdxE,KAAAsjE,KAAAmB,eAAA,KAAA,YAA4C9B,GAAG3iE,KAFjC+iE,kBAGV/iE,KAAAg/B,QAAJujC,cACEviE,KAAA+mE,mBAAA1jE,YAAoCrD,KADNsjE,MAG9BtjE,KAAAyG,IAAApD,YAAqBrD,KADhBsjE,MAIT,OAAOtjE,KAVesjE,oFCnnD5B,MAAA0D,SACEniE,qBAAAoiE,EAAAC,GACE,IAAA,MAAWn4D,EAAXC,KAA2BjG,OAAAA,QAA3Bm+D,GACMl4D,MAAAA,IAIJ,UAAID,EACFk4D,EAAAA,aAAAA,EADmBj4D,GAGnBjG,OAAAA,OAAck+D,EAAdl+D,MADKiG,IAMXnK,cAAAgnD,GACE,MAAMpsD,EAAOosD,EADWsb,IAElBC,EAAWrkE,SAAAA,cAAuBtD,EAFhBqF,MAGpBrF,EAAJ4nE,YACEL,SAAAA,cAAAA,EAAiCvnE,EADd4nE,YAGrB,MAAMC,EAAQ,CAAC,CAAA7nE,GAAA,EAAA2nE,IAETG,EAAU1b,EARQztB,IASxBmpC,EAAAA,YATwBH,GAUxB,MAAMI,EAAS3b,EAAAA,SAAAA,UAAAA,KAVS,KAWxB0b,EAAAA,MAAAA,UAA0B,UAAAC,KAG1BD,EAAAA,aAAAA,QAdwB,oBAgBxB,KAAOD,EAAAA,OAAP,GAAyB,CACvB,MAAMG,EAAA7+D,EAAAq+D,GAAoBK,EAAMA,EAAAA,OADT,GAEvB,GAAI1+D,EAAAA,IAAU6+D,EAAAA,SAAd/lE,OAAsC,CACpC4lE,EADoCrlC,MAAA,SAKtC,MAAMylC,EAAQD,EAAAA,WAAkBH,EAAMA,EAAAA,OAANA,GAPT,IAQvB,GAAA,OAAII,EAAgB,SAIpB,MAAM5iE,KAAAA,GAZiB4iE,EAavB,GAAA,UAAI5iE,EAAkB,CACpBmiE,EAAAA,YAAiBlkE,SAAAA,eAAwB2kE,EADrB14D,QAAA,SAKtB,MAAM24D,EAAY5kE,SAAAA,cAlBK+B,GAmBvBmiE,EAAAA,YAnBuBU,GAoBnBD,EAAJL,YACEL,SAAAA,cAAAA,EAAkCU,EADdL,YAIlBK,EAAAA,UAAkBA,EAAAA,SAAAA,OAAtB,EACEJ,EAAAA,KAAW,CAAAI,GAAA,EAAAC,IACFD,EAAJ14D,OACL24D,EAAAA,YAAsB5kE,SAAAA,eAAwB2kE,EADxB14D,SAa5BnK,cAAAgnD,GACE,MAAMnkD,EAAY,UAAUmkD,EAAAA,SAAAA,UAAAA,KAAV,QAClBA,EAAAA,IAAAA,MAAAA,UAFwBnkD,EAGxBmkD,EAAAA,IAAAA,QAHwB,6GCtE5B,IAAAvoD,EAAAC,EAAA,GAKAqkE,EAAArkE,EAAA,IAwBA,MAAAskE,eACEnkE,YAAAA,EAAAA,GACE1D,KAAAG,IADqBA,EAErB4xB,EAAOA,GAFc,GAGrB/xB,KAAA8nE,OAAc,YAAAvlE,KAHOpC,GAIrBH,KAAAomB,YAAoBpmB,KAAA8nE,QAAe/1C,EAAhB3L,aAJE,GAKrBpmB,KAAAqmB,gBAAuB0L,EAAAA,kBALF,EAMrB/xB,KAAA+nE,OACEh2C,EAAAA,QACA,SAAAi2C,wBACE,OAAO,IADwB3hE,gBAInCrG,KAAAioE,UAZqB,EAarBjoE,KAAAkoE,gBAAuBn/D,OAAAA,OAbF,MAgBvBo/D,aAAAA,EAAAA,EAAAA,GACE,MAAMp2C,EAAO,CAAA6F,MAAAA,EAAAp2B,IAAAA,GAIb,IAAA,MAAA2d,KAAAipD,EACEr2C,EAAAA,GAAaq2C,EADejpD,GAG9B,OAAOnf,KAAAoG,QAR2B2rB,GAWpCs2C,YAAAA,GACE,OAAOroE,KAAAoG,QADcgiE,GAIvBhiE,QAAAA,GACE,MAAMkiE,EAAMtoE,KADA+nE,SAENQ,EAAQvoE,KAFFioE,YAGNO,EAAkBxoE,KAAAkoE,gBAAAK,GAA8B,CAH1CD,IAAAA,GAOZA,EAAAA,KAAAA,MAAgBtoE,KAPJG,KAQZmoE,EAAAA,gBAAsBtoE,KARVqmB,gBASZ,IAAA,MAAA0iB,KAAuB/oC,KAAvBomB,YAAyC,CACvC,MAAMpX,EAAQhP,KAAAomB,YADyB2iB,QAEvC,IAAI/5B,GAGJs5D,EAAAA,iBAAAA,EALuCt5D,GAOzC,GAAIhP,KAAA8nE,QAAe,UAAf/1C,GAAkC,QAAtCA,EAAqD,CACnDu2C,EAAAA,iBAAAA,QAA8B,SAASv2C,EAAT6F,SAAuB7F,EAAAA,IAAvB,KAC9By2C,EAAAA,eA9FN,SAgGMA,EAAAA,eAhGN,IAkGIF,EAAAA,aAtBY,cAwBRv2C,EAAJ02C,UACEH,EAAAA,QAAc,SAAAtlE,GACZ+uB,EAAAA,QAAau2C,EADcxoD,UAI/BwoD,EAAAA,mBAAyBtoE,KAAA0oE,cAAAjzC,KAAAz1B,KA7BbuoE,GA8BZD,EAAAA,WAAiBtoE,KAAA2nB,WAAA8N,KAAAz1B,KA9BLuoE,GAgCZC,EAAAA,kBAAmCz2C,EAhCvB42C,kBAiCZH,EAAAA,OAAwBz2C,EAjCZ62C,OAkCZJ,EAAAA,QAAyBz2C,EAlCb02C,QAmCZD,EAAAA,WAA4Bz2C,EAnChBpK,WAqCZ2gD,EAAAA,KArCY,MAuCZ,OAvCYC,EA0Cd5gD,WAAAA,EAAAA,GACE,MAAM6gD,EAAiBxoE,KAAAkoE,gBADFK,GAErBC,GAKIA,EAAJ7gD,YACE6gD,EAAAA,WAD6BxlE,GAKjC0lE,cAAAA,EAAAA,GACE,MAAMF,EAAiBxoE,KAAAkoE,gBADCK,GAExB,IAAAC,EAAqB,OAKrB,MAAMF,EAAME,EAPYF,IAQxB,GAAIA,EAAAA,YAAAA,GAAuBE,EAA3BG,kBAA6D,CAC3DH,EAD2DG,2BAEpDH,EAFoDG,kBAK7D,GAAA,IAAIL,EAAAA,WAAsB,OAI1B,KAAMC,KAASvoE,KAAfkoE,iBAAsC,cAM/BloE,KAAAkoE,gBAvBiBK,GA0BxB,GAAID,IAAAA,EAAAA,QAAoBtoE,KAAxB8nE,OAAqC,CAC/BU,EAAJC,SACED,EAAAA,QAAuBF,EADGxoD,QADO,OAMrC,MAAM+oD,EAAYP,EAAAA,QAlKtB,IA2KI,KA3KJ,MAwKMO,GAxKN,MAyKML,EAAAA,iBAIAK,IAAcL,EAFhBM,eAGE,CACIN,EAAJC,SACED,EAAAA,QAAuBF,EADGxoD,QAD5B,OAOF,MAAM/T,EAlJV,SAAAg9D,eAAAT,GACE,MAAMj9D,EAAOi9D,EADc1iE,SAE3B,MAAA,iBAAIyF,EAA0BA,GAGhBnF,EAAAA,EAAAA,eALamF,GAAAgB,OAkJX08D,CAnDUT,GAoDxB,GAtLJ,MAsLQO,EAAwC,CAC1C,MAAMG,EAAcV,EAAAA,kBADsB,iBAEpCj+D,EAAU,2BAAA4yB,KAF0B+rC,GAG1CR,EAAAA,OAAsB,CACpB5wC,MAAOrtB,SAASF,EAATE,GADa,IAAAwB,MAAAA,SAIjBA,EACLy8D,EAAAA,OAAsB,CACpB5wC,MADoB,EAAA7rB,MAAAA,IAIby8D,EAAJC,SACLD,EAAAA,QAAuBF,EADUxoD,QAKrCmpD,cAAAA,GACE,OAAOjpE,KAAAkoE,gBAAAK,GADYD,IAIrBY,iBAAAA,GACE,OAAOX,KAASvoE,KADMkoE,gBAIxBiB,aAAAA,GACE,MAAMb,EAAMtoE,KAAAkoE,gBAAAK,GADMD,WAEXtoE,KAAAkoE,gBAFWK,GAGlBD,EAHkBv/C,4BAQtB,MAAAqgD,iBACE1lE,YAAAA,GACE1D,KAAAqpE,QADkBjlD,EAElBpkB,KAAAspE,SAAgB,IAAAzB,eAAmBzjD,EAAnBjkB,IAA+B,CAC7CimB,YAAahC,EADgCgC,YAE7CC,gBAAiBjC,EAF4BiC,kBAI/CrmB,KAAAupE,gBAAuBnlD,EANLkC,eAOlBtmB,KAAAwmD,mBAPkB,KAQlBxmD,KAAAwpE,qBARkB,GAWpBC,4BAAAA,GACE,MAAM7gE,EAAI5I,KAAAwpE,qBAAAr2C,QADwBtC,GAE9BjoB,GAAJ,GACE5I,KAAAwpE,qBAAAp2C,OAAAxqB,EADU,GAKdouB,iBACEz2B,EAAAA,EAAAA,SACGP,KADHO,mBADc,2DAKdP,KAAAwmD,mBAA0B,IAAAkjB,kCACxB1pE,KADwBspE,SAExBtpE,KAPYqpE,SASd,OAAOrpE,KATOwmD,mBAYhB7uB,eAAAA,EAAAA,GACE,MAAM9G,EAAS,IAAA84C,mCACb3pE,KADaspE,SAAA1xC,EADUp2B,GAMzBqvB,EAAAA,SAAkB7wB,KAAAypE,4BAAAh0C,KANOz1B,MAOzBA,KAAAwpE,qBAAAngE,KAPyBwnB,GAQzB,OARyBA,EAW3BiG,kBAAAA,GACM92B,KAAJwmD,oBACExmD,KAAAwmD,mBAAAh1B,OAD2BpsB,GAGbpF,KAAAwpE,qBAAA5hE,MAJQ,GAKxB2/C,SAAgB,SAAA12B,GACdA,EAAAA,OADgCzrB,QAOtC,MAAAskE,kCACEhmE,YAAAA,EAAAA,GACE1D,KAAAspE,SAD2BM,EAG3B,MAAM73C,EAAO,CACX42C,kBAAmB3oE,KAAA6pE,mBAAAp0C,KADRz1B,MAEX4oE,OAAQ5oE,KAAA8pE,QAAAr0C,KAFGz1B,MAGXyoE,QAASzoE,KAAA+pE,SAAAt0C,KAHEz1B,MAIX2nB,WAAY3nB,KAAA2mD,YAAAlxB,KAJDz1B,OAMbA,KAAAgqE,KAAY5lD,EATejkB,IAU3BH,KAAAiqE,eAAsBL,EAAAA,YAVK73C,GAW3B/xB,KAAAkqE,4BAX2B,EAAA5mE,EAAAmJ,2BAY3BzM,KAAAmqE,cAAqB/lD,EAAAA,eAZM,EAa3BpkB,KAAAumD,eAAsBniC,EAbK1iB,OAc3B1B,KAAAupE,gBAAuBnlD,EAdIkC,eAetBtmB,KAADupE,iBAA0BvpE,KAA9BmqE,gBACEnqE,KAAAmqE,eADgD,GAIlDnqE,KAAAqmD,uBAnB2B,EAoB3BrmD,KAAAsmD,mBApB2B,EAsB3BtmD,KAAAoqE,cAtB2B,GAuB3BpqE,KAAA2nD,UAvB2B,GAwB3B3nD,KAAAynD,OAxB2B,EAyB3BznD,KAAAqqE,kBAzB2Bt8D,EA0B3B/N,KAAA0nD,UA1B2B,KA4B3B1nD,KAAA2nB,WA5B2B,KA+B7BkiD,qBACE,MAAMS,EAAmBtqE,KADNiqE,eAEbM,EAAiBvqE,KAAAspE,SAAAL,cAFJqB,GAIbE,kBAAoB1lE,GACjBylE,EAAAA,kBADyBzlE,IAG5B2lE,mBAAAA,EAAAC,gBAAAA,IAGF,EAAA9C,EAAA+C,kCAAiC,CAAAH,kBAAAA,kBAEnC1C,OAAQ9nE,KAAAspE,SAF2BxB,OAGnCxhD,eAAgBtmB,KAHmBupE,gBAInCrkD,aAAcllB,KAJqBmqE,gBAOrCM,IACEzqE,KAAAsmD,mBADsB,GAIxBtmD,KAAAumD,eAAsBmkB,GAAmB1qE,KArBtBumD,eAuBnBvmD,KAAA0nD,WAAiBkjB,EAAAA,EAAAA,2BAvBEJ,mBAyBfxqE,KAAJsmD,mBAKEtmD,KAAAspE,SAAAH,aAL0BmB,GAQ5BtqE,KAAAkqE,2BAjCmBtnE,UAoCrBknE,QAAAA,GACE,GAAA/3C,EACE,GAAI/xB,KAAA2nD,UAAAjmD,OAAJ,EAA+B,CACH1B,KAAA2nD,UADGtqB,QAE7BwqB,QAA0B,CAAE74C,MAAO+iB,EAAThmB,MAAqBmlB,MAArB,SAE1BlxB,KAAAoqE,cAAA/gE,KAAwB0oB,EADnBhmB,OAIT/L,KAAAynD,OATY,EAUZ,KAAIznD,KAAAoqE,cAAA1oE,OAAJ,GAAA,CAGA1B,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UAhBY,IAmBdoiB,SAAAA,GACE,MAAM5pE,EAAMH,KADGgqE,KAETlyC,GAAY+yC,EAAAA,EAAAA,2BAAAA,EAFH1qE,GAGfH,KAAAqqE,aAHevyC,EAIf93B,KAAAkqE,2BAAArnE,OAJei1B,GAKf93B,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,OADkD/vB,MAGpD93B,KAAA2nD,UARe,GASf3nD,KAAAoqE,cATe,GAYjBzjB,YAAAA,GACM3mD,KAAJ2nB,YACE3nB,KAAA2nB,WAAgB,CACdsP,OAAQ5rB,EADM4rB,OAEdvO,MAAOrd,EAAAA,iBAAwBA,EAAxBA,MAAqCrL,KAF9BumD,iBAOpBjkD,eACE,OAAOtC,KADM0nD,UAIflwB,uBACE,OAAOx3B,KADcsmD,kBAIvB/uB,2BACE,OAAOv3B,KADkBqmD,sBAI3B5uB,oBACE,OAAOz3B,KADWumD,eAIpBuB,mBACE,OAAO9nD,KAAAkqE,2BADUriD,QAInBhjB,aACE,GAAI7E,KAAJqqE,aACE,MAAMrqE,KADeqqE,aAGvB,GAAIrqE,KAAAoqE,cAAA1oE,OAAJ,EAAmC,CAEjC,MAAO,CAAEsN,MADKhP,KAAAoqE,cADmB/sC,QAEVnM,MAAhB,GAET,GAAIlxB,KAAJynD,MACE,MAAO,CAAEz4C,WAAFjB,EAAoBmjB,MAApB,GAET,MAAM22B,GAXK,EAAAvkD,EAAAmJ,2BAYXzM,KAAA2nD,UAAAt+C,KAZWw+C,GAaX,OAAOA,EAbIhgC,QAgBb2J,OAAAA,GACExxB,KAAAynD,OADa,EAEbznD,KAAAkqE,2BAAArnE,OAFauC,GAGbpF,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UANa,GAOT3nD,KAAAspE,SAAAJ,iBAA+BlpE,KAAnCiqE,iBACEjqE,KAAAspE,SAAAH,aAA2BnpE,KAD4BiqE,gBAGzDjqE,KAAAwmD,mBAVa,MAejB,MAAAmjB,mCACEjmE,YAAAA,EAAAA,EAAAA,GACE1D,KAAAspE,SAD+BM,EAE/B,MAAM73C,EAAO,CACX62C,OAAQ5oE,KAAA8pE,QAAAr0C,KADGz1B,MAEX2nB,WAAY3nB,KAAA2mD,YAAAlxB,KAFDz1B,OAIbA,KAAA8qE,WAAkBlB,EAAAA,aAAAA,EAAAA,EANa73C,GAO/B/xB,KAAA2nD,UAP+B,GAQ/B3nD,KAAAioD,aAR+B,KAS/BjoD,KAAAynD,OAT+B,EAW/BznD,KAAA2nB,WAX+B,KAY/B3nB,KAAA+qE,SAZ+B,KAejCC,SACMhrE,KAAJ+qE,UACE/qE,KAAA+qE,SADiB/qE,MAKrB8pE,QAAAA,GACE,MAAM/9D,EAAQV,EADFU,MAEZ,GAAI/L,KAAA2nD,UAAAjmD,OAAJ,EAA+B,CACH1B,KAAA2nD,UADGtqB,QAE7BwqB,QAA0B,CAAE74C,MAAFjD,EAAgBmlB,MAAhB,SAE1BlxB,KAAAioD,aADKl8C,EAGP/L,KAAAynD,OARY,EASZznD,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UAZY,GAaZ3nD,KAbYgrE,SAgBdrkB,YAAAA,IACO3mD,KAADu3B,sBAA8Bv3B,KAAlC2nB,YACE3nB,KAAA2nB,WAAgB,CACdsP,OAAQj0B,EAFuCi0B,SAOrDM,2BACE,OADyB,EAI3B1yB,aACE,GAAA,OAAI7E,KAAAioD,aAA4B,CAC9B,MAAMl8C,EAAQ/L,KADgBioD,aAE9BjoD,KAAAioD,aAF8B,KAG9B,MAAO,CAAEj5C,MAAFjD,EAAgBmlB,MAAhB,GAET,GAAIlxB,KAAJynD,MACE,MAAO,CAAEz4C,WAAFjB,EAAoBmjB,MAApB,GAET,MAAM22B,GATK,EAAAvkD,EAAAmJ,2BAUXzM,KAAA2nD,UAAAt+C,KAVWw+C,GAWX,OAAOA,EAXIhgC,QAcb2J,OAAAA,GACExxB,KAAAynD,OADa,EAEbznD,KAAA2nD,UAAApxB,SAAuB,SAAAsxB,GACrBA,EAAAA,QAA0B,CAAE74C,WAAFjB,EAAoBmjB,MAApB,OAE5BlxB,KAAA2nD,UALa,GAMT3nD,KAAAspE,SAAAJ,iBAA+BlpE,KAAnC8qE,aACE9qE,KAAAspE,SAAAH,aAA2BnpE,KADwB8qE,YAGrD9qE,KATagrE,mGC5ZjB,SAAAH,0BAAA/qD,EAAA3f,GACE,GAAI2f,MAAAA,GAAmBA,IAAAA,GAAgB3f,EAAAA,WAAvC,SACE,OAAO,IAAAmD,EAAAsc,oBAAwB,gBAAAzf,EADgC,MAGjE,OAAO,IAAAmD,EAAAuc,4BACL,+BAAAC,4BAAA3f,MAL4C2f,gCAhBhD,SAAA8qD,0BAAAJ,GACE,MAAMS,EAAqBT,EADyB,uBAEpD,GAAAS,EAAwB,CACtB,IAAI3oE,GAAW4oE,EAAAA,EAAAA,yCADOD,GAEtB,GAAI3oE,EAAAA,SAAJ,KACE,IACEA,EAAWH,mBADTG,GAEF,MAAAF,IAEJ,IAAIC,EAAAA,EAAAA,WAAJC,GACE,OADuBA,EAI3B,OAboD,yCAzCtD,SAAAqoE,kCAA0CH,kBAAAA,EAAA1C,OAAAA,EAAAxhD,eAAAA,EAAApB,aAA1CA,KAME3kB,EAAAA,EAAAA,QAAO+lB,EAAP/lB,EADC,6CAED,MAAM4qE,EAAe,CACnBV,oBADmB,EAEnBC,qBAFmB38D,GAKfrM,EAAS6I,SAASigE,EAATjgE,kBAPd,IAQD,IAAK6E,OAAAA,UAAL1N,GACE,OAD6BypE,EAI/BA,EAAAA,gBAZCzpE,EAcD,GAAIA,GAAU,EAAd4kB,EAGE,OAHgC6kD,EAMlC,GAAIjmD,IAAJ4iD,EACE,OAD2BqD,EAG7B,GAAA,UAAIX,EAAAA,iBACF,OADkDW,EAKpD,GAAA,cADwBX,EAAAA,qBA3BvB,YA6BC,OADkCW,EAIpCA,EAAAA,oBAhCC,EAiCD,OAjCCA,4BA8DH,SAAAC,uBAAAtrD,GACE,OAAOA,MAAAA,GAD+B,MACbA,GA5E3B,IAAAxc,EAAAC,EAAA,GAfA8nE,EAAA9nE,EAAA,IAAAgf,EAAAhf,EAAA,uGC6BA,SAAA2nE,wCAAAD,GACE,IAAIK,GAD+D,EAI/DhuB,EAAMiuB,cAAAA,cAAAA,KAAAA,KAJyDN,GAKnE,GAAA3tB,EAAS,CACPA,EAAMA,EADC,GAEP,IAAIh7C,EAAWkpE,eAFRluB,GAGPh7C,EAAWyN,SAHJzN,GAIPA,EAAWmpE,cAJJnpE,GAKPA,EAAWopE,cALJppE,GAMP,OAAOqpE,cANArpE,GAYTg7C,EAuEA,SAAAsuB,gBAAAC,GACE,MAAMxhE,EADwC,GAE9C,IAF8C8C,EAK9C,MAAM2+D,EAAOP,cAAAA,kCALiC,MAM9C,KAAA,QAAQp+D,EAAQ2+D,EAAAA,KAATD,KAAqD,CAC1D,IAAI,CAAAhrD,EAAAkrD,EAAAC,GADsD7+D,EAE1D0T,EAAItW,SAAAA,EAFsD,IAG1D,GAAIsW,KAAJxW,GAEE,GAAA,IAAIwW,EAAS,WAKfxW,EAAAA,GAAa,CAAA0hE,EAAAC,GAEf,MAAMC,EAlBwC,GAmB9C,IAAK,IAAIprD,EAAT,EAAgBA,EAAIxW,EAApB3I,QACQmf,KAANxW,IADFwW,EAAyC,CAKvC,IAAIkrD,EAAAC,GAAe3hE,EALoBwW,GAMvCmrD,EAAOR,eANgCQ,GAOvC,GAAAD,EAAU,CACRC,EAAOj8D,SADCi8D,GAER,IAAInrD,IACFmrD,EAAOP,cADIO,IAIfC,EAAAA,KAbuCD,GAezC,OAAOC,EAAAA,KAlCuC,IAvE1CL,CAjB6DX,GAkBnE,GAAA3tB,EAAS,CAGP,OAAOquB,cADUD,cAFVpuB,IAOTA,EAAMiuB,cAAAA,WAAAA,KAAAA,KAzB6DN,GA0BnE,GAAA3tB,EAAS,CACPA,EAAMA,EADC,GAEP,IAAIh7C,EAAWkpE,eAFRluB,GAGPh7C,EAAWopE,cAHJppE,GAIP,OAAOqpE,cAJArpE,GAUT,SAAAipE,cAAAW,EAAAC,GACE,OAAO,IAAA/hE,OACL,cAAA8hE,EAAA,sDAF4CC,GAehD,SAAAC,WAAAC,EAAAr9D,GACE,GAAAq9D,EAAc,CACZ,IAAK,iBAAA9pE,KAALyM,GACE,OADiCA,EAGnC,IACE,MAAMs9D,EAAU,IAAAC,YAAAF,EAA0B,CAAEG,OAD1C,IAEI9gE,EAAQiV,MAAA8rD,KAAAz9D,GAAkB,SAAA09D,GAC9B,OAD4C,IACrCA,EAAAA,WAAAA,MAET19D,EAAQs9D,EAAAA,OAAe,IAAAtmE,WALrB0F,IAMF4/D,GANE,EAOF,MAAA58D,GAGA,GAAI,YAAAnM,KAAJ8pE,GAEE,IACEr9D,EAAQ7M,mBAAmB0N,OADzBb,IAEFs8D,GAFE,EAGF,MAAAqB,MAIR,OAxBmC39D,EA0BrC,SAAA28D,cAAA38D,GACE,GAAIs8D,GAAsB,cAAA/oE,KAA1ByM,GAAqD,CAEnDA,EAAQo9D,WAAAA,QAF2Cp9D,GAGnDs8D,IAEEt8D,EAAQo9D,WAAAA,aAFcp9D,IAK1B,OAT4BA,EA+C9B,SAAAw8D,eAAAx8D,GACE,GAAIA,EAAAA,WAAJ,KAA2B,CACzB,MAAMi9D,EAAQj9D,EAAAA,MAAAA,GAAAA,MADW,OAGzB,IAAK,IAAIpG,EAAT,EAAgBA,EAAIqjE,EAApBvqE,SAAAkH,EAAuC,CACrC,MAAMgkE,EAAYX,EAAAA,GAAAA,QADmB,KAErC,IAAA,IAAIW,EAAkB,CACpBX,EAAAA,GAAWA,EAAAA,GAAAA,MAAAA,EADSW,GAEpBX,EAAAA,OAAerjE,EAFK,EAItBqjE,EAAAA,GAAWA,EAAAA,GAAAA,QAAAA,SAN0B,MAQvCj9D,EAAQi9D,EAAAA,KAXiB,KAa3B,OAd6Bj9D,EAgB/B,SAAAy8D,cAAAoB,GAEE,MAAMC,EAAcD,EAAAA,QAFW,KAG/B,IAAA,IAAIC,EAIF,OAJsBD,EAUxB,OAAOT,WAJUS,EAAAA,MAAAA,EATcC,GAUbD,EAAAA,MAAeC,EAVF,GAYjBC,QAAAA,UAZiB,KAejC,SAAArB,cAAA18D,GAWE,OAAKA,EAAAA,WAAD,OAA2B,uBAAAzM,KAA/ByM,GAAmEA,EAU5DA,EAAA9B,QAAA,kDAEL,SAAA7C,EAAA2iE,EAAAX,EAAAlmE,GACE,GAAIkmE,MAAAA,GAAJ,MAAwBA,EAMtB,OAAOD,WAAAA,EAHPjmE,GADAA,EAAOA,EAAAA,QAAAA,KAFiC,MAGjC+G,QAAA,sBAAmC,SAAAC,EAAA8/D,GACxC,OAAOrhE,OAAAA,aAAoBrB,SAAAA,EADmC,SAKlE,IACEpE,EAAOm3B,KADLn3B,GAEF,MAAAuI,IACF,OAAO09D,WAAAA,EAZmCjmE,MAiBhD,MAnMmE,wFCdrE,IAAA7C,EAAAC,EAAA,GAKAqkE,EAAArkE,EAAA,IAaA,SAAA2pE,mBAAAC,EAAA9mD,EAAA+mD,GACE,MAAO,CACLC,OADK,MAAAF,QAAAA,EAGLG,OAAQF,GAHHE,OAILl8B,KAJK,OAKLm8B,YAAalnD,EAAAA,UALR,cAMLmnD,SANK,UAUT,SAAAC,cAAArnD,GACE,MAAM+mD,EAAU,IADkBO,QAElC,IAAA,MAAA3kC,KAAA3iB,EAAoC,CAClC,MAAMpX,EAAQoX,EADoB2iB,QAElC,IAAI/5B,GAGJm+D,EAAAA,OAAAA,EALkCn+D,GAOpC,OATkCm+D,mBAapC,MAAAQ,eACEjqE,YAAAA,GACE1D,KAAAokB,OADkBA,EAElBpkB,KAAA8nE,OAAc,YAAAvlE,KAAiB6hB,EAFbjkB,KAGlBH,KAAAomB,YAAoBpmB,KAAA8nE,QAAe1jD,EAAhBgC,aAHD,GAKlBpmB,KAAAwmD,mBALkB,KAMlBxmD,KAAAwpE,qBANkB,GASpBxiB,6BACE,OAAOhnD,KAAAwmD,oBAAAS,SADoB,EAI7BjwB,iBACEz2B,EAAAA,EAAAA,SACGP,KADHO,mBADc,yDAKdP,KAAAwmD,mBAA0B,IAAAonB,qBALZ5tE,MAMd,OAAOA,KANOwmD,mBAShB7uB,eAAAA,EAAAA,GACE,GAAIn2B,GAAOxB,KAAXgnD,uBACE,OADsC,KAGxC,MAAMn2B,EAAS,IAAAg9C,0BAAA7tE,KAAA43B,EAJUp2B,GAKzBxB,KAAAwpE,qBAAAngE,KALyBwnB,GAMzB,OANyBA,EAS3BiG,kBAAAA,GACM92B,KAAJwmD,oBACExmD,KAAAwmD,mBAAAh1B,OAD2BpsB,GAGbpF,KAAAwpE,qBAAA5hE,MAJQ,GAKxB2/C,SAAgB,SAAA12B,GACdA,EAAAA,OADgCzrB,QAOtC,MAAAwoE,qBACElqE,YAAAA,GACE1D,KAAAwnD,QADkB5E,EAElB5iD,KAAA6+D,QAFkB,KAGlB7+D,KAAAinD,QAHkB,EAIlBjnD,KAAA0nD,UAJkB,KAKlB,MAAMtjC,EAASw+B,EALGx+B,OAMlBpkB,KAAA8tE,iBAAwB1pD,EAAAA,kBANN,EAOlBpkB,KAAAumD,eAAsBniC,EAPJ1iB,OAQlB1B,KAAA+tE,oBARkB,EAAAzqE,EAAAmJ,2BASlBzM,KAAAmqE,cAAqB/lD,EAAAA,eATH,EAUlBpkB,KAAAupE,gBAAuBnlD,EAVLkC,eAWbtmB,KAADupE,iBAA0BvpE,KAA9BmqE,gBACEnqE,KAAAmqE,eADgD,GAIlD,oBAAI6D,kBACFhuE,KAAAiuE,iBAAwB,IADkBD,iBAG5ChuE,KAAAqmD,uBAA8BjiC,EAlBZe,cAmBlBnlB,KAAAsmD,mBAA0BliC,EAnBRc,aAqBlBllB,KAAAkuE,SAAgBT,cAAcztE,KAAAwnD,QArBZphC,aAuBlB,MAAMjmB,EAAMikB,EAvBMjkB,IAwBlBsF,MAAAA,EAEEynE,mBACEltE,KADFktE,SAEEltE,KAFFktE,iBAGEltE,KALJyF,mBAAAA,MAQQG,IACJ,KAAKwlE,EAAAA,EAAAA,wBAAuBxlE,EAA5Bka,QACE,MAAM+qD,EAAAA,EAAAA,2BAA0BjlE,EAA1BilE,OADsC1qE,GAG9CH,KAAA6+D,QAAej5D,EAAAA,KAJCkrB,YAKhB9wB,KAAA+tE,mBALgBnrE,UAOhB,MAAM4nE,kBAAoB1lE,GACjBc,EAAAA,QAAAA,IADyBd,IAG5B2lE,mBAAAA,EAAAC,gBAAAA,IAGF,EAAA9C,EAAA+C,kCAAiC,CAAAH,kBAAAA,kBAEnC1C,OAAQ9nE,KAAAwnD,QAF2BsgB,OAGnCxhD,eAAgBtmB,KAHmBupE,gBAInCrkD,aAAcllB,KAJqBmqE,gBAOrCnqE,KAAAsmD,kBApBgBmkB,EAsBhBzqE,KAAAumD,eAAsBmkB,GAAmB1qE,KAtBzBumD,eAwBhBvmD,KAAA0nD,WAAiBkjB,EAAAA,EAAAA,2BAxBDJ,oBA4BXxqE,KAADqmD,uBAA+BrmD,KAAnCsmD,mBACEtmD,KAAAwxB,OAAY,IAAAluB,EAAA0c,eAD6C,8BApC/Dva,MAwCSzF,KAAA+tE,mBAhESlrE,QAkElB7C,KAAA2nB,WAlEkB,KAqEpBmgC,mBACE,OAAO9nD,KAAA+tE,mBADUlmD,QAInBvlB,eACE,OAAOtC,KADM0nD,UAIfjwB,oBACE,OAAOz3B,KADWumD,eAIpB/uB,uBACE,OAAOx3B,KADcsmD,kBAIvB/uB,2BACE,OAAOv3B,KADkBqmD,sBAI3BxhD,mBACQ7E,KAAA+tE,mBADKlmD,QAEX,MAAM7Y,MAAAA,EAAAkiB,KAAAA,SAAwBlxB,KAAA6+D,QAFnB3nC,OAGX,GAAAhG,EACE,MAAO,CAAAliB,MAAAA,EAAAkiB,KAAAA,GAETlxB,KAAAinD,SAAgBj4C,EANLxD,WAOPxL,KAAJ2nB,YACE3nB,KAAA2nB,WAAgB,CACdsP,OAAQj3B,KADMinD,QAEdv+B,MAAO1oB,KAFOumD,iBAMlB,MAAO,CAAEv3C,MADM,IAAAhJ,WAAAgJ,GAbJ3C,OAca6kB,MAAjB,GAGTM,OAAAA,GACMxxB,KAAJ6+D,SACE7+D,KAAA6+D,QAAArtC,OADgBpsB,GAGdpF,KAAJiuE,kBACEjuE,KAAAiuE,iBADyBllD,SAO/B,MAAA8kD,0BACEnqE,YAAAA,EAAAA,EAAAA,GACE1D,KAAAwnD,QAD8B5E,EAE9B5iD,KAAA6+D,QAF8B,KAG9B7+D,KAAAinD,QAH8B,EAI9B,MAAM7iC,EAASw+B,EAJex+B,OAK9BpkB,KAAA8tE,iBAAwB1pD,EAAAA,kBALM,EAM9BpkB,KAAAmuE,iBAN8B,EAAA7qE,EAAAmJ,2BAO9BzM,KAAAqmD,uBAA8BjiC,EAPAe,cAS9B,oBAAI6oD,kBACFhuE,KAAAiuE,iBAAwB,IADkBD,iBAI5ChuE,KAAAkuE,SAAgBT,cAAcztE,KAAAwnD,QAbAphC,aAc9BpmB,KAAAkuE,SAAApW,OAAA,QAA8B,SAAAlgC,KAAkBp2B,EAAlB,KAE9B,MAAMrB,EAAMikB,EAhBkBjkB,IAiB9BsF,MAAAA,EAEEynE,mBACEltE,KADFktE,SAEEltE,KAFFktE,iBAGEltE,KALJyF,mBAAAA,MAQQG,IACJ,KAAKwlE,EAAAA,EAAAA,wBAAuBxlE,EAA5Bka,QACE,MAAM+qD,EAAAA,EAAAA,2BAA0BjlE,EAA1BilE,OADsC1qE,GAG9CH,KAAAmuE,gBAJgBvrE,UAKhB5C,KAAA6+D,QAAej5D,EAAAA,KALCkrB,eARpBrrB,OAeSL,IACL,GAAA,eAAIA,GAAAA,KAGJ,MAJeA,KAOnBpF,KAAA2nB,WAvC8B,KA0ChC4P,2BACE,OAAOv3B,KADkBqmD,sBAI3BxhD,mBACQ7E,KAAAmuE,gBADKtmD,QAEX,MAAM7Y,MAAAA,EAAAkiB,KAAAA,SAAwBlxB,KAAA6+D,QAFnB3nC,OAGX,GAAAhG,EACE,MAAO,CAAAliB,MAAAA,EAAAkiB,KAAAA,GAETlxB,KAAAinD,SAAgBj4C,EANLxD,WAOPxL,KAAJ2nB,YACE3nB,KAAA2nB,WAAgB,CAAEsP,OAAQj3B,KADPinD,UAIrB,MAAO,CAAEj4C,MADM,IAAAhJ,WAAAgJ,GAVJ3C,OAWa6kB,MAAjB,GAGTM,OAAAA,GACMxxB,KAAJ6+D,SACE7+D,KAAA6+D,QAAArtC,OADgBpsB,GAGdpF,KAAJiuE,kBACEjuE,KAAAiuE,iBADyBllD,YC3R/BqlD,yBAAA,GAGA,SAAA7qE,oBAAA8qE,GAEA,IAAAC,EAAAF,yBAAAC,GACA,QAAAtgE,IAAAugE,EACA,OAAAA,EAAA3uE,QAGA,IAAAC,EAAAwuE,yBAAAC,GAAA,CAGA1uE,QAAA,IAIA4uE,oBAAAF,GAAAzuE,EAAAA,EAAAD,QAAA4D,qBAGA,OAAA3D,EAAAD,w6GCLA,IAAA4iB,EAAAhf,oBAAA,GAYAirE,EAAAjrE,oBAAA,GASAD,EAAAC,oBAAA,GArCAkrE,EAAAlrE,oBAAA,IAAAsf,EAAAtf,oBAAA,IAAAmrE,EAAAnrE,oBAAA,IAAAorE,EAAAprE,oBAAA,IAAAqrE,EAAArrE,oBAAA,IAoFqC,CAEnC,MAAM6lE,EAAmBx1C,oBAAAA,IAAAA,iBACzB,IAHmC+5C,GAInC,EAAAprD,EAAAjd,sBACEqoE,EAAiB/5C,oBAAAA,IAAAA,iBAGnB7P,EAAAA,EAAAA,6BAA2BQ,GACrBopD,IAAkBpoE,EAAAA,EAAAA,iBAAgBgf,EAAtCpkB,KACS,IAAAwtE,EAD0CppD,GAG5C,IAAA6kD,EAJ4B7kD","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isDataScheme,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(String.fromCharCode((char >> 8) & 0xff));\n    buf.push(String.fromCharCode(char & 0xff));\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return this._pdfInfo.isPureXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this._annotationsPromise || this._annotationsIntent !== intent) {\n      this._annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this._annotationsIntent = intent;\n    }\n    return this._annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  getXfa() {\n    return (this._xfaPromise ||= this._transport.getPageXfa(this._pageIndex));\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage: annotationStorage?.serializable || null,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty?.(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get loadingTaskSettled() {\n    return this.loadingTask._capability.settled;\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.loadingTaskSettled) {\n      const annotationStorageResetModified = this.loadingTask.promise\n        .then(pdfDocument => {\n          // Avoid initializing the `annotationStorage` if it doesn't exist.\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        })\n        .catch(() => {});\n      waitOn.push(annotationStorageResetModified);\n    }\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage?.serializable || null,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getPageXfa(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageXfa\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._cancelBound = this.cancel.bind(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    return shadow(this, \"isFontLoadingAPISupported\", !!this._document?.fonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deprecated } from \"./display_utils.js\";\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const obj = this._storage.get(key);\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * @deprecated\n   */\n  getOrCreateValue(key, defaultValue) {\n    deprecated(\"Use getValue instead.\");\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n    ctx._originalResetTransform = ctx.resetTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    try {\n      // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n      // \"TypeError: Method lineWidth called on incompatible receiver\n      //  #<CanvasRenderingContext2D>\".\n      const desc = Object.getOwnPropertyDescriptor(\n        Object.getPrototypeOf(ctx),\n        \"lineWidth\"\n      );\n\n      ctx._setLineWidth = desc.set;\n      ctx._getLineWidth = desc.get;\n\n      Object.defineProperty(ctx, \"lineWidth\", {\n        set: function setLineWidth(width) {\n          this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n        },\n        get: function getLineWidth() {\n          return this._getLineWidth();\n        },\n      });\n    } catch (_) {}\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        const m = this._transformMatrix;\n        const a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        const ad_bc = a * d - b * c;\n        const bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      const old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      const prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      const m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      const m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.resetTransform = function ctxResetTransform() {\n      this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n      ctx._originalResetTransform();\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      const cosValue = Math.cos(angle);\n      const sinValue = Math.sin(angle);\n\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nconst CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      let canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (const id in this.cache) {\n        const canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  const POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nconst CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    const backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          const lineWidth = this.getSinglePixelWidth();\n          const scaledLineWidth = this.current.lineWidth * scale;\n          if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          } else {\n            ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n          }\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.hypot(a, b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n\n          // #707 modified by ngx-extended-pdf-viewer\n          const measurement = ctx.measureText(character);\n          if (measurement) {\n            const measuredWidth = ((measurement.width * 1000) / fontSize) * fontSizeScale;\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n            }\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      let widthScale = Math.max(\n        Math.hypot(currentTransform[0], currentTransform[1]),\n        1\n      );\n      let heightScale = Math.max(\n        Math.hypot(currentTransform[2], currentTransform[3]),\n        1\n      );\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          this._cachedGetSinglePixelWidth = pixelHeight;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nconst ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    const type = raw[1];\n    const bbox = raw[2];\n    const colorStops = raw[3];\n    const p0 = raw[4];\n    const p1 = raw[5];\n    const r0 = raw[6];\n    const r1 = raw[7];\n    return {\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        let grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n          const c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nconst createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    const coords = context.coords,\n      colors = context.colors;\n    const bytes = data.data,\n      rowSize = data.width * 4;\n    let tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    const c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    const c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    const c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    const minY = Math.round(y1),\n      maxY = Math.round(y3);\n    let xa, car, cag, cab;\n    let xb, cbr, cbg, cbb;\n    for (let y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      const x1_ = Math.round(Math.min(xa, xb));\n      const x2_ = Math.round(Math.max(xa, xb));\n      let j = rowSize * y + x1_ * 4;\n      for (let x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    const ps = figure.coords;\n    const cs = figure.colors;\n    let i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        const verticesPerRow = figure.verticesPerRow;\n        const rows = Math.floor(ps.length / verticesPerRow) - 1;\n        const cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          let q = i * verticesPerRow;\n          for (let j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    let canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      const tmpCtx = tmpCanvas.context;\n\n      const data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        const bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    const coords = raw[2];\n    const colors = raw[3];\n    const figures = raw[4];\n    const bounds = raw[5];\n    const matrix = raw[6];\n    const bbox = raw[7];\n    const background = raw[8];\n    return {\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        let scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            const matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        const temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  const shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nconst TilingPattern = (function TilingPatternClosure() {\n  const PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      const operatorList = this.operatorList;\n      const bbox = this.bbox;\n      const xstep = this.xstep;\n      const ystep = this.ystep;\n      const paintType = this.paintType;\n      const tilingType = this.tilingType;\n      const color = this.color;\n      const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      const x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      const curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      const combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      const dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      const dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      const tmpCtx = tmpCanvas.context;\n      const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      let size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        const bboxWidth = x1 - x0;\n        const bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          const ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nconst WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      const errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    const program = gl.createProgram();\n    for (let i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      const errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  let currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  const smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  const smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  let smaskCache = null;\n\n  function initSmaskGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    const texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    const width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    const cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    const texture = createTexture(gl, layer, gl.TEXTURE0);\n    const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  const figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  const figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  let figuresCache = null;\n\n  function initFiguresGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    const cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    let count = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          const rows =\n            (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    const coords = new Float32Array(count * 2);\n    const colors = new Uint8Array(count * 3);\n    const coordsMap = context.coords,\n      colorsMap = context.colors;\n    let pIndex = 0,\n      cIndex = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      const figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          const cols = figure.verticesPerRow;\n          const rows = (ps.length / cols) | 0;\n          for (let row = 1; row < rows; row++) {\n            let offset = row * cols + 1;\n            for (let col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (let j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    const colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache?.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache?.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    this.quadrilaterals.forEach(quadrilateral => {\n      quadrilateral.className = className;\n    });\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setColor(event) {\n    const { detail, target } = event;\n    const { style } = target;\n    for (const name of [\n      \"bgColor\",\n      \"fillColor\",\n      \"fgColor\",\n      \"textColor\",\n      \"borderColor\",\n      \"strokeColor\",\n    ]) {\n      let color = detail[name];\n      if (!color) {\n        continue;\n      }\n      color = ColorConverters[`${color[0]}_HTML`](color.slice(1));\n      switch (name) {\n        case \"bgColor\":\n        case \"fillColor\":\n          style.backgroundColor = color;\n          break;\n        case \"fgColor\":\n        case \"textColor\":\n          style.color = color;\n          break;\n        case \"borderColor\":\n        case \"strokeColor\":\n          style.borderColor = color;\n          break;\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: event.target.value });\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        event.target.setSelectionRange(0, 0);\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const { detail } = event;\n          const actions = {\n            value() {\n              elementData.userValue = detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString() {\n              elementData.formattedValue = detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            focus() {\n              setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n            },\n            userName() {\n              // tooltip\n              event.target.title = detail.userName;\n            },\n            hidden() {\n              event.target.style.visibility = detail.hidden\n                ? \"hidden\"\n                : \"visible\";\n              storage.setValue(id, { hidden: detail.hidden });\n            },\n            editable() {\n              event.target.disabled = !detail.editable;\n            },\n            selRange() {\n              const [selStart, selEnd] = detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          Object.keys(detail)\n            .filter(name => name in actions)\n            .forEach(name => actions[name]());\n          this._setColor(event);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getValue(id, {\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, { value: event.target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            event.target.checked = detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n        this._setColor(event);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          storage.setValue(radio.getAttribute(\"id\"), { value: false });\n        }\n      }\n      storage.setValue(id, { value: target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const checked = pdfButtonValue === detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, { value: radio.checked });\n            }\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n        this._setColor(event);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    storage.getValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const options = selectElement.options;\n            const value = detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection() {\n            selectElement.multiple = true;\n          },\n          remove() {\n            const options = selectElement.options;\n            const index = detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear() {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert() {\n            const { index, displayValue, exportValue } = detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items() {\n            const { items } = detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices() {\n            const indices = new Set(detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n        this._setColor(event);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.forEach(element => {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    });\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        elements.forEach(element => {\n          element.style.transform = transform;\n        });\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nconst renderTextLayer = (function renderTextLayerClosure() {\n  const MAX_TEXT_DIVS_TO_RENDER = 100000;\n  const DEFAULT_FONT_SIZE = 30;\n  const DEFAULT_FONT_ASCENT = 0.8;\n  const ascentCache = new Map();\n\n  const NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function getAscent(fontFamily, ctx) {\n    const cachedAscent = ascentCache.get(fontFamily);\n    if (cachedAscent) {\n      return cachedAscent;\n    }\n\n    ctx.save();\n    ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n    const metrics = ctx.measureText(\"\");\n\n    // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n    if (ascent) {\n      ctx.restore();\n      const ratio = ascent / (ascent + descent);\n      ascentCache.set(fontFamily, ratio);\n      return ratio;\n    }\n\n    // Try basic heuristic to guess ascent/descent.\n    // Draw a g with baseline at 0,0 and then get the line\n    // number where a pixel has non-null red component (starting\n    // from bottom).\n    ctx.strokeStyle = \"red\";\n    ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n    ctx.strokeText(\"g\", 0, 0);\n    let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE)\n      .data;\n    descent = 0;\n    for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n      if (pixels[i] > 0) {\n        descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n        break;\n      }\n    }\n\n    // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n    // number where a pixel has non-null red component (starting\n    // from top).\n    ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n    ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n    pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n    ascent = 0;\n    for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n      if (pixels[i] > 0) {\n        ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n        break;\n      }\n    }\n\n    ctx.restore();\n\n    if (ascent) {\n      const ratio = ascent / (ascent + descent);\n      ascentCache.set(fontFamily, ratio);\n      return ratio;\n    }\n\n    ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n    return DEFAULT_FONT_ASCENT;\n  }\n\n  function appendText(task, geom, styles, ctx) {\n    // Initialize all used properties to keep the caches monomorphic.\n    const textDiv = document.createElement(\"span\");\n    const textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    const tx = Util.transform(task._viewport.transform, geom.transform);\n    let angle = Math.atan2(tx[1], tx[0]);\n    const style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    const fontHeight = Math.hypot(tx[2], tx[3]);\n    const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // geom.dir may be 'ttb' for vertical texts.\n    textDiv.dir = geom.dir;\n\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      let angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      const divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      const divHeight = fontHeight;\n\n      let m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    const textDivs = task._textDivs;\n    const capability = task._capability;\n    const textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (let i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    const bounds = task._bounds;\n    const viewport = task._viewport;\n\n    const expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (let i = 0; i < expanded.length; i++) {\n      const div = bounds[i].div;\n      const divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      const e = expanded[i],\n        b = bounds[i];\n      const m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      const ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        const t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    const bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    const expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      const e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    const fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    const horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      let i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      let j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      let horizonPart, affectedBoundary;\n      let q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        let xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      const changedHorizon = [];\n      let lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        const useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        let used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      const affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache, this._layoutTextCtx);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        try { // #707 modified by ngx-extended-pdf-viewer\n          const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n          if (width > 0) {\n            textDivProperties.scale = textDivProperties.canvasWidth / width;\n            transform = `scaleX(${textDivProperties.scale})`;\n          }\n        } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    const task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaLayer {\n  static setAttributes(html, attrs) {\n    for (const [key, value] of Object.entries(attrs)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        html.setAttribute(key, value);\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n  }\n\n  static render(parameters) {\n    const root = parameters.xfa;\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      XfaLayer.setAttributes(rootHtml, root.attributes);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const coeffs = parameters.viewport.transform.join(\",\");\n    rootDiv.style.transform = `matrix(${coeffs})`;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      const childHtml = document.createElement(name);\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        XfaLayer.setAttributes(childHtml, child.attributes);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}