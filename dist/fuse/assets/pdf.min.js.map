{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/shared/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/webpack/startup"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","_display_utils","__w_pdfjs_require__","_api","_util","_annotation_layer","_worker_options","_text_layer","_svg","PDFNetworkStream","require","PDFFetchStream","isFetchSupported","setPDFNetworkStreamFactory","params","isValidFetchUrl","url","addLinkAttributes","link","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","SVG_NS","BaseCanvasFactory","constructor","unreachable","create","reset","canvasAndContext","canvas","width","height","destroy","DOMCanvasFactory","ownerDocument","globalThis","super","_document","createElement","context","BaseCMapReaderFactory","baseUrl","isCompressed","[object Object]","name","compressionType","CMapCompressionType","BINARY","_fetchData","catch","reason","DOMCMapReaderFactory","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","DONE","responseText","DOMSVGFactory","svg","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","StatTimer","started","Object","times","time","warn","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","Response","prototype","ReadableStream","protocol","URL","ex","pdfDateStringRegex","PDFDateString","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","i","arrayByteLength","pos","data","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createPromiseCapability","capability","isSettled","get","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","encodeToXmlString","str","buffer","ii","char","entity","XMLEntities","toUpperCase","escapeString","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","every","element","index","isAscii","test","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromEntries","iterable","objectSize","obj","setVerbosityLevel","level","Number","string32","value","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","map","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","createObjectURL","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","b1","b2","b3","60","62","38","34","39","_font_loader","_node_utils","_annotation_storage","_api_compatibility","_canvas","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","window","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","createPDFNetworkStream","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","rangeTransport","worker","key","pdfBytes","isNaN","location","href","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","ignoreErrors","fontExtraProperties","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","saveDocument","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","annotationsPromise","annotationsIntent","_jsActionsPromise","getPageJSActions","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","optionalContentConfigPromise","renderingIntent","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","defer","_listeners","_defer","_deferred","postMessage","forEach","cloned","WeakMap","cloneValue","transfers","byteOffset","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","bind","_params","cMapUrl","CMapReaderFactory","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","loadingTaskSettled","settled","page","terminated","annotationStorageResetModified","pdfDocument","resetModified","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","filename","results","OptionalContentConfig","metadata","Metadata","contentDispositionFilename","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","add","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","__non_webpack_require__","Canvas","fs","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getOrCreateValue","defaultValue","setValue","modified","entry","val","_setModified","getAll","compatibilityParams","checkFontFace","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","backdrop","isEnabled","genericComposeSMask","subtype","hasBackdrop","composeFn","chunkSize","row","chunkHeight","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","steps","fnId","OPS","depObjId","objsPool","CanvasGraphics_endDrawing","drawImage","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","style","lineCap","CanvasGraphics_setLineJoin","lineJoin","CanvasGraphics_setMiterLimit","limit","miterLimit","CanvasGraphics_setDash","dashArray","dashPhase","CanvasGraphics_setGState","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","resumeSMaskGroup","CanvasGraphics_resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","xw","yh","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","getSinglePixelWidth","scaledLineWidth","resetTransform","CanvasGraphics_closeStroke","CanvasGraphics_fill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","beginPath","path","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","mode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measurement","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","CanvasGraphics_showType3Text","spacingLength","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","arguments","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","strokeStyle","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","isPatternFill","COMPILE_TYPE3_GLYPHS","compileType3Glyph","width1","j0","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","maskCanvas","skewX","skewY","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","w","h","CanvasGraphics_paintInlineImageXObject","widthScale","imgToPaint","tmpCanvas","tmpCtx","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","CanvasGraphics_paintInlineImageXObjectGroup","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","visible","CanvasGraphics_beginMarkedContentProps","isVisible","isContentVisible","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","CanvasGraphics_getCanvasPosition","CanvasGraphics_isContentVisible","op","raw","shadingIR","ShadingIRs","applyBoundingBox","Path2D","region","fromIR","RadialAxial_fromIR","colorStops","r1","RadialAxial_getPattern","grad","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","Dummy_fromIR","Dummy_fromIR_getPattern","TilingPatternClosure","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","_xml_parser","_repair","xmlDocument","SimpleXMLParser","lowerCaseName","parser","_metadataMap","_parse","_data","codes","d1","d2","d3","chars","substring","_getSequence","nodeName","node","_getCreators","hasChildNodes","seqNode","authors","trim","rdf","firstChild","nextSibling","childNodes","getRaw","XMLParserErrorCode","isWhitespace","ch","SimpleDOMNode","nodeValue","parentNode","child","join","searchNode","component","stack","parent","siblingPos","currentPos","newPos","dump","attributes","attribute","XMLParserBase","_resolveEntities","onResolveEntity","_parseContent","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","hasAttributes","_currentFragment","_stack","_errorCode","_hasAttributes","_lowerCaseName","parseFromString","isWhitespaceString","toLowerCase","isEmpty","lastElement","OptionalContentGroup","creator","_order","_groups","order","groups","off","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","COMPILE_STATUS","errorMsg","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","LINK_STATUS","createTexture","textureId","texture","CLAMP_TO_EDGE","NEAREST","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskCache","figuresCache","initSmaskGL","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","Float32Array","STATIC_DRAW","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","jj","coordsBuffer","colorsBuffer","colorLocation","_scripting_utils","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","hasAppearance","fieldValue","storage","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","valueAsString","activeElement","focus","preventScroll","userName","hidden","editable","selRange","selStart","selEnd","ColorConverters","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","change","readOnly","fieldName","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","checkbox","buttonValue","radio","radioId","selectElement","combo","options","multiSelect","option","optionElement","displayValue","exportValue","includes","getValue","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","setAttribute","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","hasAttribute","removeAttribute","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","_download","downloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","elements","makeColorComp","G","components","RGB_HTML","CMYK_RGB","renderTextLayer","renderTextLayerClosure","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","tx","fontName","fontHeight","fontAscent","ascent","descent","fontFamily","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","textDivs","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_bounds","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","TextLayer_cancel","_processItems","len","styleCache","_layoutText","measureText","fingerprintingProtectionIsActiveException","_render","TextLayer_render","timeout","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opList","fn","opListToTree","opTree","opListElement","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","NetworkManager","isHttp","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","from","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","_readCapability","__webpack_module_cache__","moduleId","__webpack_modules__"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n/**\n * Gets the file name from a given URL.\n * @param {string} url\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensures that the returned Object has a `null` prototype.\nfunction objectFromEntries(iterable) {\n  return Object.assign(Object.create(null), Object.fromEntries(iterable));\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(String.fromCharCode((char >> 8) & 0xff));\n    buf.push(String.fromCharCode(char & 0xff));\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  encodeToXmlString,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromEntries,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object<string, boolean>} streamTypes - Used stream types in the\n *   document (an item is set to true if specific stream ID was used in the\n *   document).\n * @property {Object<string, boolean>} fontTypes - Used font types in the\n *   document (an item is set to true if specific font ID was used in the\n *   document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src -\n *   Can be a URL to where a PDF file is located, a typed array (Uint8Array)\n *   already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   */\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage: annotationStorage?.getAll() || null,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this._jsActionsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get loadingTaskSettled() {\n    return this.loadingTask._capability.settled;\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.loadingTaskSettled) {\n      const annotationStorageResetModified = this.loadingTask.promise\n        .then(pdfDocument => {\n          // Avoid initializing the `annotationStorage` if it doesn't exist.\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        })\n        .catch(() => {});\n      waitOn.push(annotationStorageResetModified);\n    }\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage?.getAll() || null,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    return shadow(this, \"isFontLoadingAPISupported\", !!this._document?.fonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromEntries } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists\n   * or store and return the default value\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getOrCreateValue(key, defaultValue) {\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    if (this._storage.size === 0) {\n      return null;\n    }\n    return objectFromEntries(this._storage);\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        const m = this._transformMatrix;\n        const a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        const ad_bc = a * d - b * c;\n        const bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      const old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      const prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      const m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      const m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      const cosValue = Math.cos(angle);\n      const sinValue = Math.sin(angle);\n\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nconst CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      let canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (const id in this.cache) {\n        const canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  const POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nconst CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    const backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          const lineWidth = this.getSinglePixelWidth();\n          const scaledLineWidth = this.current.lineWidth * scale;\n          if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          } else {\n            ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n          }\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n\n          // #707 modified by ngx-extended-pdf-viewer\n          const measurement = ctx.measureText(character);\n          if (measurement) {\n            const measuredWidth = ((measurement.width * 1000) / fontSize) * fontSizeScale;\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n            }\n          }\n          // #707 end of modification by ngx-extended-pdf-viewer\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      const a = currentTransform[0],\n        b = currentTransform[1];\n      let widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      const c = currentTransform[2],\n        d = currentTransform[3];\n      let heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          // The multiplication by the constant 1.0000001 is here to have\n          // a number slightly greater than what we \"exactly\" want.\n          this._cachedGetSinglePixelWidth = pixelHeight * 1.0000001;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nconst ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    const type = raw[1];\n    const bbox = raw[2];\n    const colorStops = raw[3];\n    const p0 = raw[4];\n    const p1 = raw[5];\n    const r0 = raw[6];\n    const r1 = raw[7];\n    return {\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        let grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n          const c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nconst createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    const coords = context.coords,\n      colors = context.colors;\n    const bytes = data.data,\n      rowSize = data.width * 4;\n    let tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    const c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    const c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    const c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    const minY = Math.round(y1),\n      maxY = Math.round(y3);\n    let xa, car, cag, cab;\n    let xb, cbr, cbg, cbb;\n    for (let y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      const x1_ = Math.round(Math.min(xa, xb));\n      const x2_ = Math.round(Math.max(xa, xb));\n      let j = rowSize * y + x1_ * 4;\n      for (let x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    const ps = figure.coords;\n    const cs = figure.colors;\n    let i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        const verticesPerRow = figure.verticesPerRow;\n        const rows = Math.floor(ps.length / verticesPerRow) - 1;\n        const cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          let q = i * verticesPerRow;\n          for (let j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    let canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      const tmpCtx = tmpCanvas.context;\n\n      const data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        const bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    const coords = raw[2];\n    const colors = raw[3];\n    const figures = raw[4];\n    const bounds = raw[5];\n    const matrix = raw[6];\n    const bbox = raw[7];\n    const background = raw[8];\n    return {\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        let scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            const matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        const temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  const shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nconst TilingPattern = (function TilingPatternClosure() {\n  const PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      const operatorList = this.operatorList;\n      const bbox = this.bbox;\n      const xstep = this.xstep;\n      const ystep = this.ystep;\n      const paintType = this.paintType;\n      const tilingType = this.tilingType;\n      const color = this.color;\n      const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      const x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      const curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      const combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      const dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      const dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      const tmpCtx = tmpCanvas.context;\n      const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      let size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        const bboxWidth = x1 - x0;\n        const bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          const ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, objectFromEntries } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"../shared/xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser({ lowerCaseName: true });\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n    this._data = data;\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _getSequence(entry) {\n    const name = entry.nodeName;\n    if (name !== \"rdf:bag\" && name !== \"rdf:seq\" && name !== \"rdf:alt\") {\n      return null;\n    }\n\n    return entry.childNodes.filter(node => node.nodeName === \"rdf:li\");\n  }\n\n  _getCreators(entry) {\n    if (entry.nodeName !== \"dc:creator\") {\n      return false;\n    }\n    if (!entry.hasChildNodes()) {\n      return true;\n    }\n\n    // Child must be a Bag (unordered array) or a Seq.\n    const seqNode = entry.childNodes[0];\n    const authors = this._getSequence(seqNode) || [];\n    this._metadataMap.set(\n      entry.nodeName,\n      authors.map(node => node.textContent.trim())\n    );\n\n    return true;\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    if (!rdf || rdf.nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    for (const desc of rdf.childNodes) {\n      if (desc.nodeName !== \"rdf:description\") {\n        continue;\n      }\n\n      for (const entry of desc.childNodes) {\n        const name = entry.nodeName;\n        if (name === \"#text\") {\n          continue;\n        }\n        if (this._getCreators(entry)) {\n          continue;\n        }\n        this._metadataMap.set(name, entry.textContent.trim());\n      }\n    }\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromEntries(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nimport { encodeToXmlString } from \"./util.js\";\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCodePoint(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCodePoint(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n\n  /**\n   * Search a node in the tree with the given path\n   * foo.bar[nnn], i.e. find the nnn-th node named\n   * bar under a node named foo.\n   *\n   * @param {Array} paths - an array of objects as\n   * returned by {parseXFAPath}.\n   * @param {number} pos - the current position in\n   * the paths array.\n   * @returns {SimpleDOMNode} The node corresponding\n   * to the path or null if not found.\n   */\n  searchNode(paths, pos) {\n    if (pos >= paths.length) {\n      return this;\n    }\n\n    const component = paths[pos];\n    const stack = [];\n    let node = this;\n\n    while (true) {\n      if (component.name === node.nodeName) {\n        if (component.pos === 0) {\n          const res = node.searchNode(paths, pos + 1);\n          if (res !== null) {\n            return res;\n          }\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          const [parent] = stack.pop();\n          let siblingPos = 0;\n          for (const child of parent.childNodes) {\n            if (component.name === child.nodeName) {\n              if (siblingPos === component.pos) {\n                return child.searchNode(paths, pos + 1);\n              }\n              siblingPos++;\n            }\n          }\n          // We didn't find the correct sibling\n          // so just return the first found node\n          return node.searchNode(paths, pos + 1);\n        }\n      }\n\n      if (node.childNodes && node.childNodes.length !== 0) {\n        stack.push([node, 0]);\n        node = node.childNodes[0];\n      } else if (stack.length === 0) {\n        return null;\n      } else {\n        while (stack.length !== 0) {\n          const [parent, currentPos] = stack.pop();\n          const newPos = currentPos + 1;\n          if (newPos < parent.childNodes.length) {\n            stack.push([parent, newPos]);\n            node = parent.childNodes[newPos];\n            break;\n          }\n        }\n        if (stack.length === 0) {\n          return null;\n        }\n      }\n    }\n  }\n\n  dump(buffer) {\n    if (this.nodeName === \"#text\") {\n      buffer.push(encodeToXmlString(this.nodeValue));\n      return;\n    }\n\n    buffer.push(`<${this.nodeName}`);\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        buffer.push(\n          ` ${attribute.name}=\"${encodeToXmlString(attribute.value)}\"`\n        );\n      }\n    }\n    if (this.hasChildNodes()) {\n      buffer.push(\">\");\n      for (const child of this.childNodes) {\n        child.dump(buffer);\n      }\n      buffer.push(`</${this.nodeName}>`);\n    } else if (this.nodeValue) {\n      buffer.push(`>${encodeToXmlString(this.nodeValue)}</${this.nodeName}>`);\n    } else {\n      buffer.push(\"/>\");\n    }\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor({ hasAttributes = false, lowerCaseName = false }) {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n    this._hasAttributes = hasAttributes;\n    this._lowerCaseName = lowerCaseName;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    if (this._lowerCaseName) {\n      name = name.toLowerCase();\n    }\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    if (this._hasAttributes) {\n      node.attributes = attributes;\n    }\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleDOMNode, SimpleXMLParser };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromEntries, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    if (!this._groups.size) {\n      return null;\n    }\n    return objectFromEntries(this._groups);\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nconst WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      const errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    const program = gl.createProgram();\n    for (let i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      const errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  let currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  const smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  const smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  let smaskCache = null;\n\n  function initSmaskGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    const texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    const width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    const cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    const texture = createTexture(gl, layer, gl.TEXTURE0);\n    const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  const figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  const figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  let figuresCache = null;\n\n  function initFiguresGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    const cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    let count = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          const rows =\n            (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    const coords = new Float32Array(count * 2);\n    const colors = new Uint8Array(count * 3);\n    const coordsMap = context.coords,\n      colorsMap = context.colors;\n    let pIndex = 0,\n      cIndex = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      const figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          const cols = figure.verticesPerRow;\n          const rows = (ps.length / cols) | 0;\n          for (let row = 1; row < rows; row++) {\n            let offset = row * cols + 1;\n            for (let col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (let j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    const colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache?.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache?.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    this.quadrilaterals.forEach(quadrilateral => {\n      quadrilateral.className = className;\n    });\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const textContent = storage.getOrCreateValue(id, {\n        value: this.data.fieldValue,\n      }).value;\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: event.target.value });\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        event.target.setSelectionRange(0, 0);\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", function (event) {\n          const { detail } = event;\n          const actions = {\n            value() {\n              elementData.userValue = detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString() {\n              elementData.formattedValue = detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            focus() {\n              setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n            },\n            userName() {\n              // tooltip\n              event.target.title = detail.userName;\n            },\n            hidden() {\n              event.target.style.visibility = detail.hidden\n                ? \"hidden\"\n                : \"visible\";\n              storage.setValue(id, { hidden: detail.hidden });\n            },\n            editable() {\n              event.target.disabled = !detail.editable;\n            },\n            selRange() {\n              const [selStart, selEnd] = detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n            strokeColor() {\n              const color = detail.strokeColor;\n              event.target.style.color = ColorConverters[`${color[0]}_HTML`](\n                color.slice(1)\n              );\n            },\n          };\n          Object.keys(detail)\n            .filter(name => name in actions)\n            .forEach(name => actions[name]());\n        });\n\n        if (this.data.actions) {\n          // Even if the field hasn't any actions\n          // leaving it can still trigger some actions with Calculate\n          element.addEventListener(\"keydown\", event => {\n            elementData.beforeInputValue = event.target.value;\n            // if the key is one of Escape, Enter or Tab\n            // then the data are committed\n            let commitKey = -1;\n            if (event.key === \"Escape\") {\n              commitKey = 0;\n            } else if (event.key === \"Enter\") {\n              commitKey = 2;\n            } else if (event.key === \"Tab\") {\n              commitKey = 3;\n            }\n            if (commitKey === -1) {\n              return;\n            }\n            // Save the entered value\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          });\n          const _blurListener = blurListener;\n          blurListener = null;\n          element.addEventListener(\"blur\", event => {\n            if (this._mouseState.isDown) {\n              // Focus out using the mouse: data are committed\n              elementData.userValue = event.target.value;\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: event.target.value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: event.target.selectionStart,\n                  selEnd: event.target.selectionEnd,\n                },\n              });\n            }\n            _blurListener(event);\n          });\n          element.addEventListener(\"mousedown\", event => {\n            elementData.beforeInputValue = event.target.value;\n            elementData.beforeInputSelectionRange = null;\n          });\n          element.addEventListener(\"keyup\", event => {\n            // keyup is triggered after input\n            if (event.target.selectionStart === event.target.selectionEnd) {\n              elementData.beforeInputSelectionRange = null;\n            }\n          });\n          element.addEventListener(\"select\", event => {\n            elementData.beforeInputSelectionRange = [\n              event.target.selectionStart,\n              event.target.selectionEnd,\n            ];\n          });\n\n          if (\"Keystroke\" in this.data.actions) {\n            // We should use beforeinput but this\n            // event isn't available in Firefox\n            element.addEventListener(\"input\", event => {\n              let selStart = -1;\n              let selEnd = -1;\n              if (elementData.beforeInputSelectionRange) {\n                [selStart, selEnd] = elementData.beforeInputSelectionRange;\n              }\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: elementData.beforeInputValue,\n                  change: event.data,\n                  willCommit: false,\n                  selStart,\n                  selEnd,\n                },\n              });\n            });\n          }\n\n          this._setEventListeners(\n            element,\n            [\n              [\"focus\", \"Focus\"],\n              [\"blur\", \"Blur\"],\n              [\"mousedown\", \"Mouse Down\"],\n              [\"mouseenter\", \"Mouse Enter\"],\n              [\"mouseleave\", \"Mouse Exit\"],\n              [\"mouseup\", \"Mouse Up\"],\n            ],\n            event => event.target.value\n          );\n        }\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(id, {\n      value: data.fieldValue && data.fieldValue !== \"Off\",\n    }).value;\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, { value: event.target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            event.target.checked = detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"pdfButtonValue\", data.buttonValue);\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          storage.setValue(radio.getAttribute(\"id\"), { value: false });\n        }\n      }\n      storage.setValue(id, { value: target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const fieldValue = detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              if (fieldValue === radio.getAttribute(\"pdfButtonValue\")) {\n                radio.setAttribute(\"checked\", true);\n                storage.setValue(radioId, { value: true });\n              } else {\n                storage.setValue(radioId, { value: false });\n              }\n            }\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getOrCreateValue` is\n    // used and the full array of field values is stored.\n    storage.getOrCreateValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    function getValue(event) {\n      const options = event.target.options;\n      return options[options.selectedIndex].value;\n    }\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const options = event.target.options;\n            const value = detail.value;\n            const i = options.indexOf(value);\n            if (i !== -1) {\n              options.selectedIndex = i;\n              storage.setValue(id, { value });\n            }\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, { hidden: detail.hidden });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const value = getValue(event);\n        storage.setValue(id, { value });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            changeEx: value,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.forEach(element => {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    });\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms:\n          typeof parameters.renderInteractiveForms === \"boolean\"\n            ? parameters.renderInteractiveForms\n            : true,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        elements.forEach(element => {\n          element.style.transform = transform;\n        });\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nconst renderTextLayer = (function renderTextLayerClosure() {\n  const MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  const NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    const textDiv = document.createElement(\"span\");\n    const textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    const tx = Util.transform(task._viewport.transform, geom.transform);\n    let angle = Math.atan2(tx[1], tx[0]);\n    const style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    const fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    let fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      let angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      const divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      const divHeight = fontHeight;\n\n      let m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    const textDivs = task._textDivs;\n    const capability = task._capability;\n    const textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (let i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    const bounds = task._bounds;\n    const viewport = task._viewport;\n\n    const expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (let i = 0; i < expanded.length; i++) {\n      const div = bounds[i].div;\n      const divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      const e = expanded[i],\n        b = bounds[i];\n      const m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      const ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        const t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    const bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    const expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      const e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    const fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    const horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      let i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      let j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      let horizonPart, affectedBoundary;\n      let q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        let xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      const changedHorizon = [];\n      let lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        const useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        let used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      const affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        try { // #707 modified by ngx-extended-pdf-viewer\n\t        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n\t        if (width > 0) {\n\t          textDivProperties.scale = textDivProperties.canvasWidth / width;\n\t          transform = `scaleX(${textDivProperties.scale})`;\n\t        }\n\t      } catch (fingerprintingProtectionIsActiveException)  {} // #707 modified by ngx-extended-pdf-viewer\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    const task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __w_pdfjs_require__(0);\n"]}